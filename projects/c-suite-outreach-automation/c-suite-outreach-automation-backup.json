{
  "name": "C-Suite Outreach Automation",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
      "name": "Every 2 Hours Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        240,
        300
      ],
      "notes": "2時間ごとにワークフローを自動実行。LinkedInからCスイートリードを検索し、処理を開始する。"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.airtop.com/v1/scrape",
        "authentication": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "platform",
              "value": "linkedin"
            },
            {
              "name": "searchType",
              "value": "posts"
            },
            {
              "name": "keywords",
              "value": "={{ [\"非効率\", \"手作業\", \"時間の無駄\", \"自動化が必要\", \"inefficient\", \"manual process\", \"wasting time\", \"need automation\"] }}"
            },
            {
              "name": "titleFilters",
              "value": "={{ [\"CEO\", \"CTO\", \"CDO\", \"VP Operations\", \"Chief Executive\", \"Chief Technology\", \"Chief Digital\"] }}"
            },
            {
              "name": "companySize",
              "value": "={{ {\"min\": 50, \"max\": 5000} }}"
            },
            {
              "name": "pagination",
              "value": "={{ {\"page\": 1, \"limit\": 50} }}"
            }
          ]
        },
        "options": {
          "timeout": 30000,
          "retry": {
            "maxRetries": 3,
            "retryInterval": 2000
          }
        }
      },
      "id": "b2c3d4e5-f6a7-8901-bcde-f23456789012",
      "name": "Airtop Scraper API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        450,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "airtop-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "LinkedInから痛みのキーワードを含むCスイート経営層の投稿を検索。ページネーション対応、レート制限を考慮したリトライ設定済み。"
    },
    {
      "parameters": {
        "functionCode": "// LinkedIn投稿データの解析と構造化\nconst items = $input.all();\nconst parsedLeads = [];\n\n// エラーハンドリング\nif (!items[0]?.json?.data || !Array.isArray(items[0].json.data)) {\n  return [{\n    json: {\n      error: true,\n      message: \"LinkedIn scraping failed or no data returned\",\n      timestamp: new Date().toISOString()\n    }\n  }];\n}\n\nconst posts = items[0].json.data;\n\n// 各投稿を解析\nfor (const post of posts) {\n  try {\n    // デフォルト値を設定\n    const lead = {\n      id: post.id || `lead_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      linkedinUrl: post.profileUrl || '',\n      name: post.authorName || 'Unknown',\n      title: post.authorTitle || '',\n      company: post.companyName || '',\n      companySize: post.companySize || 'Unknown',\n      postContent: post.content || '',\n      postUrl: post.postUrl || '',\n      painKeywords: [],\n      engagementScore: 0,\n      scrapedAt: new Date().toISOString()\n    };\n    \n    // 痛みのキーワードを抽出\n    const painKeywords = [\n      '非効率', '手作業', '時間の無駄', '自動化が必要',\n      'inefficient', 'manual process', 'wasting time', 'need automation'\n    ];\n    \n    lead.painKeywords = painKeywords.filter(keyword => \n      lead.postContent && lead.postContent.toLowerCase().includes(keyword.toLowerCase())\n    );\n    \n    // エンゲージメントスコアを計算\n    lead.engagementScore = \n      (post.likes || 0) * 1 + \n      (post.comments || 0) * 3 + \n      (post.shares || 0) * 5;\n    \n    parsedLeads.push({\n      json: lead,\n      pairedItem: { item: 0 }\n    });\n    \n  } catch (error) {\n    console.error('Error parsing lead:', error);\n    continue;\n  }\n}\n\n// 解析結果を返す\nreturn parsedLeads.length > 0 ? parsedLeads : [{\n  json: {\n    error: true,\n    message: \"No valid leads parsed from LinkedIn data\",\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "c3d4e5f6-a7b8-9012-cdef-345678901234",
      "name": "Parse LinkedIn Results",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        650,
        300
      ],
      "notes": "LinkedInスクレイピング結果を解析し、構造化されたリードデータに変換。役職、企業名、投稿内容、エンゲージメント指標を抽出。"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.title }}",
              "operation": "contains",
              "value2": "CEO"
            },
            {
              "value1": "={{ $json.title }}",
              "operation": "contains",
              "value2": "CTO"
            },
            {
              "value1": "={{ $json.title }}",
              "operation": "contains",
              "value2": "CDO"
            },
            {
              "value1": "={{ $json.title }}",
              "operation": "contains",
              "value2": "VP Operations"
            },
            {
              "value1": "={{ $json.title }}",
              "operation": "contains",
              "value2": "Chief Executive"
            },
            {
              "value1": "={{ $json.title }}",
              "operation": "contains",
              "value2": "Chief Technology"
            },
            {
              "value1": "={{ $json.title }}",
              "operation": "contains",
              "value2": "Chief Digital"
            }
          ],
          "number": [
            {
              "value1": "={{ parseInt($json.companySize) }}",
              "operation": "larger",
              "value2": 49
            },
            {
              "value1": "={{ parseInt($json.companySize) }}",
              "operation": "smaller",
              "value2": 5001
            }
          ],
          "boolean": [
            {
              "value1": "={{ $json.company && !$json.company.toLowerCase().includes('consultant') && !$json.company.toLowerCase().includes('agency') && !$json.company.toLowerCase().includes('競合社名') }}",
              "value2": true
            }
          ]
        },
        "combineOperation": "or"
      },
      "id": "d4e5f6a7-b8c9-0123-defa-456789012345",
      "name": "Filter C-Suite Only",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        850,
        300
      ],
      "notes": "Cスイート経営層のみをフィルタリング。役職条件（CEO/CTO/CDO/VP Operations）、企業規模（50-5000人）、除外条件（コンサルタント/代理店/競合）を適用。"
    },
    {
      "parameters": {
        "method": "GET",
        "url": "=https://company.clearbit.com/v2/companies/find?domain={{ ($json.company || '').toLowerCase().replace(' ', '').replace(',', '').replace('inc', '').replace('corp', '').trim() }}.com",
        "authentication": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.apiKey}}"
            }
          ]
        },
        "options": {
          "timeout": 10000,
          "retry": {
            "maxRetries": 3,
            "retryInterval": 1000
          }
        }
      },
      "id": "e5f6a7b8-c9d0-1234-efab-567890123456",
      "name": "Clearbit Enrichment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1050,
        200
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "clearbit-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "Clearbit APIで企業の詳細情報を取得。業界、規模、収益範囲、技術スタック、資金調達情報を収集。"
    },
    {
      "parameters": {
        "operation": "domainSearch",
        "domain": "={{ ($json.company || '').toLowerCase().replace(' ', '').replace(',', '').replace('inc', '').replace('corp', '').trim() + '.com' }}",
        "filters": {
          "type": "personal",
          "seniority": "executive"
        },
        "returnAll": true,
        "authentication": "apiKey"
      },
      "id": "f6a7b8c9-d0e1-2345-fabc-678901234567",
      "name": "Hunter.io Email Finder",
      "type": "n8n-nodes-base.hunter",
      "typeVersion": 1,
      "position": [
        1050,
        300
      ],
      "credentials": {
        "hunterApi": {
          "id": "hunter-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "Hunter.ioで経営層のメールアドレスを検索。到達可能性スコアと信頼度レベルも取得。"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apollo.io/v1/mixed_people/search",
        "authentication": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "x-api-key",
              "value": "={{$credentials.apiKey}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "person_titles",
              "value": "={{ [$json.title] }}"
            },
            {
              "name": "organization_name",
              "value": "={{ $json.company }}"
            }
          ]
        },
        "options": {
          "timeout": 10000,
          "retry": {
            "maxRetries": 3,
            "retryInterval": 1000
          }
        }
      },
      "id": "a7b8c9d0-e1f2-3456-abcd-789012345678",
      "name": "Apollo Intent Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1050,
        400
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "apollo-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "Apollo.ioでインテントシグナルと採用トレンドを収集。自動化関連の役職採用パターンを分析。"
    },
    {
      "parameters": {
        "method": "GET",
        "url": "=https://api.zoominfo.com/lookup/company?companyName={{ encodeURIComponent($json.company) }}",
        "authentication": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.apiKey}}"
            }
          ]
        },
        "options": {
          "timeout": 10000,
          "retry": {
            "maxRetries": 3,
            "retryInterval": 1000
          }
        }
      },
      "id": "b8c9d0e1-f2a3-4567-bcde-890123456789",
      "name": "ZoomInfo Insights",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1050,
        500
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "zoominfo-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "ZoomInfoで競合情報、最近の企業ニュース、市場ポジショニングデータを取得。"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "c9d0e1f2-a3b4-5678-cdef-901234567890",
      "name": "Merge Enriched Data",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1350,
        350
      ],
      "notes": "並列実行された各APIからのデータを統合。Clearbit、Hunter.io、Apollo.io、ZoomInfoの情報を1つのリードオブジェクトにマージ。"
    },
    {
      "parameters": {
        "functionCode": "// Airtableケーススタディのキャッシュ管理\nconst CACHE_DURATION = 24 * 60 * 60 * 1000; // 24時間\nconst cacheKey = 'caseStudiesCache';\n\n// キャッシュチェック\nconst cachedData = $workflow.staticData[cacheKey];\nconst now = Date.now();\n\nif (cachedData && cachedData.timestamp && (now - cachedData.timestamp) < CACHE_DURATION) {\n  // キャッシュが有効な場合\n  const industry = $json.companyDetails?.industry || 'Technology';\n  const companySize = parseInt($json.companyDetails?.employeeCount || '100');\n  \n  // 業界と企業規模でフィルタリング\n  const relevantStudies = cachedData.studies.filter(study => {\n    const industryMatch = study.industry.toLowerCase().includes(industry.toLowerCase()) || \n                         study.industry === 'All';\n    const sizeMatch = study.companySize === 'All' || \n                     (study.minSize <= companySize && study.maxSize >= companySize);\n    return industryMatch && sizeMatch;\n  });\n  \n  return [{\n    json: {\n      ...($json),\n      caseStudies: relevantStudies.slice(0, 3),\n      cacheHit: true\n    }\n  }];\n}\n\n// キャッシュがない場合は、次のAirtableノードでデータを取得\nreturn [{\n  json: {\n    ...($json),\n    needsCaseStudyFetch: true,\n    cacheHit: false\n  }\n}];"
      },
      "id": "e1f2a3b4-c5d6-7890-efab-123456789012",
      "name": "Cache Manager",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1050,
        700
      ],
      "notes": "ケーススタディデータの24時間キャッシュを管理。キャッシュヒット時は業界と企業規模でフィルタリングして返却、ミス時は次のノードでAirtableから取得。"
    },
    {
      "parameters": {
        "operation": "search",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Case Studies",
        "options": {
          "filterByFormula": "=AND({Status} = 'Published', OR(FIND(LOWER('{{ $json.companyDetails.industry }}'), LOWER({Industry})) > 0, {Industry} = 'All'))",
          "sort": [
            {
              "field": "ROI Percentage",
              "direction": "desc"
            }
          ],
          "maxRecords": 5,
          "fields": [
            "Title",
            "Client Company",
            "Industry",
            "Company Size",
            "Problem Statement",
            "Solution",
            "ROI Percentage",
            "Time to Value",
            "Testimonial",
            "PDF Link"
          ]
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "d0e1f2a3-b4c5-6789-defa-012345678901",
      "name": "Case Study Database",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        1050,
        600
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "Airtableのケーススタディデータベースから、業界と企業規模でマッチングする成功事例を検索。ROI順でソートし、最大5件を取得。24時間キャッシュ対応。"
    },
    {
      "parameters": {
        "model": "gpt-4-turbo-preview",
        "prompt": {
          "messages": [
            {
              "role": "system",
              "content": "You are an expert B2B sales analyst specializing in identifying pain points and automation opportunities. Analyze the provided C-Suite executive's LinkedIn post and company data to identify their main business challenges and readiness for automation solutions."
            },
            {
              "role": "user",
              "content": "=Analyze this C-Suite executive's data:\n\nName: {{ $json.name }}\nTitle: {{ $json.title }}\nCompany: {{ $json.company }}\nIndustry: {{ $json.companyDetails.industry }}\nCompany Size: {{ $json.companyDetails.employeeCount }} employees\nRevenue: {{ $json.companyDetails.revenue }}\n\nLinkedIn Post Content:\n{{ $json.postContent }}\n\nPain Keywords Found: {{ $json.painKeywords.join(', ') }}\n\nIntent Signals: {{ $json.intentSignals.join(', ') }}\n\nProvide a structured analysis with:\n1. Top 3 pain points (ranked by severity)\n2. Automation readiness score (1-10)\n3. Estimated time wasted on manual processes (hours/week)\n4. Primary business impact of current inefficiencies\n5. Recommended n8n automation solution focus area"
            }
          ]
        },
        "options": {
          "temperature": 0.3,
          "maxTokens": 500,
          "topP": 0.9,
          "frequencyPenalty": 0.1,
          "presencePenalty": 0.1,
          "timeout": 20000,
          "response_format": {
            "type": "json_object"
          }
        }
      },
      "id": "f2a3b4c5-d6e7-8901-fabc-234567890123",
      "name": "AI Pain Analysis",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [
        1550,
        300
      ],
      "credentials": {
        "openAiApi": {
          "id": "openai-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "OpenAI GPT-4でペインポイント分析を実行。LinkedIn投稿内容と企業データから、トップ3の課題、自動化準備度スコア、手作業による時間損失、ビジネスインパクトを分析。JSON形式で構造化された出力を生成。"
    },
    {
      "parameters": {
        "functionCode": "// BANTスコアリングアルゴリズムの実装\nconst items = $input.all();\nconst scoredLeads = [];\n\n// AI分析結果の解析\nfor (const item of items) {\n  try {\n    const lead = item.json;\n    const aiAnalysis = JSON.parse(lead.aiAnalysis || '{}');\n    \n    // 4軸評価の実装\n    let scores = {\n      painSeverity: 0,      // 痛みの深刻度\n      budgetAuthority: 0,   // 予算権限\n      timeline: 0,          // タイムライン\n      readiness: 0          // 準備状況\n    };\n    \n    // 1. 痛みの深刻度スコア (1-10)\n    const painKeywordCount = lead.painKeywords?.length || 0;\n    const engagementScore = lead.engagementScore || 0;\n    const automationReadiness = aiAnalysis.automationReadinessScore || 5;\n    \n    scores.painSeverity = Math.min(10, Math.round(\n      (painKeywordCount * 2) + \n      (engagementScore > 100 ? 3 : 1) + \n      (automationReadiness * 0.5)\n    ));\n    \n    // 2. 予算権限スコア (1-10)\n    const isCSuite = ['CEO', 'CTO', 'CDO', 'VP'].some(title => \n      lead.title.toUpperCase().includes(title)\n    );\n    const companySize = parseInt(lead.companyDetails?.employeeCount || '100');\n    const fundingStage = lead.companyDetails?.fundingStage || 'Unknown';\n    \n    scores.budgetAuthority = Math.min(10, \n      (isCSuite ? 7 : 3) + \n      (companySize > 500 ? 2 : 1) + \n      (fundingStage.includes('Series') ? 1 : 0)\n    );\n    \n    // 3. タイムラインスコア (1-10)\n    const hoursWasted = aiAnalysis.hoursWastedPerWeek || 10;\n    const recentPost = (Date.now() - new Date(lead.scrapedAt).getTime()) < 7 * 24 * 60 * 60 * 1000;\n    const urgentKeywords = ['今すぐ', '緊急', 'urgent', 'asap', 'immediately'].some(keyword => \n      (lead.postContent || \"\").toLowerCase().includes(keyword)\n    );\n    \n    scores.timeline = Math.min(10,\n      (hoursWasted > 20 ? 5 : 3) +\n      (recentPost ? 3 : 1) +\n      (urgentKeywords ? 2 : 0)\n    );\n    \n    // 4. 準備状況スコア (1-10)\n    const techStack = lead.companyDetails?.techStack || [];\n    const hasAutomationTools = techStack.some(tool => \n      ['zapier', 'make', 'automation'].some(keyword => (tool || \"\").toLowerCase().includes(keyword))\n    );\n    const intentSignals = lead.intentSignals?.length || 0;\n    \n    scores.readiness = Math.min(10,\n      automationReadiness +\n      (hasAutomationTools ? 2 : 0) +\n      (intentSignals > 2 ? 2 : 1)\n    );\n    \n    // 総合スコア計算 (加重平均)\n    const weights = {\n      painSeverity: 0.35,\n      budgetAuthority: 0.25,\n      timeline: 0.25,\n      readiness: 0.15\n    };\n    \n    const totalScore = Math.round(\n      scores.painSeverity * weights.painSeverity +\n      scores.budgetAuthority * weights.budgetAuthority +\n      scores.timeline * weights.timeline +\n      scores.readiness * weights.readiness\n    );\n    \n    // カテゴリ分類\n    let category;\n    if (totalScore >= 8) {\n      category = 'hot';\n    } else if (totalScore >= 6) {\n      category = 'warm';\n    } else {\n      category = 'cold';\n    }\n    \n    // トップペインポイントの抽出\n    const topPainPoints = aiAnalysis.painPoints?.slice(0, 3) || [\n      'Manual process inefficiency',\n      'Time waste on repetitive tasks',\n      'Lack of automation'\n    ];\n    \n    // n8nソリューション提案\n    const suggestedSolution = aiAnalysis.recommendedSolution || \n      `Implement n8n workflow automation to save ${hoursWasted || 10}+ hours/week on ${(topPainPoints[0] || \"\").toLowerCase()}`;\n    \n    // スコアリング結果の構造化\n    scoredLeads.push({\n      json: {\n        ...lead,\n        leadScore: {\n          scores: scores,\n          totalScore: totalScore,\n          category: category,\n          topPainPoints: topPainPoints,\n          suggestedSolution: suggestedSolution,\n          scoredAt: new Date().toISOString()\n        }\n      },\n      pairedItem: { item: 0 }\n    });\n    \n  } catch (error) {\n    console.error('Error scoring lead:', error);\n    // エラー時はデフォルトスコアを割り当て\n    scoredLeads.push({\n      json: {\n        ...item.json,\n        leadScore: {\n          scores: {\n            painSeverity: 5,\n            budgetAuthority: 5,\n            timeline: 5,\n            readiness: 5\n          },\n          totalScore: 5,\n          category: 'cold',\n          topPainPoints: ['Unknown'],\n          suggestedSolution: 'Schedule discovery call to identify automation opportunities',\n          error: true,\n          scoredAt: new Date().toISOString()\n        }\n      },\n      pairedItem: { item: 0 }\n    });\n  }\n}\n\nreturn scoredLeads;"
      },
      "id": "a3b4c5d6-e7f8-9012-abcd-345678901234",
      "name": "Score Calculator",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1750,
        300
      ],
      "notes": "BANTベースのリードスコアリング実装。痛みの深刻度(35%)、予算権限(25%)、タイムライン(25%)、準備状況(15%)の4軸で評価。総合スコア8-10:ホット、6-7:ウォーム、6未満:コールドに分類。"
    },
    {
      "parameters": {
        "functionCode": "// パーソナライゼーションバリアント生成\nconst items = $input.all();\nconst personalizedLeads = [];\n\nfor (const item of items) {\n  const leadData = item.json;\n  const category = leadData.leadScore?.category || 'warm';\n  const painPoints = leadData.leadScore?.topPainPoints || ['業務効率化', '手作業削減', '自動化'];\n  const industry = leadData.companyDetails?.industry || 'Technology';\n  const company = leadData.company || '貴社';\n  const name = leadData.name || 'ご担当者';\n  const title = leadData.title || '経営幹部';\n  const hoursWasted = Math.round(parseFloat(leadData.aiAnalysis?.hoursWastedPerWeek || '20'));\n  const caseStudy = leadData.caseStudies?.[0] || {\n    client: '同業他社',\n    roi: '300%',\n    timeToValue: '2ヶ月'\n  };\n\n  // 3つのバリアント生成\n  const variants = [\n    {\n      type: 'useCase',\n      subject: `${name}様 - ${company}の${painPoints[0]}を解決する方法`,\n      opening: `${title}として日々${painPoints[0]}にお悩みのことと存じます。`,\n      value: `同業他社では、n8nを活用して週${hoursWasted}時間の削減を実現しています。`,\n      cta: '15分のデモで具体的な自動化事例をご紹介します。',\n      videoScript: `こんにちは、${name}様。${company}の${painPoints[0]}を解決する3つのポイントをご紹介します。1) 即座に導入可能な自動化テンプレート、2) 週${hoursWasted}時間の業務削減実績、3) 2ヶ月でのROI達成事例。`,\n      n8nFeatures: ['ワークフロー自動化', 'API統合', 'エラーハンドリング']\n    },\n    {\n      type: 'industry',\n      subject: `${industry}業界の${title}の皆様が選ぶ自動化ソリューション`,\n      opening: `${industry}業界では、多くの企業が業務自動化に取り組んでいます。`,\n      value: `${caseStudy.client}が${caseStudy.roi}のROIを達成しました。`,\n      cta: '業界特化型の成功事例をご覧ください。',\n      videoScript: `${name}様、${industry}業界のリーダー企業がn8nで成功している理由をお話しします。1) 業界特有の課題への対応力、2) ${caseStudy.roi}のROI実績、3) 競合他社に先行する自動化戦略。`,\n      n8nFeatures: ['業界別テンプレート', 'セキュアな統合', 'スケーラビリティ']\n    },\n    {\n      type: 'roi',\n      subject: `${company}様 - 月額${Math.round(hoursWasted * 4 * 5000 / 160)}万円のコスト削減が可能です`,\n      opening: `現在、${painPoints[0]}に費やしている時間をコストに換算されたことはありますか？`,\n      value: `n8n導入により、初期投資の${caseStudy.timeToValue}で回収可能です。`,\n      cta: 'ROI計算書を無料でお送りします。',\n      videoScript: `${name}様、具体的な数字でお話しします。1) 月額${Math.round(hoursWasted * 4 * 5000 / 160)}万円の削減、2) ${caseStudy.timeToValue}での投資回収、3) 継続的な効率改善による複利効果。`,\n      n8nFeatures: ['ROI計算ツール', 'コスト分析', '投資対効果レポート']\n    }\n  ];\n\n  // カテゴリに基づいて最適なバリアント選択\n  let selectedIndex = 0;\n  if (category === 'hot') {\n    selectedIndex = 2; // ROI焦点\n  } else if (category === 'warm') {\n    selectedIndex = 1; // 業界焦点\n  } else {\n    selectedIndex = 0; // ユースケース焦点\n  }\n\n  // 規制業界の場合は業界焦点を優先\n  if (['Finance', 'Healthcare', 'Government'].includes(industry)) {\n    selectedIndex = 1;\n  }\n\n  personalizedLeads.push({\n    json: {\n      ...leadData,\n      personalization: {\n        variants: variants,\n        selectedVariant: variants[selectedIndex],\n        reasoning: `カテゴリ: ${category}, 業界: ${industry}, 選択理由: ${category === 'hot' ? 'ROI重視の意思決定者' : category === 'warm' ? '業界事例での説得力' : 'ペインポイントへの共感'}`\n      }\n    },\n    pairedItem: { item: 0 }\n  });\n}\n\nreturn personalizedLeads;"
      },
      "id": "d7e8f9a0-b1c2-3456-defa-678901234567",
      "name": "Generate Personalization",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1950,
        500
      ],
      "notes": "パーソナライゼーションバリアント生成。リードデータに基づいて3つのバリアント（ユースケース、業界、ROI焦点）を生成し、スコアカテゴリに応じて最適なものを選択。"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.personalization ? `パーソナライゼーションデータを改善してください:\n\n${JSON.stringify($json, null, 2)}\n\n以下の点を改善してください：\n1. より具体的でパーソナルなメッセージ\n2. 業界特有の課題への言及\n3. 数値データの活用\n4. CTAの明確化` : 'エラー：パーソナライゼーションデータが見つかりません' }}",
        "hasOutputParser": false,
        "options": {
          "systemMessage": "あなたはB2B営業のエキスパートです。C-Suite経営層向けのパーソナライズされたアウトリーチメッセージを作成し、既存のメッセージをより効果的に改善します。常に相手の課題に共感し、具体的な価値提案を行ってください。",
          "maxIterations": 3,
          "returnIntermediateSteps": false
        }
      },
      "id": "b4c5d6e7-f8a9-0123-bcde-456789012345",
      "name": "AI Message Enhancer",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1950,
        300
      ],
      "continueOnFail": true,
      "notes": "AI Agentでパーソナライゼーションメッセージを強化。Functionノードで生成した基本的なメッセージをAIが分析し、より洗練された表現に改善。"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4-turbo",
          "mode": "list"
        },
        "maxTokens": 1500,
        "temperature": 0.4
      },
      "id": "c6d7e8f9-a0b1-2345-cdef-567890123456",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1950,
        400
      ],
      "credentials": {
        "openAiApi": {
          "id": "openai-api-credentials"
        }
      },
      "notes": "AI Agent用のGPT-4 Turboモデル。パーソナライゼーションメッセージの品質向上に使用。"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.heygen.com/v1/video/generate",
        "authentication": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Api-Key",
              "value": "={{$credentials.apiKey}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_inputs\": [\n    {\n      \"character\": {\n        \"type\": \"avatar\",\n        \"avatar_id\": \"{{ $workflow.staticData.heygenAvatarId || 'josh_lite3_20230714' }}\",\n        \"avatar_style\": \"normal\"\n      },\n      \"voice\": {\n        \"type\": \"text\",\n        \"input_text\": \"{{ $json.personalization.variants[0].videoScript }}\",\n        \"voice_id\": \"{{ $workflow.staticData.heygenVoiceId || '1bd001e7e50f421d891986aad5158bc8' }}\",\n        \"speed\": 1.0\n      },\n      \"background\": {\n        \"type\": \"color\",\n        \"value\": \"#FFFFFF\"\n      }\n    }\n  ],\n  \"dimension\": {\n    \"width\": 1280,\n    \"height\": 720\n  },\n  \"aspect_ratio\": \"16:9\",\n  \"test\": false,\n  \"caption\": false,\n  \"title\": \"{{ $json.name }} - {{ $json.company }} Personalized Message\"\n}",
        "options": {
          "timeout": 30000,
          "retry": {
            "maxRetries": 3,
            "retryInterval": 5000
          }
        }
      },
      "id": "c5d6e7f8-a9b0-1234-cdef-567890123456",
      "name": "HeyGen Video API - Variant 1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2150,
        200
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "heygen-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "HeyGen APIでパーソナライズビデオを生成（バリアント1）。アバター、音声、背景を設定し、60秒以内のビデオを作成。リード名と会社名を動的に挿入。エラー時はテキストコンテンツにフォールバック。"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.heygen.com/v1/video/generate",
        "authentication": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Api-Key",
              "value": "={{$credentials.apiKey}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_inputs\": [\n    {\n      \"character\": {\n        \"type\": \"avatar\",\n        \"avatar_id\": \"{{ $workflow.staticData.heygenAvatarId || 'angela_lite3_20230714' }}\",\n        \"avatar_style\": \"professional\"\n      },\n      \"voice\": {\n        \"type\": \"text\",\n        \"input_text\": \"{{ $json.personalization.variants[1].videoScript }}\",\n        \"voice_id\": \"{{ $workflow.staticData.heygenVoiceId || '2d5b0e6cf36b460aa7fc47e3eee4ba54' }}\",\n        \"speed\": 0.95\n      },\n      \"background\": {\n        \"type\": \"image\",\n        \"url\": \"https://assets.heygen.ai/backgrounds/office_modern.jpg\"\n      }\n    }\n  ],\n  \"dimension\": {\n    \"width\": 1920,\n    \"height\": 1080\n  },\n  \"aspect_ratio\": \"16:9\",\n  \"test\": false,\n  \"caption\": true,\n  \"title\": \"{{ $json.company }} Industry Success Story\"\n}",
        "options": {
          "timeout": 30000,
          "retry": {
            "maxRetries": 3,
            "retryInterval": 5000
          }
        }
      },
      "id": "d6e7f8a9-b0c1-2345-defa-678901234567",
      "name": "HeyGen Video API - Variant 2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2150,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "heygen-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "HeyGen APIでパーソナライズビデオを生成（バリアント2：業界フォーカス）。プロフェッショナルスタイルのアバター、オフィス背景、字幕付き。業界の成功事例を強調する内容。"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.heygen.com/v1/video/generate",
        "authentication": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Api-Key",
              "value": "={{$credentials.apiKey}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_inputs\": [\n    {\n      \"character\": {\n        \"type\": \"avatar\",\n        \"avatar_id\": \"{{ $workflow.staticData.heygenAvatarId || 'matt_lite3_20230714' }}\",\n        \"avatar_style\": \"casual\"\n      },\n      \"voice\": {\n        \"type\": \"text\",\n        \"input_text\": \"{{ $json.personalization.variants[2].videoScript }}\",\n        \"voice_id\": \"{{ $workflow.staticData.heygenVoiceId || '3b554273e4ba4b33bd8093d183b42486' }}\",\n        \"speed\": 1.05\n      },\n      \"background\": {\n        \"type\": \"video\",\n        \"url\": \"https://assets.heygen.ai/backgrounds/tech_animation.mp4\"\n      }\n    }\n  ],\n  \"dimension\": {\n    \"width\": 1280,\n    \"height\": 720\n  },\n  \"aspect_ratio\": \"16:9\",\n  \"test\": false,\n  \"caption\": false,\n  \"title\": \"ROI Calculator - {{ $json.company }}\"\n}",
        "options": {
          "timeout": 30000,
          "retry": {
            "maxRetries": 3,
            "retryInterval": 5000
          }
        }
      },
      "id": "e7f8a9b0-c1d2-3456-efab-789012345678",
      "name": "HeyGen Video API - Variant 3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2150,
        400
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "heygen-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "HeyGen APIでパーソナライズビデオを生成（バリアント3：ROIフォーカス）。カジュアルスタイル、アニメーション背景でROI計算を視覚的に説明。数値とグラフを強調。"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "f8a9b0c1-d2e3-4567-fabc-890123456789",
      "name": "Merge Video Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2350,
        300
      ],
      "notes": "3つのビデオ生成結果を統合。生成成功したビデオURLと、失敗時のフォールバックコンテンツを含む。"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailSubject",
              "value": "={{ $json.personalization.selectedVariant.subject }}"
            },
            {
              "name": "emailBody",
              "value": "=<html>\n<body style=\"font-family: Arial, sans-serif; color: #333; line-height: 1.6;\">\n  <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n    <p>{{ $json.personalization.selectedVariant.opening }}</p>\n    \n    <p>{{ $json.personalization.selectedVariant.value }}</p>\n    \n    <!-- Video Thumbnail with Play Button -->\n    <div style=\"position: relative; margin: 20px 0;\">\n      <a href=\"{{ $json.videoUrls[0] || 'https://calendly.com/your-company/demo' }}\" style=\"display: block;\">\n        <img src=\"{{ $json.videoThumbnail || 'https://via.placeholder.com/600x338/0066CC/FFFFFF?text=Personalized+Video+Message' }}\" \n             alt=\"Personalized video message for {{ $json.name }}\" \n             style=\"width: 100%; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);\">\n        <div style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); \n                    background: rgba(255,255,255,0.9); border-radius: 50%; width: 80px; height: 80px; \n                    display: flex; align-items: center; justify-content: center;\">\n          <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"#0066CC\">\n            <path d=\"M8 5v14l11-7z\"/>\n          </svg>\n        </div>\n      </a>\n      <p style=\"text-align: center; margin-top: 10px; font-size: 14px; color: #666;\">\n        {{ $json.name }}様専用のメッセージ動画（60秒）\n      </p>\n    </div>\n    \n    <p>{{ $json.personalization.selectedVariant.cta }}</p>\n    \n    <!-- CTA Button -->\n    <div style=\"text-align: center; margin: 30px 0;\">\n      <a href=\"https://calendly.com/your-company/{{ $json.leadScore.category }}-demo\" \n         style=\"display: inline-block; background-color: #0066CC; color: white; \n                padding: 12px 30px; text-decoration: none; border-radius: 5px; \n                font-weight: bold; font-size: 16px;\">\n        デモを予約する\n      </a>\n    </div>\n    \n    <!-- Case Study Link -->\n    <p style=\"font-size: 14px; color: #666; margin-top: 40px;\">\n      P.S. {{ $json.caseStudies[0]?.client || '同業他社' }}の成功事例もご覧ください：\n      <a href=\"{{ $json.caseStudies[0]?.pdfLink || '#' }}\" style=\"color: #0066CC;\">{{ $json.caseStudies[0]?.roi || '300%' }}のROI達成事例</a>\n    </p>\n  </div>\n</body>\n</html>"
            },
            {
              "name": "emailTextVersion",
              "value": "={{ $json.personalization.selectedVariant.opening }}\\n\\n{{ $json.personalization.selectedVariant.value }}\\n\\nパーソナライズドビデオメッセージをご覧ください：\\n{{ $json.videoUrls[0] || 'https://calendly.com/your-company/demo' }}\\n\\n{{ $json.personalization.selectedVariant.cta }}\\n\\nデモを予約する: https://calendly.com/your-company/{{ $json.leadScore.category }}-demo\\n\\nP.S. {{ $json.caseStudies[0]?.client || '同業他社' }}の成功事例もご覧ください。"
            }
          ],
          "boolean": [
            {
              "name": "hasVideo",
              "value": "={{ $json.videoUrls && $json.videoUrls.length > 0 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a9b0c1d2-e3f4-5678-abcd-901234567890",
      "name": "Email Template Builder",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2550,
        300
      ],
      "notes": "パーソナライズされたメールテンプレートを構築。選択されたバリアントに基づいて件名、本文、CTAを設定。ビデオサムネイルと再生ボタン、A/Bテスト用の複数バリアントをサポート。"
    },
    {
      "parameters": {
        "operation": "create",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Outreach Sequences",
        "options": {
          "fields": [
            "Lead ID",
            "Name",
            "Email",
            "Company",
            "Score Category",
            "Sequence Day",
            "Status",
            "Created At",
            "Video URLs",
            "Email Subject",
            "Email Body",
            "LinkedIn Profile",
            "Next Action Date"
          ]
        },
        "fieldsToSend": {
          "values": [
            {
              "name": "Lead ID",
              "value": "={{ $json.id }}"
            },
            {
              "name": "Name",
              "value": "={{ $json.name }}"
            },
            {
              "name": "Email",
              "value": "={{ $json.email }}"
            },
            {
              "name": "Company",
              "value": "={{ $json.company }}"
            },
            {
              "name": "Score Category",
              "value": "={{ $json.leadScore.category }}"
            },
            {
              "name": "Sequence Day",
              "value": "1"
            },
            {
              "name": "Status",
              "value": "active"
            },
            {
              "name": "Created At",
              "value": "={{ new Date().toISOString() }}"
            },
            {
              "name": "Video URLs",
              "value": "={{ JSON.stringify($json.videoUrls || []) }}"
            },
            {
              "name": "Email Subject",
              "value": "={{ $json.emailSubject }}"
            },
            {
              "name": "Email Body",
              "value": "={{ $json.emailBody }}"
            },
            {
              "name": "LinkedIn Profile",
              "value": "={{ $json.linkedinUrl }}"
            },
            {
              "name": "Next Action Date",
              "value": "={{ new Date(Date.now() + 2 * 24 * 60 * 60 * 1000).toISOString() }}"
            }
          ]
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "e8f9a0b1-c2d3-4567-fabc-901234567890",
      "name": "Initialize Outreach Sequence",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        2750,
        300
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "Airtableでアウトリーチシーケンスを初期化。リード情報、スコアカテゴリ、生成されたコンテンツを保存。14日間のシーケンス追跡開始。"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.leadScore.category }}",
              "operation": "equals",
              "value2": "hot"
            }
          ]
        }
      },
      "id": "f9a0b1c2-d3e4-5678-abcd-012345678901",
      "name": "Route by Lead Category",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2950,
        300
      ],
      "notes": "リードカテゴリ（hot/warm/cold）に基づいてアウトリーチ戦略をルーティング。ホットリードは即座にLinkedIn接続とメール送信。"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/connectionRequests",
        "authentication": "oAuth2",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Restli-Protocol-Version",
              "value": "2.0.0"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"invitations\": [\n    {\n      \"invitee\": {\n        \"com.linkedin.voyager.growth.invitation.InviteeProfile\": {\n          \"profileId\": \"{{ $json.linkedinProfileId || 'unknown' }}\"\n        }\n      },\n      \"message\": \"{{ $json.name }}様\\n\\n{{ $json.title }}として{{ $json.company }}で{{ $json.leadScore.topPainPoints[0] }}の課題に取り組まれているとお見受けしました。\\n\\n同様の課題を持つ{{ $json.companyDetails.industry }}業界の企業様向けに、業務自動化ソリューションをご提供しています。\\n\\nぜひ繋がらせていただけますでしょうか。\\n\\nよろしくお願いいたします。\"\n    }\n  ]\n}",
        "options": {
          "timeout": 10000,
          "retry": {
            "maxRetries": 2,
            "retryInterval": 5000
          }
        }
      },
      "id": "a0b1c2d3-e4f5-6789-bcde-123456789012",
      "name": "LinkedIn Connection Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3150,
        200
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "linkedin-oauth2-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "LinkedIn接続リクエストを送信（Day 1）。パーソナライズされたメッセージで、共通の課題と解決策への関心を示す。"
    },
    {
      "parameters": {
        "operation": "send",
        "to": "={{ $json.email }}",
        "toName": "={{ $json.name }}",
        "from": "outreach@your-company.com",
        "fromName": "Your Company Sales Team",
        "subject": "={{ $json.emailSubject }}",
        "text": "={{ $json.emailTextVersion }}",
        "html": "={{ $json.emailBody }}",
        "categories": [
          "c-suite-outreach",
          "{{ $json.leadScore.category }}",
          "day-1"
        ],
        "trackingSettings": {
          "clickTracking": {
            "enable": true,
            "enableText": true
          },
          "openTracking": {
            "enable": true
          },
          "subscriptionTracking": {
            "enable": false
          }
        },
        "customArgs": {
          "leadId": "={{ $json.id }}",
          "sequenceDay": "1",
          "category": "={{ $json.leadScore.category }}",
          "company": "={{ $json.company }}"
        },
        "headers": {
          "X-Campaign-ID": "c-suite-outreach-{{ $json.leadScore.category }}",
          "X-Lead-Score": "={{ $json.leadScore.totalScore }}"
        },
        "authentication": "apiKey"
      },
      "id": "b1c2d3e4-f5a6-7890-cdef-234567890123",
      "name": "SendGrid Email Day 1",
      "type": "n8n-nodes-base.sendGrid",
      "typeVersion": 1,
      "position": [
        3150,
        300
      ],
      "credentials": {
        "sendGridApi": {
          "id": "sendgrid-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "SendGridでDay 1のパーソナライズメールを送信。ビデオリンク付き。開封とクリックトラッキング有効。カテゴリとカスタム引数でセグメント化。"
    },
    {
      "parameters": {
        "unit": "days",
        "amount": 2
      },
      "id": "c2d3e4f5-a6b7-8901-defa-345678901234",
      "name": "Wait 2 Days",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        3350,
        300
      ],
      "webhookId": "{{ $json.id }}-day3",
      "notes": "2日間待機してDay 3のアクションへ。リードの反応時間を確保。"
    },
    {
      "parameters": {
        "amount": 5,
        "unit": "seconds"
      },
      "id": "d3e4f5a6-b7c8-9012-efab-456789012345",
      "name": "Immediate for Hot Leads",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        3150,
        100
      ],
      "notes": "ホットリードは即座に次のアクションへ（5秒待機のみ）。"
    },
    {
      "parameters": {
        "operation": "search",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Outreach Sequences",
        "options": {
          "filterByFormula": "=AND({Lead ID} = '{{ $json.id }}', {Status} = 'active')",
          "maxRecords": 1
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "e4f5a6b7-c8d9-0123-fabc-567890123456",
      "name": "Check Sequence Status",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        3550,
        300
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "アウトリーチシーケンスのステータスを確認。オプトアウトや返信があった場合はシーケンスを停止。"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sendgrid-events",
        "responseMode": "onReceived",
        "responseData": "allEntries",
        "responseCode": 200,
        "responseHeaders": {
          "values": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "rawBody": false
        }
      },
      "id": "f5a6b7c8-d9e0-1234-abcd-678901234567",
      "name": "SendGrid Event Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        250,
        600
      ],
      "webhookId": "sendgrid-events",
      "notes": "SendGridからのイベント（開封、クリック、バウンス、スパム報告）を受信。リアルタイムでリードの行動を追跡。"
    },
    {
      "parameters": {
        "functionCode": "// SendGridイベントの処理と分類\nconst items = $input.all();\nconst processedEvents = [];\n\n// 各イベントを処理\nfor (const item of items) {\n  const events = Array.isArray(item.json) ? item.json : [item.json];\n  \n  for (const event of events) {\n    try {\n      // イベントタイプに基づいて処理\n      const processedEvent = {\n        eventType: event.event,\n        email: event.email,\n        leadId: event.leadId || event.unique_args?.leadId,\n        sequenceDay: event.sequenceDay || event.unique_args?.sequenceDay,\n        category: event.category || event.unique_args?.category,\n        company: event.company || event.unique_args?.company,\n        timestamp: new Date(event.timestamp * 1000).toISOString(),\n        engagement: {\n          type: event.event,\n          url: event.url || null,\n          userAgent: event.useragent || null,\n          ip: event.ip || null\n        }\n      };\n      \n      // エンゲージメントスコアを計算\n      let engagementScore = 0;\n      switch (event.event) {\n        case 'open':\n          engagementScore = 1;\n          break;\n        case 'click':\n          engagementScore = 3;\n          processedEvent.clickedUrl = event.url;\n          break;\n        case 'bounce':\n        case 'blocked':\n          engagementScore = -5;\n          processedEvent.requiresAction = true;\n          break;\n        case 'spamreport':\n          engagementScore = -10;\n          processedEvent.requiresAction = true;\n          processedEvent.optOut = true;\n          break;\n        case 'unsubscribe':\n          engagementScore = -10;\n          processedEvent.optOut = true;\n          break;\n      }\n      \n      processedEvent.engagementScore = engagementScore;\n      \n      // ビデオ視聴の検出\n      if (event.event === 'click' && event.url && event.url.includes('heygen')) {\n        processedEvent.videoViewed = true;\n        processedEvent.engagementScore = 5; // ビデオ視聴は高スコア\n      }\n      \n      processedEvents.push({\n        json: processedEvent,\n        pairedItem: { item: 0 }\n      });\n      \n    } catch (error) {\n      console.error('Error processing SendGrid event:', error);\n      continue;\n    }\n  }\n}\n\nreturn processedEvents;"
      },
      "id": "a6b7c8d9-e0f1-2345-bcde-789012345678",
      "name": "Process SendGrid Events",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        450,
        600
      ],
      "notes": "SendGridイベントを処理し、エンゲージメントスコアを計算。開封=1点、クリック=3点、ビデオ視聴=5点、バウンス=-5点、スパム報告=-10点。"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.optOut || false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "b7c8d9e0-f1a2-3456-cdef-890123456789",
      "name": "Check Opt-Out",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        650,
        600
      ],
      "notes": "オプトアウト（配信停止、スパム報告）をチェック。該当する場合はシーケンスを即座に停止。"
    },
    {
      "parameters": {
        "operation": "update",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Outreach Sequences",
        "updateBy": "Lead ID",
        "id": "={{ $json.leadId }}",
        "fieldsToSend": {
          "values": [
            {
              "name": "Status",
              "value": "opted-out"
            },
            {
              "name": "Opt Out Date",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "Opt Out Reason",
              "value": "={{ $json.eventType }}"
            }
          ]
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "c8d9e0f1-a2b3-4567-defa-901234567890",
      "name": "Update Opt-Out Status",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        850,
        500
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "Airtableでリードのステータスをopted-outに更新。オプトアウトの日時と理由を記録。"
    },
    {
      "parameters": {
        "operation": "create",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Engagement Events",
        "fieldsToSend": {
          "values": [
            {
              "name": "Lead ID",
              "value": "={{ $json.leadId }}"
            },
            {
              "name": "Event Type",
              "value": "={{ $json.eventType }}"
            },
            {
              "name": "Timestamp",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "Engagement Score",
              "value": "={{ $json.engagementScore }}"
            },
            {
              "name": "Email",
              "value": "={{ $json.email }}"
            },
            {
              "name": "Company",
              "value": "={{ $json.company }}"
            },
            {
              "name": "Video Viewed",
              "value": "={{ $json.videoViewed || false }}"
            },
            {
              "name": "Clicked URL",
              "value": "={{ $json.clickedUrl || '' }}"
            }
          ]
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "d9e0f1a2-b3c4-5678-efab-012345678901",
      "name": "Log Engagement Event",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        850,
        700
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "すべてのエンゲージメントイベントをAirtableに記録。開封、クリック、ビデオ視聴などの行動を追跡。"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"gpt-4-turbo-preview\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are an expert at analyzing email responses and determining sentiment and intent. Analyze the following email response and categorize it as: positive (interested, asking questions), negative (not interested, rejection), or neutral (automated response, unclear). Also identify if it requires immediate follow-up.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Email from: {{ $json.email }}\\nSubject: {{ $json.subject }}\\nBody: {{ $json.body }}\\n\\nAnalyze the sentiment and intent.\"\n    }\n  ],\n  \"temperature\": 0.3,\n  \"max_tokens\": 500,\n  \"response_format\": { \"type\": \"json_object\" }\n}",
        "options": {
          "timeout": 20000
        }
      },
      "id": "e0f1a2b3-c4d5-6789-fabc-123456789012",
      "name": "AI Sentiment Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        450,
        800
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "openai-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "メール返信の感情分析。ポジティブ（興味あり）、ネガティブ（拒否）、ニュートラル（自動応答）を判定。即座のフォローアップが必要かも判断。"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.eventType }}",
              "operation": "equals",
              "value2": "email_reply"
            }
          ]
        }
      },
      "id": "f1a2b3c4-d5e6-7890-abcd-123456789013",
      "name": "Check for Email Reply",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1050,
        700
      ],
      "notes": "メール返信イベントかどうかをチェック。返信の場合は感情分析へ、それ以外は通常のエンゲージメント記録へ。"
    },
    {
      "parameters": {
        "functionCode": "// 感情分析結果に基づくアクション決定\nconst items = $input.all();\nconst processedResponses = [];\n\nfor (const item of items) {\n  try {\n    const sentimentData = JSON.parse(item.json.body || '{}');\n    const leadData = item.json;\n    \n    // 感情分析結果の処理\n    const sentiment = sentimentData.sentiment || 'neutral';\n    const intent = sentimentData.intent || 'unclear';\n    const requiresFollowUp = sentimentData.requiresFollowUp || false;\n    const confidence = sentimentData.confidence || 0.5;\n    \n    // アクション決定\n    let actionRequired = {\n      type: 'none',\n      priority: 'low',\n      suggestedAction: '',\n      updateScore: 0\n    };\n    \n    if (sentiment === 'positive') {\n      actionRequired = {\n        type: 'schedule_meeting',\n        priority: 'high',\n        suggestedAction: 'Send calendar link within 24 hours',\n        updateScore: 3,\n        notifySales: true\n      };\n    } else if (sentiment === 'negative') {\n      actionRequired = {\n        type: 'mark_lost',\n        priority: 'low',\n        suggestedAction: 'Update CRM status to lost',\n        updateScore: -5,\n        stopSequence: true\n      };\n    } else if (requiresFollowUp) {\n      actionRequired = {\n        type: 'manual_review',\n        priority: 'medium',\n        suggestedAction: 'Sales team to review and respond',\n        updateScore: 1,\n        assignTo: 'sales_team'\n      };\n    }\n    \n    processedResponses.push({\n      json: {\n        ...leadData,\n        sentimentAnalysis: {\n          sentiment: sentiment,\n          intent: intent,\n          confidence: confidence,\n          requiresFollowUp: requiresFollowUp,\n          analyzedAt: new Date().toISOString()\n        },\n        actionRequired: actionRequired\n      },\n      pairedItem: { item: 0 }\n    });\n    \n  } catch (error) {\n    console.error('Error processing sentiment:', error);\n    // エラー時は手動レビューへ\n    processedResponses.push({\n      json: {\n        ...item.json,\n        sentimentAnalysis: {\n          error: true,\n          message: error.message\n        },\n        actionRequired: {\n          type: 'manual_review',\n          priority: 'high',\n          suggestedAction: 'Error in sentiment analysis - manual review required'\n        }\n      },\n      pairedItem: { item: 0 }\n    });\n  }\n}\n\nreturn processedResponses;"
      },
      "id": "a2b3c4d5-e6f7-8901-bcde-234567890124",
      "name": "Process Sentiment Results",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1450,
        800
      ],
      "notes": "感情分析結果を処理し、次のアクションを決定。ポジティブ→ミーティング設定、ネガティブ→シーケンス停止、要フォローアップ→営業チーム通知。"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.actionRequired.type }}",
              "operation": "equals",
              "value2": "schedule_meeting"
            }
          ]
        }
      },
      "id": "b3c4d5e6-f7a8-9012-cdef-345678901235",
      "name": "Route by Action Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1650,
        800
      ],
      "notes": "アクションタイプによってルーティング。ミーティング設定、営業通知、シーケンス停止などを振り分け。"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "post",
        "channel": "#c-suite-hot-leads",
        "text": "=🔥 **Hot Lead Alert!** 🔥\n\n**Lead:** {{ $json.name }} ({{ $json.title }} at {{ $json.company }})\n**Email:** {{ $json.email }}\n**Lead Score:** {{ $json.leadScore.totalScore }}/10 ({{ $json.leadScore.category }})\n\n**Response Analysis:**\n- Sentiment: {{ $json.sentimentAnalysis.sentiment }} ({{ Math.round($json.sentimentAnalysis.confidence * 100) }}% confidence)\n- Intent: {{ $json.sentimentAnalysis.intent }}\n\n**Action Required:** {{ $json.actionRequired.suggestedAction }}\n\n**Meeting Link:** https://calendly.com/your-company/demo-{{ $json.leadScore.category }}\n\n@sales-team Please follow up within 24 hours!",
        "attachments": [
          {
            "color": "good",
            "fields": [
              {
                "title": "Top Pain Points",
                "value": "{{ $json.leadScore.topPainPoints.join(', ') }}",
                "short": false
              },
              {
                "title": "Suggested Solution",
                "value": "{{ $json.leadScore.suggestedSolution }}",
                "short": false
              }
            ]
          }
        ],
        "options": {
          "thread_ts": "={{ $json.slackThreadId || '' }}"
        },
        "authentication": "oAuth2"
      },
      "id": "c4d5e6f7-a8b9-0123-defa-456789012346",
      "name": "Notify Sales Team - Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1850,
        700
      ],
      "credentials": {
        "slackApi": {
          "id": "slack-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "Slackの#c-suite-hot-leadsチャンネルに通知。ポジティブな返信があったリードについて営業チームに即座にアラート。"
    },
    {
      "parameters": {
        "content": "## 継続的なシーケンス処理\n\nこのセクションでは、エンゲージメントイベントに基づいて\nアウトリーチシーケンスを継続または調整します。\n\n返信がない場合は予定通りDay 3, 7, 10, 14のアクションを実行。"
      },
      "id": "d5e6f7a8-b9c0-1234-efab-567890123457",
      "name": "Continue Sequence",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1250,
        900
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Leads",
        "updateBy": "Lead ID",
        "id": "={{ $json.leadId }}",
        "fieldsToSend": {
          "values": [
            {
              "name": "Status",
              "value": "={{ $json.actionRequired.type === 'schedule_meeting' ? 'hot-responded' : $json.actionRequired.type === 'mark_lost' ? 'lost' : 'in-sequence' }}"
            },
            {
              "name": "Last Response",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "Sentiment",
              "value": "={{ $json.sentimentAnalysis.sentiment }}"
            },
            {
              "name": "Score",
              "value": "={{ $json.leadScore.totalScore + $json.actionRequired.updateScore }}"
            }
          ]
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "e6f7a8b9-c0d1-2345-fabc-678901234568",
      "name": "Update Lead Status",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        1850,
        900
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "リードステータスを更新。感情分析結果に基づいてhot-responded、lost、in-sequenceに分類。スコアも動的に更新。"
    },
    {
      "parameters": {
        "resource": "contact",
        "operation": "upsert",
        "email": "={{ $json.email }}",
        "additionalFields": {
          "firstName": "={{ $json.name.split(' ')[0] || $json.name }}",
          "lastName": "={{ $json.name.split(' ').slice(1).join(' ') || '' }}",
          "company": "={{ $json.company }}",
          "jobTitle": "={{ $json.title }}",
          "phone": "={{ $json.phone || '' }}",
          "website": "={{ $json.companyDetails?.website || '' }}",
          "leadStatus": "={{ $json.leadScore.category === 'hot' ? 'OPEN' : $json.leadScore.category === 'warm' ? 'IN_PROGRESS' : 'ATTEMPTING_TO_CONTACT' }}",
          "lifecycleStage": "lead",
          "customPropertiesUi": {
            "customPropertiesValues": [
              {
                "property": "lead_score",
                "value": "={{ $json.leadScore.totalScore }}"
              },
              {
                "property": "pain_points",
                "value": "={{ $json.leadScore.topPainPoints.join(', ') }}"
              },
              {
                "property": "suggested_solution",
                "value": "={{ $json.leadScore.suggestedSolution }}"
              },
              {
                "property": "linkedin_url",
                "value": "={{ $json.linkedinUrl }}"
              },
              {
                "property": "engagement_score",
                "value": "={{ $json.engagementScore || 0 }}"
              },
              {
                "property": "source_campaign",
                "value": "c-suite-outreach-automation"
              },
              {
                "property": "industry",
                "value": "={{ $json.companyDetails?.industry || 'Unknown' }}"
              },
              {
                "property": "company_size",
                "value": "={{ $json.companyDetails?.employeeCount || $json.companySize }}"
              },
              {
                "property": "video_personalization_url",
                "value": "={{ $json.videoUrls?.[0] || '' }}"
              },
              {
                "property": "sequence_day",
                "value": "={{ $json.sequenceDay || 1 }}"
              }
            ]
          }
        },
        "authentication": "hubspotOAuth2Api"
      },
      "id": "f7a8b9c0-d1e2-3456-abcd-789012345679",
      "name": "HubSpot Contact Upsert",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [
        2050,
        500
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "HubSpotでコンタクトを作成または更新。リードスコア、ペインポイント、提案ソリューション、LinkedInURL、エンゲージメントスコアなどのカスタムプロパティを設定。ホット/ウォームリードを適切なライフサイクルステージに分類。"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.leadScore.category }}",
              "operation": "equals",
              "value2": "hot"
            }
          ],
          "number": [
            {
              "value1": "={{ $json.leadScore.totalScore }}",
              "operation": "larger",
              "value2": 7
            }
          ]
        },
        "combineOperation": "and"
      },
      "id": "a8b9c0d1-e2f3-4567-bcde-890123456780",
      "name": "Check for Deal Creation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2250,
        500
      ],
      "notes": "ホットリード（スコア8以上）の場合はHubSpotでディールを作成。パイプライン管理と収益予測のため。"
    },
    {
      "parameters": {
        "resource": "deal",
        "operation": "create",
        "stage": "appointmentscheduled",
        "additionalFields": {
          "dealName": "={{ $json.company }} - {{ $json.name }} - n8n Automation",
          "amount": "={{ Math.round(($json.companyDetails?.employeeCount || 100) * 0.1 * 5000) }}",
          "closeDate": "={{ new Date(Date.now() + 90 * 24 * 60 * 60 * 1000).toISOString().split('T')[0] }}",
          "dealType": "newbusiness",
          "priority": "={{ $json.leadScore.category === 'hot' ? 'high' : 'medium' }}",
          "description": "=Auto-generated deal from C-Suite Outreach Campaign\n\nLead Score: {{ $json.leadScore.totalScore }}/10\nCategory: {{ $json.leadScore.category }}\n\nTop Pain Points:\n{{ $json.leadScore.topPainPoints.map((p, i) => `${i+1}. ${p}`).join('\n') }}\n\nSuggested Solution:\n{{ $json.leadScore.suggestedSolution }}\n\nEngagement History:\n- LinkedIn Post Keywords: {{ $json.painKeywords.join(', ') }}\n- Engagement Score: {{ $json.engagementScore }}\n- Video Personalization: {{ $json.videoUrls?.length ? 'Yes' : 'No' }}\n\nNext Steps:\n1. Schedule discovery call\n2. Prepare custom demo based on pain points\n3. Share relevant case studies",
          "associatedContactIds": "={{ [$json.hubspotContactId] }}",
          "associatedCompanyIds": "={{ $json.hubspotCompanyId ? [$json.hubspotCompanyId] : [] }}",
          "customPropertiesUi": {
            "customPropertiesValues": [
              {
                "property": "lead_source",
                "value": "LinkedIn Automation"
              },
              {
                "property": "automation_score",
                "value": "={{ $json.leadScore.scores.readiness }}"
              },
              {
                "property": "budget_authority_score",
                "value": "={{ $json.leadScore.scores.budgetAuthority }}"
              },
              {
                "property": "timeline_score",
                "value": "={{ $json.leadScore.scores.timeline }}"
              },
              {
                "property": "campaign_name",
                "value": "c-suite-outreach-automation"
              }
            ]
          }
        },
        "authentication": "hubspotOAuth2Api"
      },
      "id": "b9c0d1e2-f3a4-5678-cdef-901234567891",
      "name": "Create HubSpot Deal",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [
        2450,
        400
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "ホットリード用のディールを作成。予想金額は従業員数×0.1×5000円で計算。90日後のクローズ予定日を設定。ペインポイント、ソリューション提案、エンゲージメント履歴を含む詳細な説明を追加。"
    },
    {
      "parameters": {
        "resource": "engagement",
        "operation": "create",
        "type": "note",
        "metadata": {
          "body": "=**Automated Outreach Campaign Started**\n\n📊 **Lead Intelligence:**\n- Score: {{ $json.leadScore.totalScore }}/10 ({{ $json.leadScore.category }})\n- Pain Severity: {{ $json.leadScore.scores.painSeverity }}/10\n- Budget Authority: {{ $json.leadScore.scores.budgetAuthority }}/10\n- Timeline Urgency: {{ $json.leadScore.scores.timeline }}/10\n- Automation Readiness: {{ $json.leadScore.scores.readiness }}/10\n\n🎯 **Personalization Strategy:**\n- Variant: {{ $json.personalization.selectedVariant.type }}\n- Subject Line: {{ $json.personalization.selectedVariant.subject }}\n- Video Script: {{ $json.personalization.selectedVariant.videoScript.substring(0, 100) }}...\n\n📧 **Outreach Sequence:**\n- Day 1: LinkedIn Connection + Email with Video\n- Day 3: Follow-up Email\n- Day 7: LinkedIn InMail\n- Day 10: Case Study Share\n- Day 14: Final Follow-up\n\n🔗 **Resources:**\n- LinkedIn: {{ $json.linkedinUrl }}\n- Video: {{ $json.videoUrls?.[0] || 'Generation pending' }}\n- Case Study: {{ $json.caseStudies?.[0]?.title || 'Matching in progress' }}"
        },
        "additionalFields": {
          "associations": {
            "associationsUi": {
              "associationsValues": [
                {
                  "fromObjectType": "contacts",
                  "toObjectType": "contact",
                  "toObjectId": "={{ $json.hubspotContactId }}"
                }
              ]
            }
          }
        },
        "authentication": "hubspotOAuth2Api"
      },
      "id": "c0d1e2f3-a4b5-6789-defa-012345678902",
      "name": "Create Engagement Note",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [
        2250,
        600
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "HubSpotにエンゲージメントノートを作成。リードインテリジェンス、パーソナライゼーション戦略、アウトリーチシーケンスの詳細を記録。営業チームが完全なコンテキストを把握できるように。"
    },
    {
      "parameters": {
        "resource": "task",
        "operation": "create",
        "subject": "=Follow up with {{ $json.name }} - {{ $json.company }} ({{ $json.leadScore.category }} lead)",
        "status": "NOT_STARTED",
        "priority": "={{ $json.leadScore.category === 'hot' ? 'HIGH' : 'NORMAL' }}",
        "additionalFields": {
          "body": "=📋 **Action Required for C-Suite Lead**\n\n**Contact:** {{ $json.name }} ({{ $json.title }})\n**Company:** {{ $json.company }}\n**Lead Score:** {{ $json.leadScore.totalScore }}/10\n\n**Key Pain Points to Address:**\n{{ $json.leadScore.topPainPoints.map((p, i) => `${i+1}. ${p}`).join('\n') }}\n\n**Recommended Talking Points:**\n1. Reference their LinkedIn post about {{ $json.painKeywords[0] }}\n2. Share {{ $json.caseStudies?.[0]?.client || 'relevant' }} success story\n3. Demonstrate how n8n can save {{ Math.round(($json.aiAnalysis?.hoursWastedPerWeek || 20) * 4) }} hours/month\n\n**Resources Prepared:**\n- ✅ Personalized video message sent\n- ✅ Case study matched to their industry\n- ✅ ROI calculation ready\n\n**Next Steps:**\n1. Review the video message before calling\n2. Check email engagement in SendGrid\n3. Prepare demo focused on {{ $json.leadScore.suggestedSolution }}",
          "dueDate": "={{ new Date(Date.now() + 2 * 24 * 60 * 60 * 1000).toISOString() }}",
          "associations": {
            "associationsUi": {
              "associationsValues": [
                {
                  "fromObjectType": "tasks",
                  "toObjectType": "contact",
                  "toObjectId": "={{ $json.hubspotContactId }}"
                }
              ]
            }
          },
          "reminders": [
            {
              "date": "={{ new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString() }}"
            }
          ]
        },
        "authentication": "hubspotOAuth2Api"
      },
      "id": "d1e2f3a4-b5c6-7890-efab-123456789013",
      "name": "Create Follow-up Task",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [
        2450,
        600
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "営業チーム用のフォローアップタスクを作成。ホットリードは高優先度、2日以内の期限。ペインポイント、推奨トーキングポイント、準備済みリソースを含む詳細な指示。24時間後のリマインダー設定。"
    },
    {
      "parameters": {
        "functionCode": "// 週次パフォーマンスサマリーの集計\nconst items = $input.all();\nconst now = new Date();\nconst weekStart = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n// メトリクスの初期化\nconst metrics = {\n  totalLeads: 0,\n  hotLeads: 0,\n  warmLeads: 0,\n  coldLeads: 0,\n  emailsSent: 0,\n  emailsOpened: 0,\n  emailsClicked: 0,\n  videosViewed: 0,\n  linkedinConnections: 0,\n  replies: 0,\n  positiveReplies: 0,\n  meetings: 0,\n  optOuts: 0,\n  totalEngagementScore: 0,\n  channelPerformance: {\n    email: { sent: 0, engaged: 0, responseRate: 0 },\n    linkedin: { sent: 0, engaged: 0, responseRate: 0 },\n    video: { created: 0, viewed: 0, viewRate: 0 }\n  },\n  variantPerformance: {\n    useCase: { sent: 0, engaged: 0, rate: 0 },\n    industry: { sent: 0, engaged: 0, rate: 0 },\n    roi: { sent: 0, engaged: 0, rate: 0 }\n  },\n  topPerformers: [],\n  improvementAreas: []\n};\n\n// データ集計\nfor (const item of items) {\n  const data = item.json;\n  \n  // リードカテゴリ別集計\n  metrics.totalLeads++;\n  if (data.leadScore?.category === 'hot') metrics.hotLeads++;\n  else if (data.leadScore?.category === 'warm') metrics.warmLeads++;\n  else metrics.coldLeads++;\n  \n  // エンゲージメント集計\n  if (data.emailSent) metrics.emailsSent++;\n  if (data.emailOpened) metrics.emailsOpened++;\n  if (data.emailClicked) metrics.emailsClicked++;\n  if (data.videoViewed) metrics.videosViewed++;\n  if (data.linkedinConnected) metrics.linkedinConnections++;\n  if (data.replied) metrics.replies++;\n  if (data.sentiment === 'positive') metrics.positiveReplies++;\n  if (data.meetingScheduled) metrics.meetings++;\n  if (data.optedOut) metrics.optOuts++;\n  \n  metrics.totalEngagementScore += (data.engagementScore || 0);\n  \n  // チャネル別パフォーマンス\n  if (data.emailSent) {\n    metrics.channelPerformance.email.sent++;\n    if (data.emailOpened || data.emailClicked) metrics.channelPerformance.email.engaged++;\n  }\n  if (data.linkedinSent) {\n    metrics.channelPerformance.linkedin.sent++;\n    if (data.linkedinAccepted || data.linkedinReplied) metrics.channelPerformance.linkedin.engaged++;\n  }\n  if (data.videoCreated) {\n    metrics.channelPerformance.video.created++;\n    if (data.videoViewed) metrics.channelPerformance.video.viewed++;\n  }\n  \n  // バリアント別パフォーマンス\n  const variant = data.personalization?.selectedVariant?.type;\n  if (variant && metrics.variantPerformance[variant]) {\n    metrics.variantPerformance[variant].sent++;\n    if (data.engaged) metrics.variantPerformance[variant].engaged++;\n  }\n  \n  // トップパフォーマー\n  if (data.engagementScore > 8) {\n    metrics.topPerformers.push({\n      name: data.name,\n      company: data.company,\n      score: data.engagementScore,\n      actions: data.engagementActions\n    });\n  }\n}\n\n// レート計算\nmetrics.channelPerformance.email.responseRate = metrics.channelPerformance.email.sent > 0 ? \n  (metrics.channelPerformance.email.engaged / metrics.channelPerformance.email.sent * 100).toFixed(2) : 0;\nmetrics.channelPerformance.linkedin.responseRate = metrics.channelPerformance.linkedin.sent > 0 ?\n  (metrics.channelPerformance.linkedin.engaged / metrics.channelPerformance.linkedin.sent * 100).toFixed(2) : 0;\nmetrics.channelPerformance.video.viewRate = metrics.channelPerformance.video.created > 0 ?\n  (metrics.channelPerformance.video.viewed / metrics.channelPerformance.video.created * 100).toFixed(2) : 0;\n\n// バリアントレート計算\nfor (const variant in metrics.variantPerformance) {\n  const v = metrics.variantPerformance[variant];\n  v.rate = v.sent > 0 ? (v.engaged / v.sent * 100).toFixed(2) : 0;\n}\n\n// 改善提案の生成\nif (metrics.channelPerformance.email.responseRate < 10) {\n  metrics.improvementAreas.push('Email subject lines need optimization - consider A/B testing');\n}\nif (metrics.channelPerformance.video.viewRate < 30) {\n  metrics.improvementAreas.push('Video thumbnails or personalization may need improvement');\n}\nif (metrics.optOuts / metrics.totalLeads > 0.05) {\n  metrics.improvementAreas.push('High opt-out rate - review targeting criteria');\n}\n\n// 最適なバリアントの特定\nlet bestVariant = { name: '', rate: 0 };\nfor (const [name, data] of Object.entries(metrics.variantPerformance)) {\n  if (parseFloat(data.rate) > bestVariant.rate) {\n    bestVariant = { name, rate: parseFloat(data.rate) };\n  }\n}\n\nreturn [{\n  json: {\n    reportType: 'weekly_performance',\n    period: {\n      start: weekStart.toISOString(),\n      end: now.toISOString()\n    },\n    metrics: metrics,\n    summary: {\n      overallResponseRate: ((metrics.replies / metrics.emailsSent) * 100).toFixed(2) + '%',\n      meetingConversionRate: ((metrics.meetings / metrics.hotLeads) * 100).toFixed(2) + '%',\n      averageEngagementScore: (metrics.totalEngagementScore / metrics.totalLeads).toFixed(2),\n      bestPerformingVariant: bestVariant,\n      topPerformers: metrics.topPerformers.slice(0, 5)\n    },\n    recommendations: metrics.improvementAreas,\n    generatedAt: now.toISOString()\n  }\n}];"
      },
      "id": "e2f3a4b5-c6d7-8901-fabc-234567890124",
      "name": "Generate Performance Report",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        250,
        1100
      ],
      "notes": "週次パフォーマンスレポートを生成。リード数、エンゲージメント率、チャネル別パフォーマンス、バリアント別効果、トップパフォーマー、改善提案を含む包括的な分析。"
    },
    {
      "parameters": {
        "operation": "search",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Outreach Activities",
        "options": {
          "filterByFormula": "=AND({Created At} >= DATEADD(TODAY(), -7, 'days'), {Created At} <= TODAY())",
          "sort": [
            {
              "field": "Created At",
              "direction": "desc"
            }
          ],
          "returnAll": true
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "f3a4b5c6-d7e8-9012-abcd-345678901235",
      "name": "Fetch Weekly Activity Data",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        50,
        1100
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "過去7日間のアウトリーチアクティビティデータをAirtableから取得。パフォーマンスレポート生成の基礎データ。"
    },
    {
      "parameters": {
        "operation": "create",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Performance Reports",
        "fieldsToSend": {
          "values": [
            {
              "name": "Report Type",
              "value": "={{ $json.reportType }}"
            },
            {
              "name": "Period Start",
              "value": "={{ $json.period.start }}"
            },
            {
              "name": "Period End",
              "value": "={{ $json.period.end }}"
            },
            {
              "name": "Total Leads",
              "value": "={{ $json.metrics.totalLeads }}"
            },
            {
              "name": "Hot Leads",
              "value": "={{ $json.metrics.hotLeads }}"
            },
            {
              "name": "Emails Sent",
              "value": "={{ $json.metrics.emailsSent }}"
            },
            {
              "name": "Overall Response Rate",
              "value": "={{ $json.summary.overallResponseRate }}"
            },
            {
              "name": "Meeting Conversion Rate",
              "value": "={{ $json.summary.meetingConversionRate }}"
            },
            {
              "name": "Email Performance",
              "value": "={{ JSON.stringify($json.metrics.channelPerformance.email) }}"
            },
            {
              "name": "LinkedIn Performance",
              "value": "={{ JSON.stringify($json.metrics.channelPerformance.linkedin) }}"
            },
            {
              "name": "Video Performance",
              "value": "={{ JSON.stringify($json.metrics.channelPerformance.video) }}"
            },
            {
              "name": "Best Variant",
              "value": "={{ $json.summary.bestPerformingVariant.name + ' (' + $json.summary.bestPerformingVariant.rate + '%)' }}"
            },
            {
              "name": "Top Performers",
              "value": "={{ JSON.stringify($json.summary.topPerformers) }}"
            },
            {
              "name": "Recommendations",
              "value": "={{ $json.recommendations.join('; ') }}"
            },
            {
              "name": "Generated At",
              "value": "={{ $json.generatedAt }}"
            }
          ]
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "a4b5c6d7-e8f9-0123-bcde-456789012346",
      "name": "Store Performance Report",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        450,
        1100
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "生成されたパフォーマンスレポートをAirtableに保存。履歴トラッキングと長期的なトレンド分析のため。"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "post",
        "channel": "#weekly-reports",
        "text": "=📊 **Weekly C-Suite Outreach Performance Report** 📊\n\n**Period:** {{ new Date($json.period.start).toLocaleDateString() }} - {{ new Date($json.period.end).toLocaleDateString() }}\n\n**📈 Lead Generation:**\n• Total Leads: {{ $json.metrics.totalLeads }}\n• Hot Leads: {{ $json.metrics.hotLeads }} 🔥\n• Warm Leads: {{ $json.metrics.warmLeads }} 🌡️\n• Cold Leads: {{ $json.metrics.coldLeads }} ❄️\n\n**📧 Email Performance:**\n• Sent: {{ $json.metrics.emailsSent }}\n• Open Rate: {{ ($json.metrics.emailsOpened / $json.metrics.emailsSent * 100).toFixed(1) }}%\n• Click Rate: {{ ($json.metrics.emailsClicked / $json.metrics.emailsSent * 100).toFixed(1) }}%\n• Response Rate: {{ $json.metrics.channelPerformance.email.responseRate }}%\n\n**💼 LinkedIn Performance:**\n• Connections Sent: {{ $json.metrics.channelPerformance.linkedin.sent }}\n• Acceptance Rate: {{ $json.metrics.channelPerformance.linkedin.responseRate }}%\n\n**🎥 Video Performance:**\n• Videos Created: {{ $json.metrics.channelPerformance.video.created }}\n• View Rate: {{ $json.metrics.channelPerformance.video.viewRate }}%\n\n**🎯 Key Metrics:**\n• Overall Response Rate: {{ $json.summary.overallResponseRate }}\n• Meeting Conversion (Hot Leads): {{ $json.summary.meetingConversionRate }}\n• Average Engagement Score: {{ $json.summary.averageEngagementScore }}/10\n\n**🏆 Best Performing Variant:** {{ $json.summary.bestPerformingVariant.name }} ({{ $json.summary.bestPerformingVariant.rate }}% engagement)\n\n**⚡ Top Performers:**\n{{ $json.summary.topPerformers.map((p, i) => `${i+1}. ${p.name} (${p.company}) - Score: ${p.score}`).join('\n') }}\n\n**💡 Recommendations:**\n{{ $json.recommendations.map((r, i) => `${i+1}. ${r}`).join('\n') }}",
        "attachments": [
          {
            "color": "good",
            "fields": [
              {
                "title": "Next Week Focus",
                "value": "Optimize {{ $json.summary.bestPerformingVariant.rate < 20 ? 'personalization messages' : 'follow-up timing' }}",
                "short": false
              }
            ]
          }
        ],
        "authentication": "oAuth2"
      },
      "id": "b5c6d7e8-f9a0-1234-cdef-567890123457",
      "name": "Send Slack Report",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        650,
        1100
      ],
      "credentials": {
        "slackApi": {
          "id": "slack-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "週次レポートをSlackの#weekly-reportsチャンネルに投稿。主要メトリクス、パフォーマンス分析、トップパフォーマー、改善提案を含む。"
    },
    {
      "parameters": {
        "operation": "search",
        "base": "appXXXXXXXXXXXXXX",
        "table": "A/B Test Results",
        "options": {
          "filterByFormula": "=AND({Test Status} = 'Active', {Updated At} >= DATEADD(TODAY(), -7, 'days'))",
          "returnAll": true
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "c6d7e8f9-a0b1-2345-defa-678901234568",
      "name": "Fetch A/B Test Data",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        50,
        1250
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "アクティブなA/Bテストの結果データを取得。バリアント別のパフォーマンスを分析し、最適化提案を生成。"
    },
    {
      "parameters": {
        "functionCode": "// A/Bテスト結果の統計的分析\nconst items = $input.all();\nconst testResults = [];\n\n// 各テストの分析\nfor (const item of items) {\n  const test = item.json;\n  \n  // バリアントAとBのデータ\n  const variantA = {\n    name: test.variantA_name || 'Variant A',\n    sent: test.variantA_sent || 0,\n    conversions: test.variantA_conversions || 0,\n    conversionRate: 0,\n    confidence: 0\n  };\n  \n  const variantB = {\n    name: test.variantB_name || 'Variant B',\n    sent: test.variantB_sent || 0,\n    conversions: test.variantB_conversions || 0,\n    conversionRate: 0,\n    confidence: 0\n  };\n  \n  // コンバージョン率計算\n  variantA.conversionRate = variantA.sent > 0 ? (variantA.conversions / variantA.sent * 100) : 0;\n  variantB.conversionRate = variantB.sent > 0 ? (variantB.conversions / variantB.sent * 100) : 0;\n  \n  // 簡易的な統計的有意性の計算（Z-test）\n  const pooledProportion = (variantA.conversions + variantB.conversions) / (variantA.sent + variantB.sent);\n  const standardError = Math.sqrt(pooledProportion * (1 - pooledProportion) * (1/variantA.sent + 1/variantB.sent));\n  const zScore = standardError > 0 ? Math.abs((variantA.conversionRate/100 - variantB.conversionRate/100) / standardError) : 0;\n  \n  // 信頼度（95%信頼区間 = z-score > 1.96）\n  const confidence = zScore > 1.96 ? 95 : zScore > 1.645 ? 90 : zScore > 1.28 ? 80 : 0;\n  \n  // 勝者の決定\n  let winner = 'No clear winner yet';\n  let recommendation = 'Continue testing for more data';\n  \n  if (confidence >= 95 && Math.abs(variantA.conversionRate - variantB.conversionRate) > 2) {\n    winner = variantA.conversionRate > variantB.conversionRate ? variantA.name : variantB.name;\n    recommendation = `Deploy ${winner} as the default`;\n  } else if (variantA.sent + variantB.sent > 1000) {\n    recommendation = 'Consider ending test - sufficient sample size reached';\n  }\n  \n  testResults.push({\n    testName: test.testName || 'Unnamed Test',\n    testType: test.testType || 'Subject Line',\n    variantA: variantA,\n    variantB: variantB,\n    winner: winner,\n    confidence: confidence,\n    recommendation: recommendation,\n    lift: variantA.conversionRate > 0 ? \n      ((Math.max(variantA.conversionRate, variantB.conversionRate) / Math.min(variantA.conversionRate, variantB.conversionRate) - 1) * 100).toFixed(1) : 0,\n    totalSampleSize: variantA.sent + variantB.sent\n  });\n}\n\n// 最も成功したテストの特定\nconst bestTest = testResults.reduce((best, current) => {\n  const currentLift = parseFloat(current.lift);\n  const bestLift = parseFloat(best.lift);\n  return currentLift > bestLift ? current : best;\n}, testResults[0] || {});\n\nreturn [{\n  json: {\n    reportType: 'ab_test_analysis',\n    generatedAt: new Date().toISOString(),\n    testResults: testResults,\n    summary: {\n      totalTests: testResults.length,\n      testsWithWinner: testResults.filter(t => t.winner !== 'No clear winner yet').length,\n      averageLift: testResults.length > 0 ? \n        (testResults.reduce((sum, t) => sum + parseFloat(t.lift), 0) / testResults.length).toFixed(1) : 0,\n      bestPerformingTest: bestTest\n    },\n    insights: [\n      `${bestTest.testName} showed ${bestTest.lift}% improvement`,\n      `${testResults.filter(t => t.confidence >= 95).length} tests reached statistical significance`,\n      `Focus on ${testResults.filter(t => t.testType === 'Subject Line').length > 0 ? 'subject line' : 'content'} optimization`\n    ]\n  }\n}];"
      },
      "id": "d7e8f9a0-b1c2-3456-efab-789012345679",
      "name": "Analyze A/B Tests",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        250,
        1250
      ],
      "notes": "A/Bテスト結果の統計的分析。コンバージョン率、統計的有意性、信頼度、リフト率を計算。勝者の決定と最適化提案を生成。"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * 1"
            }
          ]
        }
      },
      "id": "e8f9a0b1-c2d3-4567-fabc-890123456780",
      "name": "Weekly Report Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        50,
        950
      ],
      "notes": "毎週月曜日午前9時に週次パフォーマンスレポートを自動生成。前週のアウトリーチ活動を分析し、改善提案を含む。"
    },
    {
      "parameters": {
        "operation": "update",
        "base": "appXXXXXXXXXXXXXX",
        "table": "Campaign Metrics",
        "updateBy": "Campaign Name",
        "id": "c-suite-outreach-automation",
        "fieldsToSend": {
          "values": [
            {
              "name": "Last Report Date",
              "value": "={{ new Date().toISOString() }}"
            },
            {
              "name": "Total Leads Generated",
              "value": "={{ $json.metrics.totalLeads }}"
            },
            {
              "name": "Current Response Rate",
              "value": "={{ $json.summary.overallResponseRate }}"
            },
            {
              "name": "Current Meeting Rate",
              "value": "={{ $json.summary.meetingConversionRate }}"
            },
            {
              "name": "Best Performing Channel",
              "value": "={{ Object.entries($json.metrics.channelPerformance).reduce((best, [channel, data]) => parseFloat(data.responseRate) > parseFloat(best.rate) ? {channel, rate: data.responseRate} : best, {channel: '', rate: 0}).channel }}"
            },
            {
              "name": "Active A/B Tests",
              "value": "={{ $json.abTestSummary?.totalTests || 0 }}"
            },
            {
              "name": "Average Engagement Score",
              "value": "={{ $json.summary.averageEngagementScore }}"
            }
          ]
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "f9a0b1c2-d3e4-5678-abcd-901234567891",
      "name": "Update Campaign Metrics",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        850,
        1100
      ],
      "credentials": {
        "airtableOAuth2Api": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "キャンペーン全体のメトリクスをAirtableに更新。経時的なパフォーマンス追跡とダッシュボード表示のため。"
    },
    {
      "parameters": {
        "content": "# 🎯 Stage 1: リード発掘とスクレイピング\n\n## 概要\nLinkedInから痛みのキーワードを含む投稿をしているCスイート経営層を特定します。\n\n## 主要ノード\n1. **Schedule Trigger**: 2時間ごとに自動実行\n2. **Airtop Scraper API**: LinkedInの投稿を検索\n3. **Parse LinkedIn Results**: 投稿データを構造化\n4. **Filter C-Suite Only**: 役職と企業規模でフィルタリング\n\n## 処理内容\n- 痛みのキーワード: \"非効率\", \"手作業\", \"時間の無駄\", \"自動化が必要\"\n- 対象役職: CEO, CTO, CDO, VP Operations\n- 企業規模: 50-5000人\n- エンゲージメントスコアの計算\n\n## 出力\n適格なCスイートリードのリスト（名前、役職、企業、LinkedIn URL、痛みのキーワード）",
        "height": 350,
        "width": 450
      },
      "id": "stage1-sticky",
      "name": "Stage 1: Lead Discovery",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ]
    },
    {
      "parameters": {
        "content": "# 🔍 Stage 2: データエンリッチメント\n\n## 概要\n特定されたリードに対して、複数のAPIを並列実行して詳細情報を収集します。\n\n## 主要ノード\n1. **Clearbit Enrichment**: 企業の詳細情報（業界、収益、技術スタック）\n2. **Hunter.io Email Finder**: メールアドレスと到達可能性スコア\n3. **Apollo Intent Data**: インテントシグナルと採用トレンド\n4. **ZoomInfo Insights**: 競合情報と市場ポジショニング\n5. **Case Study Database**: 業界別の成功事例マッチング\n\n## 並列処理の利点\n- 5つのAPIを同時実行で処理時間を最小化\n- 各APIのエラーは個別にハンドリング（continueOnFail: true）\n- 24時間キャッシュでケーススタディの重複取得を防止\n\n## 出力\nエンリッチされたリード情報（メール、企業詳細、インテントシグナル、ケーススタディ）",
        "height": 400,
        "width": 450
      },
      "id": "stage2-sticky",
      "name": "Stage 2: Data Enrichment",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1050,
        50
      ]
    },
    {
      "parameters": {
        "content": "# 🤖 Stage 3: AI処理とスコアリング\n\n## 概要\nAIを活用してペインポイントを分析し、BANTスコアリングでリードを評価します。\n\n## 主要ノード\n1. **AI Pain Analysis**: GPT-4でペインポイントを深掘り分析\n2. **Score Calculator**: 4軸評価（痛み・予算・タイムライン・準備状況）\n3. **Generate Personalization**: 3つのメッセージバリアント生成\n4. **AI Message Enhancer**: AI Agentでメッセージを洗練\n\n## スコアリングロジック\n- 痛みの深刻度 (35%)\n- 予算権限 (25%)\n- タイムライン (25%)\n- 準備状況 (15%)\n\n## カテゴリ分類\n- Hot (8-10): 即座にアプローチ\n- Warm (6-7): 育成が必要\n- Cold (<6): 長期的な関係構築\n\n## 出力\nスコア付きリード、パーソナライズされたメッセージ、推奨ソリューション",
        "height": 450,
        "width": 450
      },
      "id": "stage3-sticky",
      "name": "Stage 3: AI Processing",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1550,
        50
      ]
    },
    {
      "parameters": {
        "content": "# 🎬 Stage 4: コンテンツ生成\n\n## 概要\nパーソナライズされたビデオメッセージとメールテンプレートを生成します。\n\n## 主要ノード\n1. **HeyGen Video API x3**: 3つのバリアントでビデオ生成\n   - バリアント1: ユースケース焦点\n   - バリアント2: 業界焦点\n   - バリアント3: ROI焦点\n2. **Merge Video Results**: ビデオ生成結果を統合\n3. **Email Template Builder**: HTMLメールテンプレート構築\n\n## ビデオ仕様\n- 60秒以内のパーソナライズメッセージ\n- リード名と企業名を動的に挿入\n- プロフェッショナルなアバターと背景\n- エラー時はテキストコンテンツにフォールバック\n\n## 出力\nビデオURL、HTMLメールテンプレート、テキスト版メール",
        "height": 400,
        "width": 450
      },
      "id": "stage4-sticky",
      "name": "Stage 4: Content Generation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2150,
        50
      ]
    },
    {
      "parameters": {
        "content": "# 📤 Stage 5: アウトリーチ実行\n\n## 概要\n14日間のマルチチャネルアウトリーチシーケンスを開始します。\n\n## 主要ノード\n1. **Initialize Outreach Sequence**: Airtableでシーケンス管理\n2. **Route by Lead Category**: Hot/Warm/Coldで戦略を分岐\n3. **LinkedIn Connection Request**: パーソナライズ接続リクエスト\n4. **SendGrid Email Day 1**: ビデオ付きメール送信\n5. **Wait Nodes**: タイミング制御\n\n## シーケンススケジュール\n- Day 1: LinkedIn接続 + メール\n- Day 3: フォローアップメール\n- Day 7: LinkedIn InMail\n- Day 10: ケーススタディ共有\n- Day 14: 最終フォローアップ\n\n## ホットリード特別対応\n- 即座にアクション実行（5秒待機のみ）\n- 高優先度フラグ設定\n\n## 出力\nアウトリーチアクティビティの記録、次回アクション日の設定",
        "height": 450,
        "width": 450
      },
      "id": "stage5-sticky",
      "name": "Stage 5: Outreach Execution",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2750,
        50
      ]
    },
    {
      "parameters": {
        "content": "# 📊 Stage 6: エンゲージメント追跡\n\n## 概要\nSendGridイベントをリアルタイムで受信し、エンゲージメントを追跡します。\n\n## 主要ノード\n1. **SendGrid Event Webhook**: イベント受信（開封、クリック、返信）\n2. **Process SendGrid Events**: エンゲージメントスコア計算\n3. **Check Opt-Out**: 配信停止・スパム報告チェック\n4. **Log Engagement Event**: すべてのイベントを記録\n\n## エンゲージメントスコア\n- メール開封: +1点\n- リンククリック: +3点\n- ビデオ視聴: +5点\n- バウンス: -5点\n- スパム報告: -10点\n\n## オプトアウト処理\n- 即座にシーケンス停止\n- ステータスを\"opted-out\"に更新\n- 理由と日時を記録\n\n## 出力\nエンゲージメントイベントログ、更新されたリードスコア",
        "height": 400,
        "width": 450
      },
      "id": "stage6-sticky",
      "name": "Stage 6: Engagement Tracking",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        250,
        500
      ]
    },
    {
      "parameters": {
        "content": "# 🎯 Stage 7: 感情分析と自動対応\n\n## 概要\nメール返信の感情を分析し、適切なアクションを自動実行します。\n\n## 主要ノード\n1. **Check for Email Reply**: 返信イベントの検出\n2. **AI Sentiment Analysis**: GPT-4で感情分析\n3. **Process Sentiment Results**: アクション決定\n4. **Route by Action Type**: アクション別ルーティング\n5. **Notify Sales Team**: Slackで営業チーム通知\n\n## 感情分類とアクション\n- **Positive（興味あり）**:\n  - 営業チームに即座通知\n  - ミーティングリンク送信準備\n  - スコア+3点\n\n- **Negative（拒否）**:\n  - シーケンス停止\n  - CRMステータスを\"lost\"に更新\n  - スコア-5点\n\n- **Neutral/要フォローアップ**:\n  - 営業チームに手動レビュー依頼\n  - スコア+1点\n\n## 出力\n感情分析結果、推奨アクション、営業チーム通知",
        "height": 500,
        "width": 450
      },
      "id": "stage7-sticky",
      "name": "Stage 7: Sentiment Analysis",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1050,
        500
      ]
    },
    {
      "parameters": {
        "content": "# 🏢 Stage 8: CRM統合と営業連携\n\n## 概要\nHubSpot CRMと完全統合し、営業チームのための包括的な情報を提供します。\n\n## 主要ノード\n1. **HubSpot Contact Upsert**: コンタクト作成/更新\n2. **Check for Deal Creation**: ホットリード判定\n3. **Create HubSpot Deal**: ディール自動作成\n4. **Create Engagement Note**: 詳細情報記録\n5. **Create Follow-up Task**: 営業タスク作成\n\n## CRM連携機能\n- カスタムプロパティでリード情報保存\n- リードスコア、ペインポイント、ソリューション提案\n- LinkedIn URL、ビデオURL、エンゲージメント履歴\n\n## ディール作成ロジック\n- 対象: ホットリード（スコア8以上）\n- 予想金額: 従業員数 × 0.1 × 5,000円\n- クローズ予定: 90日後\n- 優先度: High\n\n## 営業タスク\n- 2日以内の期限設定\n- 24時間後のリマインダー\n- ペインポイントと推奨トーキングポイント含む\n\n## 出力\nCRMレコード、ディール、エンゲージメントノート、フォローアップタスク",
        "height": 550,
        "width": 450
      },
      "id": "stage8-sticky",
      "name": "Stage 8: CRM Integration",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2050,
        350
      ]
    },
    {
      "parameters": {
        "content": "# 📈 Stage 9: パフォーマンス分析とレポート\n\n## 概要\n週次でパフォーマンスを分析し、改善提案を含むレポートを自動生成します。\n\n## 主要ノード\n1. **Weekly Report Trigger**: 毎週月曜9時に実行\n2. **Fetch Weekly Activity Data**: 過去7日間のデータ取得\n3. **Generate Performance Report**: 包括的分析\n4. **Store Performance Report**: Airtableに保存\n5. **Send Slack Report**: チーム共有\n\n## 分析メトリクス\n- リード生成数（Hot/Warm/Cold別）\n- エンゲージメント率（開封/クリック/返信）\n- チャネル別パフォーマンス（Email/LinkedIn/Video）\n- バリアント別効果（ユースケース/業界/ROI）\n- トップパフォーマー特定\n\n## 改善提案の自動生成\n- 開封率10%未満 → 件名最適化提案\n- ビデオ視聴率30%未満 → サムネイル改善提案\n- オプトアウト率5%超 → ターゲティング見直し\n\n## 出力\n週次レポート、改善提案、ベストプラクティス、Slack通知",
        "height": 500,
        "width": 450
      },
      "id": "stage9-sticky",
      "name": "Stage 9: Performance Analytics",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        950
      ]
    },
    {
      "parameters": {
        "content": "# 🧪 Stage 10: A/Bテストと最適化\n\n## 概要\nA/Bテストの結果を統計的に分析し、勝者を決定して最適化を推進します。\n\n## 主要ノード\n1. **Fetch A/B Test Data**: アクティブテストのデータ取得\n2. **Analyze A/B Tests**: 統計的有意性の計算\n3. **Update Campaign Metrics**: 最適化結果の記録\n\n## 統計分析\n- Z-testによる有意性検証\n- 95%信頼区間での勝者決定\n- リフト率の計算\n- 必要サンプルサイズの判定\n\n## テスト対象\n- メール件名\n- メッセージバリアント\n- 送信タイミング\n- ビデオスクリプト\n\n## 最適化サイクル\n1. テスト設計と実行\n2. データ収集（最低1,000サンプル）\n3. 統計的分析\n4. 勝者の本番展開\n5. 新たなテスト開始\n\n## 出力\nテスト結果、統計的信頼度、リフト率、最適化推奨事項",
        "height": 450,
        "width": 450
      },
      "id": "stage10-sticky",
      "name": "Stage 10: A/B Testing",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        1200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.enrichedData?.companyDetails?.country || '' }}",
              "operation": "regex",
              "value2": "^(AT|BE|BG|HR|CY|CZ|DK|EE|FI|FR|DE|GR|HU|IE|IT|LV|LT|LU|MT|NL|PL|PT|RO|SK|SI|ES|SE|GB|NO|IS|LI)$"
            }
          ],
          "boolean": [
            {
              "value1": "={{ ['EU', 'European Union', 'Europe'].some(term => ($json.enrichedData?.companyDetails?.region || '').toLowerCase().includes(term.toLowerCase())) }}",
              "value2": true
            }
          ]
        },
        "combineOperation": "or"
      },
      "id": "gdpr-eu-detection",
      "name": "Detect EU Prospects",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1450,
        750
      ],
      "notes": "EUプロスペクトの検出ロジック。国コードまたは地域情報からEU居住者を特定し、GDPR準拠フローにルーティング。"
    },
    {
      "parameters": {
        "functionCode": "// GDPR同意管理とトラッキング\nconst lead = $json;\nconst isEU = $input.all()[0].json.isEU || false;\n\nif (!isEU) {\n  // 非EU居住者の場合は通常処理\n  return [{\n    json: {\n      ...lead,\n      gdprApplicable: false,\n      consentRequired: false,\n      processingBasis: 'legitimate_interest',\n      dataRetentionDays: 90\n    }\n  }];\n}\n\n// EU居住者の場合のGDPR処理\nconst gdprData = {\n  ...lead,\n  gdprApplicable: true,\n  consentRequired: true,\n  processingBasis: 'pending_consent',\n  dataRetentionDays: 30,\n  consentRequestSent: false,\n  consentTimestamp: null,\n  consentMethod: null,\n  dataProcessingCategories: [\n    'lead_generation',\n    'sales_outreach',\n    'performance_analytics'\n  ],\n  privacyNoticeUrl: 'https://example.com/privacy-gdpr',\n  rightToAccess: true,\n  rightToErasure: true,\n  rightToPortability: true,\n  rightToRectification: true\n};\n\n// 同意管理用のユニークIDを生成\ngdprData.consentId = `consent_${lead.id}_${Date.now()}`;\n\nreturn [{\n  json: gdprData\n}];"
      },
      "id": "gdpr-consent-manager",
      "name": "GDPR Consent Manager",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1650,
        750
      ],
      "notes": "GDPR同意管理とトラッキング。EU居住者に対して適切な同意メカニズムを実装し、データ処理の根拠を記録。"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appXXXXXXXXXXXXXX",
          "mode": "list",
          "cachedResultName": "C-Suite Outreach Base"
        },
        "table": {
          "__rl": true,
          "value": "GDPR Consent Log",
          "mode": "list",
          "cachedResultName": "GDPR Consent Log"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "lead_id": "={{ $json.id }}",
            "consent_id": "={{ $json.consentId }}",
            "gdpr_applicable": "={{ $json.gdprApplicable }}",
            "consent_required": "={{ $json.consentRequired }}",
            "processing_basis": "={{ $json.processingBasis }}",
            "data_retention_days": "={{ $json.dataRetentionDays }}",
            "consent_timestamp": "={{ $json.consentTimestamp || null }}",
            "consent_method": "={{ $json.consentMethod || null }}",
            "data_categories": "={{ JSON.stringify($json.dataProcessingCategories) }}",
            "privacy_notice_url": "={{ $json.privacyNoticeUrl }}",
            "created_at": "={{ new Date().toISOString() }}"
          }
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "gdpr-consent-log",
      "name": "Log GDPR Consent Status",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        1850,
        750
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "airtable-oauth-credentials"
        }
      },
      "notes": "GDPR同意状態をAirtableに記録。同意の有無、処理根拠、データカテゴリー、保持期間を監査証跡として保存。"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.gdprApplicable }}",
              "value2": true
            },
            {
              "value1": "={{ $json.consentRequired }}",
              "value2": true
            }
          ]
        },
        "combineOperation": "and"
      },
      "id": "gdpr-consent-required-check",
      "name": "Check Consent Required",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2050,
        750
      ],
      "notes": "GDPR同意が必要かチェック。EU居住者で同意が必要な場合は同意取得フローへ、それ以外は通常のアウトリーチフローへ。"
    },
    {
      "parameters": {
        "functionCode": "// データ保持期間の自動管理\nconst lead = $json;\nconst now = new Date();\nconst retentionDays = lead.dataRetentionDays || 90;\n\n// データ削除予定日を計算\nconst deletionDate = new Date(now);\ndeletionDate.setDate(deletionDate.getDate() + retentionDays);\n\n// データ保持ポリシー\nconst retentionPolicy = {\n  leadId: lead.id,\n  dataCollectedAt: lead.scrapedAt || now.toISOString(),\n  retentionPeriodDays: retentionDays,\n  scheduledDeletionDate: deletionDate.toISOString(),\n  deletionReason: lead.gdprApplicable ? 'GDPR_compliance' : 'standard_retention',\n  dataCategories: [\n    'personal_identifiers',\n    'professional_information',\n    'communication_history',\n    'engagement_metrics'\n  ],\n  retentionJustification: lead.processingBasis || 'legitimate_interest',\n  reminderDate: new Date(deletionDate.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n  deletionMethod: 'automated_workflow',\n  backupRetention: lead.gdprApplicable ? 0 : 30,\n  auditLogRetention: 365\n};\n\nreturn [{\n  json: {\n    ...lead,\n    retentionPolicy\n  }\n}];"
      },
      "id": "gdpr-retention-manager",
      "name": "Data Retention Manager",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2250,
        850
      ],
      "notes": "データ保持期間の自動管理。GDPR準拠のため30日（EU）または90日（非EU）後の自動削除をスケジュール。"
    },
    {
      "parameters": {
        "content": "# 🔒 GDPR準拠メカニズム\n\n## 概要\nEU一般データ保護規則（GDPR）に準拠した個人データ処理を実装。\n\n## 主要コンポーネント\n1. **EU居住者検出**: 国コード/地域でEUプロスペクト特定\n2. **同意管理**: 明示的同意の取得と記録\n3. **データ保持管理**: 30日（EU）/90日（非EU）の自動削除\n4. **監査ログ**: 全処理の証跡を365日保持\n\n## GDPR権利の実装\n- **アクセス権**: データ開示リクエスト対応\n- **削除権**: 忘れられる権利の実装\n- **訂正権**: データ修正機能\n- **ポータビリティ権**: データエクスポート\n\n## 処理根拠\n- EU: 明示的同意（要取得）\n- 非EU: 正当な利益\n\n## データカテゴリー\n- 個人識別情報\n- 職業情報\n- コミュニケーション履歴\n- エンゲージメント指標",
        "height": 450,
        "width": 350
      },
      "id": "gdpr-sticky",
      "name": "GDPR Compliance Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1450,
        600
      ]
    },
    {
      "parameters": {
        "functionCode": "// API呼び出しの監査ログ実装\nconst auditEntry = {\n  timestamp: new Date().toISOString(),\n  workflowId: $workflow.id,\n  workflowName: $workflow.name,\n  executionId: $execution.id,\n  executionMode: $execution.mode,\n  nodeType: $node.type,\n  nodeName: $node.name,\n  action: 'api_call_audit',\n  apisCalled: [],\n  dataAccessed: [],\n  securityChecks: {\n    credentialsUsed: [],\n    encryptionEnabled: true,\n    httpsOnly: true,\n    rateLimit: 'enforced'\n  },\n  userAgent: $webhook?.headers?.['user-agent'] || 'n8n-workflow',\n  ipAddress: $webhook?.headers?.['x-forwarded-for'] || 'internal',\n  result: 'pending'\n};\n\n// APIコール情報の収集\nconst apiNodes = [\n  'Airtop Scraper API',\n  'Clearbit Enrichment', \n  'Hunter.io Email Finder',\n  'Apollo Intent Data',\n  'ZoomInfo Insights',\n  'HeyGen Video API',\n  'SendGrid Email',\n  'HubSpot Contact'\n];\n\n// 使用されたクレデンシャルの記録（名前のみ、値は記録しない）\napiNodes.forEach(nodeName => {\n  if ($workflow.nodes.find(n => n.name === nodeName)) {\n    auditEntry.apisCalled.push(nodeName);\n    auditEntry.securityChecks.credentialsUsed.push(`${nodeName.toLowerCase().replace(/\\s+/g, '-')}-credentials`);\n  }\n});\n\n// データアクセスパターンの記録\nauditEntry.dataAccessed = [\n  'linkedin_profiles',\n  'company_information',\n  'email_addresses',\n  'intent_signals',\n  'competitor_data'\n];\n\n// セキュリティチェック結果\nauditEntry.securityChecks.apiKeyRotation = 'required_monthly';\nauditEntry.securityChecks.dataEncryption = 'AES-256';\nauditEntry.securityChecks.accessControl = 'role-based';\nauditEntry.result = 'success';\n\nreturn [{\n  json: {\n    ...($json),\n    auditLog: auditEntry\n  }\n}];"
      },
      "id": "security-audit-logger",
      "name": "Security Audit Logger",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        250,
        150
      ],
      "notes": "API呼び出しの監査ログを生成。使用されたクレデンシャル名（値は含まない）、アクセスされたデータタイプ、セキュリティチェック結果を記録。"
    },
    {
      "parameters": {
        "functionCode": "// クレデンシャル暗号化とセキュリティ設定\nconst securityConfig = {\n  encryption: {\n    algorithm: 'AES-256-GCM',\n    keyDerivation: 'PBKDF2',\n    iterations: 100000,\n    saltLength: 32\n  },\n  credentialManagement: {\n    storage: 'n8n_credentials_store',\n    accessControl: 'role_based',\n    rotation: {\n      enabled: true,\n      frequencyDays: 30,\n      notification: 'email_and_slack'\n    },\n    monitoring: {\n      unauthorizedAccess: true,\n      excessiveUsage: true,\n      suspiciousPatterns: true\n    }\n  },\n  apiSecurity: {\n    rateLimiting: {\n      enabled: true,\n      requestsPerMinute: 100,\n      requestsPerHour: 1000,\n      requestsPerDay: 10000\n    },\n    ipWhitelisting: {\n      enabled: false,\n      allowedIPs: []\n    },\n    headers: {\n      'X-Content-Type-Options': 'nosniff',\n      'X-Frame-Options': 'DENY',\n      'X-XSS-Protection': '1; mode=block',\n      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains'\n    }\n  },\n  dataProtection: {\n    piiFields: [\n      'email',\n      'name',\n      'linkedinUrl',\n      'phoneNumber'\n    ],\n    encryptionAtRest: true,\n    encryptionInTransit: true,\n    maskingEnabled: true,\n    retentionPolicy: 'gdpr_compliant'\n  }\n};\n\n// 環境変数の検証\nconst requiredEnvVars = [\n  'N8N_ENCRYPTION_KEY',\n  'N8N_USER_MANAGEMENT_JWT_SECRET',\n  'DB_POSTGRESDB_PASSWORD'\n];\n\nconst missingVars = [];\nrequiredEnvVars.forEach(varName => {\n  if (!process.env[varName]) {\n    missingVars.push(varName);\n  }\n});\n\nif (missingVars.length > 0) {\n  console.warn('Missing security environment variables:', missingVars);\n}\n\nreturn [{\n  json: {\n    ...($json),\n    securityConfig,\n    environmentCheck: {\n      missingVariables: missingVars,\n      securityLevel: missingVars.length === 0 ? 'optimal' : 'degraded'\n    }\n  }\n}];"
      },
      "id": "credential-security-config",
      "name": "Credential Security Config",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        450,
        150
      ],
      "notes": "クレデンシャルの暗号化設定と管理ポリシー。AES-256暗号化、30日ごとのローテーション、レート制限、環境変数チェックを実装。"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appXXXXXXXXXXXXXX",
          "mode": "list",
          "cachedResultName": "C-Suite Outreach Base"
        },
        "table": {
          "__rl": true,
          "value": "Security Audit Log",
          "mode": "list",
          "cachedResultName": "Security Audit Log"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "timestamp": "={{ $json.auditLog.timestamp }}",
            "workflow_id": "={{ $json.auditLog.workflowId }}",
            "workflow_name": "={{ $json.auditLog.workflowName }}",
            "execution_id": "={{ $json.auditLog.executionId }}",
            "execution_mode": "={{ $json.auditLog.executionMode }}",
            "node_type": "={{ $json.auditLog.nodeType }}",
            "node_name": "={{ $json.auditLog.nodeName }}",
            "action": "={{ $json.auditLog.action }}",
            "apis_called": "={{ JSON.stringify($json.auditLog.apisCalled) }}",
            "data_accessed": "={{ JSON.stringify($json.auditLog.dataAccessed) }}",
            "credentials_used": "={{ JSON.stringify($json.auditLog.securityChecks.credentialsUsed) }}",
            "encryption_enabled": "={{ $json.auditLog.securityChecks.encryptionEnabled }}",
            "https_only": "={{ $json.auditLog.securityChecks.httpsOnly }}",
            "rate_limit": "={{ $json.auditLog.securityChecks.rateLimit }}",
            "ip_address": "={{ $json.auditLog.ipAddress }}",
            "user_agent": "={{ $json.auditLog.userAgent }}",
            "result": "={{ $json.auditLog.result }}"
          }
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "security-audit-storage",
      "name": "Store Security Audit",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        650,
        150
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "airtable-oauth-credentials"
        }
      },
      "notes": "セキュリティ監査ログをAirtableに保存。API呼び出し、使用クレデンシャル、データアクセスパターンを記録し、コンプライアンス監査に対応。"
    },
    {
      "parameters": {
        "functionCode": "// 個人データの暗号化処理\nconst crypto = require('crypto');\n\n// 暗号化キー（実際は環境変数から取得）\nconst ENCRYPTION_KEY = process.env.N8N_PII_ENCRYPTION_KEY || 'default-key-for-demo';\nconst ALGORITHM = 'aes-256-gcm';\n\n// 暗号化関数\nfunction encryptPII(text) {\n  if (!text) return null;\n  \n  const iv = crypto.randomBytes(16);\n  const salt = crypto.randomBytes(32);\n  const key = crypto.pbkdf2Sync(ENCRYPTION_KEY, salt, 100000, 32, 'sha256');\n  \n  const cipher = crypto.createCipheriv(ALGORITHM, key, iv);\n  \n  let encrypted = cipher.update(text, 'utf8', 'hex');\n  encrypted += cipher.final('hex');\n  \n  const authTag = cipher.getAuthTag();\n  \n  return {\n    encrypted: encrypted,\n    salt: salt.toString('hex'),\n    iv: iv.toString('hex'),\n    authTag: authTag.toString('hex')\n  };\n}\n\n// マスキング関数\nfunction maskPII(value, type) {\n  if (!value) return null;\n  \n  switch(type) {\n    case 'email':\n      const [localPart, domain] = value.split('@');\n      const maskedLocal = localPart.substring(0, 2) + '***';\n      return `${maskedLocal}@${domain}`;\n    \n    case 'name':\n      const parts = value.split(' ');\n      return parts.map(part => part.charAt(0) + '***').join(' ');\n    \n    case 'url':\n      return value.replace(/\\/in\\/[^\\/]+/, '/in/***');\n    \n    default:\n      return '***';\n  }\n}\n\n// リードデータの暗号化とマスキング\nconst lead = $json;\nconst encryptedLead = {\n  ...lead,\n  pii: {\n    email: {\n      masked: maskPII(lead.email, 'email'),\n      encrypted: encryptPII(lead.email)\n    },\n    name: {\n      masked: maskPII(lead.name, 'name'),\n      encrypted: encryptPII(lead.name)\n    },\n    linkedinUrl: {\n      masked: maskPII(lead.linkedinUrl, 'url'),\n      encrypted: encryptPII(lead.linkedinUrl)\n    }\n  },\n  encryptionMetadata: {\n    algorithm: ALGORITHM,\n    keyDerivation: 'PBKDF2',\n    iterations: 100000,\n    timestamp: new Date().toISOString()\n  }\n};\n\n// 元のPIIフィールドを削除\ndelete encryptedLead.email;\ndelete encryptedLead.name;\ndelete encryptedLead.linkedinUrl;\n\nreturn [{\n  json: encryptedLead\n}];"
      },
      "id": "pii-encryption",
      "name": "PII Data Encryption",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        850,
        150
      ],
      "notes": "個人識別情報（PII）の暗号化処理。メール、名前、LinkedIn URLをAES-256-GCMで暗号化し、マスキングされたバージョンも保持。"
    },
    {
      "parameters": {
        "content": "# 🔐 データセキュリティとクレデンシャル管理\n\n## 概要\nエンタープライズグレードのセキュリティ実装で、データとAPIクレデンシャルを保護。\n\n## セキュリティ層\n\n### 1. クレデンシャル管理\n- **保存**: n8n Credentials Store（暗号化）\n- **ローテーション**: 30日ごと自動更新\n- **アクセス制御**: ロールベース（RBAC）\n- **監視**: 不正アクセス検知\n\n### 2. データ暗号化\n- **アルゴリズム**: AES-256-GCM\n- **キー導出**: PBKDF2（100,000回）\n- **保存時**: 全PIIフィールド暗号化\n- **転送時**: HTTPS必須\n\n### 3. APIセキュリティ\n- **レート制限**: 100/分、1000/時、10000/日\n- **HTTPSヘッダー**: HSTS、XSS保護、Clickjacking防止\n- **認証**: Bearer Token/OAuth2\n\n### 4. 監査ログ\n- **記録内容**: API呼び出し、データアクセス、クレデンシャル使用\n- **保持期間**: 365日（コンプライアンス要件）\n- **暗号化**: ログ自体も暗号化\n\n### 5. PIIマスキング\n- メール: ab***@example.com\n- 名前: J*** D***\n- URL: /in/***\n\n## 環境変数（必須）\n- N8N_ENCRYPTION_KEY\n- N8N_USER_MANAGEMENT_JWT_SECRET\n- DB_POSTGRESDB_PASSWORD\n- N8N_PII_ENCRYPTION_KEY",
        "height": 600,
        "width": 400
      },
      "id": "security-sticky",
      "name": "Security & Credentials Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        250,
        -50
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "days",
              "daysInterval": 1
            }
          ]
        }
      },
      "id": "data-deletion-trigger",
      "name": "Daily Deletion Check",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        2450,
        950
      ],
      "notes": "毎日午前2時にデータ削除対象をチェック。GDPRおよび標準保持期間に基づいて自動削除を実行。"
    },
    {
      "parameters": {
        "operation": "list",
        "base": {
          "__rl": true,
          "value": "appXXXXXXXXXXXXXX",
          "mode": "list",
          "cachedResultName": "C-Suite Outreach Base"
        },
        "table": {
          "__rl": true,
          "value": "Leads",
          "mode": "list",
          "cachedResultName": "Leads"
        },
        "options": {
          "filterByFormula": "=OR(AND({gdpr_applicable} = TRUE(), DATETIME_DIFF(TODAY(), {created_at}, 'days') >= 30), AND({gdpr_applicable} = FALSE(), DATETIME_DIFF(TODAY(), {created_at}, 'days') >= 90))",
          "sort": {
            "sortFieldsUi": {
              "sortFields": [
                {
                  "fieldName": "created_at",
                  "order": "asc"
                }
              ]
            }
          }
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "fetch-deletion-candidates",
      "name": "Fetch Deletion Candidates",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        2650,
        950
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "airtable-oauth-credentials"
        }
      },
      "notes": "削除対象リードを取得。GDPR適用リードは30日、非適用は90日経過したデータを抽出。"
    },
    {
      "parameters": {
        "functionCode": "// データ削除前の最終確認と削除準備\nconst deletionCandidates = $input.all();\nconst deletionBatch = [];\nconst deletionLog = [];\n\nfor (const item of deletionCandidates) {\n  const lead = item.json;\n  \n  // 削除対象の確認\n  const createdAt = new Date(lead.created_at);\n  const now = new Date();\n  const daysSinceCreation = Math.floor((now - createdAt) / (1000 * 60 * 60 * 24));\n  \n  const isGDPR = lead.gdpr_applicable === true;\n  const retentionDays = isGDPR ? 30 : 90;\n  \n  if (daysSinceCreation >= retentionDays) {\n    // 削除前の監査ログエントリ作成\n    const auditEntry = {\n      leadId: lead.id,\n      deletionReason: isGDPR ? 'GDPR_auto_deletion' : 'standard_retention_policy',\n      dataCategories: [\n        'personal_identifiers',\n        'professional_information',\n        'communication_history',\n        'engagement_metrics',\n        'ai_generated_content'\n      ],\n      retentionPeriodDays: retentionDays,\n      actualRetentionDays: daysSinceCreation,\n      deletionTimestamp: now.toISOString(),\n      deletionMethod: 'automated_workflow',\n      complianceReference: isGDPR ? 'GDPR_Article_17' : 'company_policy',\n      dataSubjectNotified: false,\n      backupDeleted: true,\n      verificationHash: null\n    };\n    \n    // 削除前にデータのハッシュを生成（削除証明用）\n    const crypto = require('crypto');\n    const dataString = JSON.stringify({\n      id: lead.id,\n      email: lead.pii?.email?.masked || 'deleted',\n      name: lead.pii?.name?.masked || 'deleted',\n      company: lead.company\n    });\n    auditEntry.verificationHash = crypto.createHash('sha256').update(dataString).digest('hex');\n    \n    deletionBatch.push({\n      json: {\n        leadId: lead.id,\n        airtableRecordId: lead.airtable_record_id,\n        hubspotContactId: lead.hubspot_contact_id,\n        auditEntry: auditEntry\n      }\n    });\n    \n    deletionLog.push(auditEntry);\n  }\n}\n\nreturn deletionBatch.length > 0 ? deletionBatch : [{\n  json: {\n    message: 'No records found for deletion',\n    timestamp: new Date().toISOString()\n  }\n}];"
      },
      "id": "prepare-deletion-batch",
      "name": "Prepare Deletion Batch",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2850,
        950
      ],
      "notes": "削除バッチの準備と削除前の監査ログエントリ作成。削除証明用のハッシュ値を生成。"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appXXXXXXXXXXXXXX",
          "mode": "list",
          "cachedResultName": "C-Suite Outreach Base"
        },
        "table": {
          "__rl": true,
          "value": "Data Deletion Log",
          "mode": "list",
          "cachedResultName": "Data Deletion Log"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "lead_id": "={{ $json.auditEntry.leadId }}",
            "deletion_reason": "={{ $json.auditEntry.deletionReason }}",
            "data_categories": "={{ JSON.stringify($json.auditEntry.dataCategories) }}",
            "retention_period_days": "={{ $json.auditEntry.retentionPeriodDays }}",
            "actual_retention_days": "={{ $json.auditEntry.actualRetentionDays }}",
            "deletion_timestamp": "={{ $json.auditEntry.deletionTimestamp }}",
            "deletion_method": "={{ $json.auditEntry.deletionMethod }}",
            "compliance_reference": "={{ $json.auditEntry.complianceReference }}",
            "verification_hash": "={{ $json.auditEntry.verificationHash }}",
            "status": "pending"
          }
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "log-deletion-audit",
      "name": "Log Deletion Audit",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        3050,
        950
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "airtable-oauth-credentials"
        }
      },
      "notes": "削除監査ログを記録。削除理由、対象データカテゴリー、検証ハッシュを保存。"
    },
    {
      "parameters": {
        "operation": "delete",
        "base": {
          "__rl": true,
          "value": "appXXXXXXXXXXXXXX",
          "mode": "list",
          "cachedResultName": "C-Suite Outreach Base"
        },
        "table": {
          "__rl": true,
          "value": "Leads",
          "mode": "list",
          "cachedResultName": "Leads"
        },
        "id": "={{ $json.airtableRecordId }}",
        "authentication": "airtableOAuth2Api"
      },
      "id": "delete-airtable-record",
      "name": "Delete Airtable Record",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        3250,
        850
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "airtable-oauth-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "Airtableからリードレコードを削除。エラー時も処理を継続して他のシステムからの削除を確実に実行。"
    },
    {
      "parameters": {
        "resource": "contact",
        "operation": "delete",
        "contactId": "={{ $json.hubspotContactId }}",
        "authentication": "hubspotOAuth2Api"
      },
      "id": "delete-hubspot-contact",
      "name": "Delete HubSpot Contact",
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2,
      "position": [
        3250,
        1050
      ],
      "credentials": {
        "hubspotApi": {
          "id": "hubspot-api-credentials"
        }
      },
      "continueOnFail": true,
      "notes": "HubSpot CRMからコンタクトを削除。関連するディールやタスクも自動的に削除される。"
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "appXXXXXXXXXXXXXX",
          "mode": "list",
          "cachedResultName": "C-Suite Outreach Base"
        },
        "table": {
          "__rl": true,
          "value": "Data Deletion Log",
          "mode": "list",
          "cachedResultName": "Data Deletion Log"
        },
        "id": "={{ $json.deletionLogId }}",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "completed",
            "completed_at": "={{ new Date().toISOString() }}",
            "airtable_deleted": "={{ $json.airtableDeleted }}",
            "hubspot_deleted": "={{ $json.hubspotDeleted }}"
          }
        },
        "authentication": "airtableOAuth2Api"
      },
      "id": "update-deletion-status",
      "name": "Update Deletion Status",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2,
      "position": [
        3450,
        950
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "airtable-oauth-credentials"
        }
      },
      "notes": "削除完了ステータスを更新。各システムからの削除結果を記録。"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "delete-request",
        "responseMode": "responseNode",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "manual-deletion-webhook",
      "name": "Manual Deletion Request",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        2450,
        1250
      ],
      "webhookId": "manual-deletion-request",
      "notes": "手動削除リクエストを受け付けるWebhook。GDPR削除権行使やオプトアウトリクエストに対応。"
    },
    {
      "parameters": {
        "functionCode": "// 手動削除リクエストの検証と処理\nconst request = $json;\nconst requiredFields = ['email', 'reason', 'verification_token'];\n\n// 必須フィールドの確認\nfor (const field of requiredFields) {\n  if (!request[field]) {\n    return [{\n      json: {\n        error: true,\n        message: `Missing required field: ${field}`,\n        status: 400\n      }\n    }];\n  }\n}\n\n// 削除理由の検証\nconst validReasons = [\n  'gdpr_right_to_erasure',\n  'data_subject_request',\n  'opt_out',\n  'data_correction',\n  'legal_requirement'\n];\n\nif (!validReasons.includes(request.reason)) {\n  return [{\n    json: {\n      error: true,\n      message: 'Invalid deletion reason',\n      validReasons: validReasons,\n      status: 400\n    }\n  }];\n}\n\n// 削除リクエストの準備\nconst deletionRequest = {\n  requestId: `del_req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n  email: request.email,\n  reason: request.reason,\n  additionalInfo: request.additional_info || '',\n  requestTimestamp: new Date().toISOString(),\n  requestIpAddress: $webhook.headers['x-forwarded-for'] || 'unknown',\n  verificationToken: request.verification_token,\n  status: 'pending_verification',\n  gdprCompliant: request.reason.includes('gdpr'),\n  immediateAction: request.reason === 'gdpr_right_to_erasure',\n  notificationRequired: true\n};\n\nreturn [{\n  json: deletionRequest\n}];"
      },
      "id": "validate-deletion-request",
      "name": "Validate Deletion Request",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2650,
        1250
      ],
      "notes": "手動削除リクエストの検証。必須フィールドと削除理由の妥当性をチェック。"
    },
    {
      "parameters": {
        "content": "# 🗑️ データ削除ワークフロー\n\n## 概要\nGDPR準拠の自動削除と手動削除リクエストに対応する包括的なデータ削除システム。\n\n## 自動削除フロー\n1. **毎日実行**: 午前2時に削除対象をチェック\n2. **保持期間**:\n   - GDPR対象: 30日後に自動削除\n   - 非GDPR: 90日後に自動削除\n3. **削除対象**: \n   - Airtableリード記録\n   - HubSpotコンタクト\n   - 関連するすべてのデータ\n\n## 手動削除リクエスト\n- **Webhook経由**: POST /webhook/delete-request\n- **削除理由**:\n  - gdpr_right_to_erasure（忘れられる権利）\n  - data_subject_request（本人からの要求）\n  - opt_out（オプトアウト）\n  - data_correction（データ訂正）\n  - legal_requirement（法的要求）\n\n## 削除プロセス\n1. 削除前の監査ログ作成\n2. 検証ハッシュ生成（削除証明）\n3. 各システムからのデータ削除\n4. 削除完了の記録\n5. 必要に応じて通知送信\n\n## コンプライアンス\n- GDPR Article 17準拠\n- 削除証跡の365日保持\n- 削除証明書の発行可能",
        "height": 550,
        "width": 400
      },
      "id": "deletion-workflow-sticky",
      "name": "Data Deletion Workflow Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2450,
        800
      ]
    },
    {
      "parameters": {
        "mode": "manual",
        "manualTriggerParam": "testMode"
      },
      "id": "test-mode-trigger",
      "name": "Test Mode Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        3650,
        150
      ],
      "notes": "テストモード用の手動トリガー。モックデータでエンドツーエンドのワークフローテストを実行。"
    },
    {
      "parameters": {
        "functionCode": "// テストモード設定とモックデータ生成\nconst testMode = $workflow.staticData.testMode || false;\nconst testScenario = $json.testScenario || 'hot_lead';\n\n// テストシナリオ別のモックデータ\nconst mockData = {\n  hot_lead: {\n    leads: [\n      {\n        id: 'test_lead_hot_001',\n        linkedinUrl: 'https://linkedin.com/in/test-ceo-hot',\n        name: 'Test CEO Hot',\n        title: 'CEO',\n        company: 'Test Tech Corp',\n        companySize: '500',\n        postContent: 'We are wasting too much time on manual processes. Need automation urgently!',\n        painKeywords: ['wasting time', 'manual process', 'need automation'],\n        engagementScore: 850,\n        scrapedAt: new Date().toISOString()\n      }\n    ],\n    expectedScore: 9,\n    expectedCategory: 'hot'\n  },\n  warm_lead: {\n    leads: [\n      {\n        id: 'test_lead_warm_001',\n        linkedinUrl: 'https://linkedin.com/in/test-cto-warm',\n        name: 'Test CTO Warm',\n        title: 'CTO',\n        company: 'Medium Software Inc',\n        companySize: '200',\n        postContent: 'Looking into ways to improve our operational efficiency.',\n        painKeywords: ['inefficient', 'improve'],\n        engagementScore: 450,\n        scrapedAt: new Date().toISOString()\n      }\n    ],\n    expectedScore: 7,\n    expectedCategory: 'warm'\n  },\n  gdpr_lead: {\n    leads: [\n      {\n        id: 'test_lead_gdpr_001',\n        linkedinUrl: 'https://linkedin.com/in/test-cdo-eu',\n        name: 'Test CDO EU',\n        title: 'Chief Digital Officer',\n        company: 'European Digital GmbH',\n        companySize: '1000',\n        postContent: 'Digital transformation is key to our success.',\n        painKeywords: ['manual process'],\n        engagementScore: 600,\n        scrapedAt: new Date().toISOString(),\n        enrichedData: {\n          companyDetails: {\n            country: 'DE',\n            region: 'European Union'\n          }\n        }\n      }\n    ],\n    expectedScore: 8,\n    expectedCategory: 'hot',\n    expectedGDPR: true\n  },\n  error_scenario: {\n    leads: [\n      {\n        id: 'test_lead_error_001',\n        linkedinUrl: null,\n        name: '',\n        title: 'Invalid Data',\n        company: null,\n        companySize: 'invalid',\n        postContent: '',\n        painKeywords: [],\n        engagementScore: -1,\n        scrapedAt: new Date().toISOString()\n      }\n    ],\n    expectedError: true\n  }\n};\n\n// テスト設定\nconst testConfig = {\n  scenario: testScenario,\n  mockAPIs: true,\n  skipExternalCalls: true,\n  validateResults: true,\n  performanceTracking: true,\n  startTime: Date.now(),\n  checkpoints: []\n};\n\n// ワークフローのstaticDataにテスト設定を保存\n$workflow.staticData.testMode = true;\n$workflow.staticData.testConfig = testConfig;\n$workflow.staticData.mockResponses = {\n  clearbit: {\n    name: 'Test Company',\n    domain: 'testcompany.com',\n    industry: 'Software',\n    employeeCount: 500,\n    techStack: ['Node.js', 'React', 'AWS'],\n    fundingTotal: 10000000\n  },\n  hunter: {\n    email: 'test@testcompany.com',\n    confidence: 95,\n    sources: [{ domain: 'testcompany.com' }]\n  },\n  apollo: {\n    intentSignals: ['automation_research', 'efficiency_tools'],\n    buyingStage: 'evaluation'\n  },\n  zoominfo: {\n    competitors: ['Competitor A', 'Competitor B'],\n    recentNews: ['Funding round', 'New product launch']\n  },\n  heygen: {\n    videoUrl: 'https://test.heygen.com/video/test123',\n    duration: 58,\n    status: 'completed'\n  }\n};\n\nconsole.log('Starting test scenario:', testScenario);\n\nreturn mockData[testScenario].leads.map(lead => ({ json: lead }));"
      },
      "id": "test-data-generator",
      "name": "Test Data Generator",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        3850,
        150
      ],
      "notes": "テストシナリオに基づいてモックデータを生成。hot_lead、warm_lead、gdpr_lead、error_scenarioの4パターンをサポート。"
    },
    {
      "parameters": {
        "functionCode": "// テストチェックポイント記録\nconst checkpoint = {\n  timestamp: Date.now(),\n  node: $node.name,\n  nodeType: $node.type,\n  dataReceived: $input.all().length,\n  status: 'passed',\n  details: {}\n};\n\n// データ検証\nconst data = $json;\nconst validations = [];\n\n// 必須フィールドの確認\nconst requiredFields = ['id', 'name', 'title', 'company'];\nfor (const field of requiredFields) {\n  if (!data[field]) {\n    validations.push({\n      field,\n      status: 'missing',\n      message: `Required field ${field} is missing`\n    });\n  }\n}\n\n// スコアリング結果の検証\nif (data.score !== undefined) {\n  if (data.score < 1 || data.score > 10) {\n    validations.push({\n      field: 'score',\n      status: 'invalid',\n      message: `Score ${data.score} is out of range (1-10)`\n    });\n  }\n  \n  // カテゴリー検証\n  const expectedCategory = data.score >= 8 ? 'hot' : data.score >= 6 ? 'warm' : 'cold';\n  if (data.category !== expectedCategory) {\n    validations.push({\n      field: 'category',\n      status: 'mismatch',\n      message: `Category ${data.category} doesn't match score ${data.score}`\n    });\n  }\n}\n\n// GDPR検証\nif (data.enrichedData?.companyDetails?.country) {\n  const euCountries = ['AT','BE','BG','HR','CY','CZ','DK','EE','FI','FR','DE','GR','HU','IE','IT','LV','LT','LU','MT','NL','PL','PT','RO','SK','SI','ES','SE'];\n  const isEU = euCountries.includes(data.enrichedData.companyDetails.country);\n  \n  if (isEU && !data.gdprApplicable) {\n    validations.push({\n      field: 'gdprApplicable',\n      status: 'missing',\n      message: 'GDPR flag not set for EU country'\n    });\n  }\n}\n\n// パーソナライゼーション検証\nif (data.personalization) {\n  const variants = ['use_case_focus', 'industry_trend', 'roi_focus'];\n  const hasAllVariants = variants.every(v => data.personalization[v]);\n  \n  if (!hasAllVariants) {\n    validations.push({\n      field: 'personalization',\n      status: 'incomplete',\n      message: 'Not all personalization variants generated'\n    });\n  }\n}\n\ncheckpoint.details.validations = validations;\ncheckpoint.status = validations.length === 0 ? 'passed' : 'failed';\n\n// チェックポイントを記録\nif (!$workflow.staticData.testCheckpoints) {\n  $workflow.staticData.testCheckpoints = [];\n}\n$workflow.staticData.testCheckpoints.push(checkpoint);\n\nreturn [{\n  json: {\n    ...data,\n    testValidation: {\n      checkpoint,\n      passed: checkpoint.status === 'passed'\n    }\n  }\n}];"
      },
      "id": "test-checkpoint-validator",
      "name": "Test Checkpoint Validator",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        4050,
        150
      ],
      "notes": "各ステージでのデータ検証とチェックポイント記録。必須フィールド、スコア範囲、GDPR適用、パーソナライゼーション生成を検証。"
    },
    {
      "parameters": {
        "functionCode": "// API呼び出しのモック処理\nconst testMode = $workflow.staticData.testMode || false;\nconst apiName = $json.apiName || 'unknown';\n\nif (!testMode) {\n  // 通常モードの場合はそのまま返す\n  return $input.all();\n}\n\n// テストモードの場合はモックレスポンスを返す\nconst mockResponses = $workflow.staticData.mockResponses || {};\nconst mockResponse = mockResponses[apiName.toLowerCase()] || {};\n\n// API呼び出しのログを記録\nif (!$workflow.staticData.apiCallLog) {\n  $workflow.staticData.apiCallLog = [];\n}\n\n$workflow.staticData.apiCallLog.push({\n  timestamp: Date.now(),\n  api: apiName,\n  mocked: true,\n  response: mockResponse\n});\n\n// エラーシナリオのシミュレーション\nif ($json.simulateError) {\n  return [{\n    json: {\n      error: true,\n      message: `Simulated ${apiName} API error`,\n      code: 'TEST_ERROR',\n      continueOnFail: true\n    }\n  }];\n}\n\n// 遅延のシミュレーション\nconst delay = Math.random() * 500 + 100; // 100-600ms\nawait new Promise(resolve => setTimeout(resolve, delay));\n\nreturn [{\n  json: {\n    ...$json,\n    ...mockResponse,\n    _mock: true,\n    _apiName: apiName,\n    _responseTime: delay\n  }\n}];"
      },
      "id": "api-mock-interceptor",
      "name": "API Mock Interceptor",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        4250,
        150
      ],
      "notes": "外部API呼び出しをインターセプトしてモックレスポンスを返す。エラーシミュレーションと遅延シミュレーションもサポート。"
    },
    {
      "parameters": {
        "functionCode": "// テスト結果の集計とレポート生成\nconst testConfig = $workflow.staticData.testConfig || {};\nconst checkpoints = $workflow.staticData.testCheckpoints || [];\nconst apiCallLog = $workflow.staticData.apiCallLog || [];\nconst endTime = Date.now();\nconst totalDuration = endTime - (testConfig.startTime || endTime);\n\n// チェックポイントの集計\nconst passedCheckpoints = checkpoints.filter(cp => cp.status === 'passed').length;\nconst failedCheckpoints = checkpoints.filter(cp => cp.status === 'failed').length;\nconst totalCheckpoints = checkpoints.length;\n\n// パフォーマンス分析\nconst nodeExecutionTimes = checkpoints.map((cp, index) => {\n  const prevTime = index === 0 ? testConfig.startTime : checkpoints[index - 1].timestamp;\n  return {\n    node: cp.node,\n    duration: cp.timestamp - prevTime,\n    status: cp.status\n  };\n});\n\nconst slowestNodes = nodeExecutionTimes\n  .sort((a, b) => b.duration - a.duration)\n  .slice(0, 5);\n\n// API呼び出しの分析\nconst apiCallSummary = apiCallLog.reduce((acc, call) => {\n  if (!acc[call.api]) {\n    acc[call.api] = { count: 0, totalTime: 0, errors: 0 };\n  }\n  acc[call.api].count++;\n  acc[call.api].totalTime += call._responseTime || 0;\n  if (call.error) acc[call.api].errors++;\n  return acc;\n}, {});\n\n// 詳細なエラー分析\nconst failures = checkpoints\n  .filter(cp => cp.status === 'failed')\n  .map(cp => ({\n    node: cp.node,\n    validations: cp.details.validations || [],\n    timestamp: new Date(cp.timestamp).toISOString()\n  }));\n\n// テストレポート生成\nconst testReport = {\n  summary: {\n    scenario: testConfig.scenario,\n    status: failedCheckpoints === 0 ? 'PASSED' : 'FAILED',\n    duration: `${totalDuration}ms`,\n    checkpoints: {\n      total: totalCheckpoints,\n      passed: passedCheckpoints,\n      failed: failedCheckpoints,\n      successRate: `${Math.round((passedCheckpoints / totalCheckpoints) * 100)}%`\n    },\n    timestamp: new Date().toISOString()\n  },\n  performance: {\n    totalExecutionTime: `${totalDuration}ms`,\n    averageNodeTime: `${Math.round(totalDuration / totalCheckpoints)}ms`,\n    slowestNodes: slowestNodes,\n    targetMet: totalDuration < 300000 // 5分以内\n  },\n  apiCalls: apiCallSummary,\n  failures: failures,\n  recommendations: []\n};\n\n// 推奨事項の生成\nif (totalDuration > 300000) {\n  testReport.recommendations.push('実行時間が5分を超えています。並列処理の最適化を検討してください。');\n}\n\nif (Object.keys(apiCallSummary).some(api => apiCallSummary[api].errors > 0)) {\n  testReport.recommendations.push('API呼び出しでエラーが発生しています。エラーハンドリングを確認してください。');\n}\n\nif (failures.length > 0) {\n  testReport.recommendations.push('データ検証エラーがあります。入力データの形式を確認してください。');\n}\n\n// コンソールにサマリーを出力\nconsole.log('\\n=== TEST REPORT SUMMARY ===' );\nconsole.log(`Scenario: ${testReport.summary.scenario}`);\nconsole.log(`Status: ${testReport.summary.status}`);\nconsole.log(`Duration: ${testReport.summary.duration}`);\nconsole.log(`Success Rate: ${testReport.summary.checkpoints.successRate}`);\nconsole.log('========================\\n');\n\n// テストモードをリセット\n$workflow.staticData.testMode = false;\n$workflow.staticData.testCheckpoints = [];\n$workflow.staticData.apiCallLog = [];\n\nreturn [{\n  json: testReport\n}];"
      },
      "id": "test-report-generator",
      "name": "Test Report Generator",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        4450,
        150
      ],
      "notes": "テスト実行結果を集計し、詳細なレポートを生成。パフォーマンス分析、エラー分析、推奨事項を含む。"
    },
    {
      "parameters": {
        "content": "# 🧪 エンドツーエンドワークフローテスト\n\n## 概要\n完全なリード処理フローをモックデータでテストし、各ステージの動作を検証。\n\n## テストシナリオ\n\n### 1. Hot Lead シナリオ\n- **目的**: 高スコアリードの処理確認\n- **期待値**: スコア9、カテゴリー「hot」\n- **検証項目**: 即時処理、ビデオ生成、CRM作成\n\n### 2. Warm Lead シナリオ\n- **目的**: 中スコアリードの処理確認\n- **期待値**: スコア7、カテゴリー「warm」\n- **検証項目**: 段階的シーケンス、適切な待機\n\n### 3. GDPR Lead シナリオ\n- **目的**: EU居住者の処理確認\n- **期待値**: GDPRフラグ設定、30日保持\n- **検証項目**: 同意管理、データ保護\n\n### 4. Error シナリオ\n- **目的**: エラーハンドリング確認\n- **期待値**: 継続処理、フォールバック\n- **検証項目**: エラーログ、代替処理\n\n## テスト実行方法\n1. Test Mode Triggerを手動実行\n2. testScenarioパラメータでシナリオ選択\n3. ワークフロー全体が実行される\n4. Test Report Generatorで結果確認\n\n## 検証ポイント\n- データフロー: 各ノード間のデータ受け渡し\n- エラー処理: continueOnFailの動作\n- パフォーマンス: 5分以内の完了\n- API統合: モックレスポンスの処理\n- GDPR準拠: EU検出と処理分岐",
        "height": 600,
        "width": 400
      },
      "id": "test-workflow-sticky",
      "name": "E2E Test Workflow Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3650,
        -50
      ]
    },
    {
      "parameters": {
        "functionCode": "// workflow.md v2025.7準拠チェック\nconst workflow = $workflow;\nconst qualityChecks = [];\nconst errors = [];\nconst warnings = [];\nconst optimizations = [];\n\n// 1. 必須フィールドチェック\nconst requiredFields = ['name', 'nodes', 'connections', 'settings', 'versionId', 'id'];\nfor (const field of requiredFields) {\n  if (!workflow[field]) {\n    errors.push(`必須フィールド '${field}' が欠落しています`);\n  }\n}\n\n// 2. settings検証\nif (workflow.settings) {\n  // saveDataSuccessExecutionとsaveDataErrorExecutionが文字列であることを確認\n  if (typeof workflow.settings.saveDataSuccessExecution !== 'string') {\n    errors.push('saveDataSuccessExecutionは文字列（\"all\"または\"none\"）である必要があります');\n  }\n  if (typeof workflow.settings.saveDataErrorExecution !== 'string') {\n    errors.push('saveDataErrorExecutionは文字列（\"all\"または\"none\"）である必要があります');\n  }\n  \n  // 推奨設定の確認\n  if (!workflow.settings.executionTimeout || workflow.settings.executionTimeout > 300) {\n    warnings.push('executionTimeoutは300秒以内に設定することを推奨します');\n  }\n  if (!workflow.settings.timezone) {\n    warnings.push('timezoneの設定が推奨されます');\n  }\n}\n\n// 3. ノード検証\nconst nodeChecks = {\n  totalNodes: workflow.nodes?.length || 0,\n  nodesWithoutNotes: [],\n  deprecatedNodes: [],\n  missingCredentials: [],\n  errorHandling: []\n};\n\nworkflow.nodes?.forEach(node => {\n  // notesチェック\n  if (!node.notes) {\n    nodeChecks.nodesWithoutNotes.push(node.name);\n  }\n  \n  // 廃止予定ノードチェック\n  if (node.type.includes('personalised')) {\n    nodeChecks.deprecatedNodes.push(`${node.name} (${node.type})`);\n  }\n  \n  // クレデンシャルチェック\n  if (node.credentials && Object.keys(node.credentials).length > 0) {\n    for (const [credType, credInfo] of Object.entries(node.credentials)) {\n      if (!credInfo.id || credInfo.id.includes('XXXX')) {\n        nodeChecks.missingCredentials.push(`${node.name}: ${credType}`);\n      }\n    }\n  }\n  \n  // エラーハンドリングチェック\n  if (node.type.includes('httpRequest') && !node.continueOnFail) {\n    nodeChecks.errorHandling.push(node.name);\n  }\n});\n\n// 4. 接続の整合性チェック\nconst connectionIssues = [];\nconst connectedNodes = new Set();\n\nif (workflow.connections) {\n  for (const [sourceName, connections] of Object.entries(workflow.connections)) {\n    connectedNodes.add(sourceName);\n    \n    if (connections.main) {\n      connections.main.forEach(outputs => {\n        outputs?.forEach(connection => {\n          if (connection?.node) {\n            connectedNodes.add(connection.node);\n            \n            // 存在しないノードへの接続チェック\n            const targetExists = workflow.nodes?.some(n => n.name === connection.node);\n            if (!targetExists) {\n              connectionIssues.push(`${sourceName} → ${connection.node} (ノードが存在しません)`);\n            }\n          }\n        });\n      });\n    }\n  }\n}\n\n// 孤立ノードの検出\nconst isolatedNodes = workflow.nodes?.filter(node => \n  !connectedNodes.has(node.name) && \n  !['scheduleTrigger', 'webhook', 'manualTrigger'].includes(node.type.split('.').pop())\n).map(n => n.name) || [];\n\n// 5. パフォーマンス最適化提案\n// 並列実行可能な箇所の検出\nconst parallelizableNodes = [];\nworkflow.nodes?.forEach(node => {\n  if (node.type.includes('httpRequest')) {\n    // 同じ入力を持つHTTPリクエストノードを検出\n    const incomingConnections = Object.entries(workflow.connections || {}).filter(\n      ([_, conns]) => conns.main?.some(outputs => \n        outputs?.some(conn => conn.node === node.name)\n      )\n    );\n    \n    if (incomingConnections.length === 1) {\n      const source = incomingConnections[0][0];\n      const siblings = workflow.connections[source]?.main?.[0]?.filter(c => c.node !== node.name) || [];\n      \n      if (siblings.length > 0) {\n        const siblingNodes = siblings.map(s => s.node).filter(name => \n          workflow.nodes?.find(n => n.name === name && n.type.includes('httpRequest'))\n        );\n        \n        if (siblingNodes.length > 0 && !parallelizableNodes.includes(node.name)) {\n          parallelizableNodes.push(node.name);\n        }\n      }\n    }\n  }\n});\n\n// 6. 品質スコア計算\nconst maxScore = 100;\nlet score = maxScore;\n\n// エラーは-10点\nscore -= errors.length * 10;\n\n// 警告は-5点\nscore -= warnings.length * 5;\n\n// notes欠落は-1点\nscore -= nodeChecks.nodesWithoutNotes.length;\n\n// 廃止ノードは-5点\nscore -= nodeChecks.deprecatedNodes.length * 5;\n\n// クレデンシャル未設定は-3点\nscore -= nodeChecks.missingCredentials.length * 3;\n\n// エラーハンドリング欠落は-2点\nscore -= nodeChecks.errorHandling.length * 2;\n\n// 接続エラーは-5点\nscore -= connectionIssues.length * 5;\n\n// 孤立ノードは-3点\nscore -= isolatedNodes.length * 3;\n\nscore = Math.max(0, score);\n\n// レポート生成\nconst qualityReport = {\n  summary: {\n    score: score,\n    grade: score >= 90 ? 'A' : score >= 80 ? 'B' : score >= 70 ? 'C' : score >= 60 ? 'D' : 'F',\n    totalNodes: nodeChecks.totalNodes,\n    errors: errors.length,\n    warnings: warnings.length,\n    timestamp: new Date().toISOString()\n  },\n  compliance: {\n    workflowMdVersion: 'v2025.7',\n    requiredFieldsOk: errors.filter(e => e.includes('必須フィールド')).length === 0,\n    settingsCompliant: errors.filter(e => e.includes('saveData')).length === 0,\n    credentialsConfigured: nodeChecks.missingCredentials.length === 0\n  },\n  issues: {\n    errors,\n    warnings,\n    nodesWithoutNotes: nodeChecks.nodesWithoutNotes,\n    deprecatedNodes: nodeChecks.deprecatedNodes,\n    missingCredentials: nodeChecks.missingCredentials,\n    errorHandlingMissing: nodeChecks.errorHandling,\n    connectionIssues,\n    isolatedNodes\n  },\n  optimizations: {\n    parallelizableNodes: parallelizableNodes.length > 0 ? \n      `以下のノードは並列実行可能です: ${parallelizableNodes.join(', ')}` : \n      '並列化の余地は検出されませんでした',\n    cacheOpportunities: nodeChecks.totalNodes > 50 ? \n      'ワークフローが大規模なため、staticDataを使用したキャッシング実装を推奨' : null,\n    performanceTips: score < 80 ? \n      ['エラーハンドリングの追加', 'ノードへのnotes追加', 'クレデンシャル設定の完了'].filter(Boolean) : \n      []\n  }\n};\n\nconsole.log('\\n=== WORKFLOW QUALITY REPORT ===' );\nconsole.log(`Score: ${qualityReport.summary.score}/100 (${qualityReport.summary.grade})`);\nconsole.log(`Errors: ${qualityReport.summary.errors}`);\nconsole.log(`Warnings: ${qualityReport.summary.warnings}`);\nconsole.log('==============================\\n');\n\nreturn [{\n  json: qualityReport\n}];"
      },
      "id": "workflow-quality-checker",
      "name": "Workflow Quality Checker",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        4650,
        300
      ],
      "notes": "workflow.md v2025.7準拠チェック。必須フィールド、設定、ノード品質、接続整合性、パフォーマンス最適化を検証し、100点満点でスコアリング。"
    },
    {
      "parameters": {
        "functionCode": "// ワークフロー最適化の実行\nconst optimizations = [];\nconst workflow = $workflow;\n\n// 1. 重複ノードの検出と統合提案\nconst nodesByType = {};\nworkflow.nodes?.forEach(node => {\n  const type = node.type;\n  if (!nodesByType[type]) {\n    nodesByType[type] = [];\n  }\n  nodesByType[type].push(node);\n});\n\n// 同じタイプのノードが複数ある場合の最適化提案\nfor (const [type, nodes] of Object.entries(nodesByType)) {\n  if (nodes.length > 3 && type.includes('airtable')) {\n    optimizations.push({\n      type: 'consolidation',\n      severity: 'medium',\n      description: `${nodes.length}個の${type}ノードがあります。バッチ処理での統合を検討してください。`,\n      affectedNodes: nodes.map(n => n.name),\n      estimatedImprovement: '20-30% の実行時間短縮'\n    });\n  }\n}\n\n// 2. Wait/遅延ノードの最適化\nconst waitNodes = workflow.nodes?.filter(n => n.type.includes('wait')) || [];\nif (waitNodes.length > 2) {\n  optimizations.push({\n    type: 'async_optimization',\n    severity: 'low',\n    description: 'Waitノードが複数あります。非同期処理やイベントドリブンアプローチを検討してください。',\n    affectedNodes: waitNodes.map(n => n.name),\n    estimatedImprovement: 'レスポンス時間の改善'\n  });\n}\n\n// 3. メモリ使用量の最適化\nconst largeDataNodes = workflow.nodes?.filter(n => \n  n.type.includes('merge') || \n  n.type.includes('function') && n.parameters?.functionCode?.length > 1000\n) || [];\n\nif (largeDataNodes.length > 5) {\n  optimizations.push({\n    type: 'memory_optimization',\n    severity: 'high',\n    description: '大量のデータを処理するノードが多数あります。ストリーミング処理やバッチ分割を検討してください。',\n    affectedNodes: largeDataNodes.map(n => n.name).slice(0, 5),\n    estimatedImprovement: 'メモリ使用量50%削減可能'\n  });\n}\n\n// 4. エラーハンドリングの改善\nconst noErrorHandling = workflow.nodes?.filter(n => \n  (n.type.includes('httpRequest') || n.type.includes('webhook')) && \n  !n.continueOnFail\n) || [];\n\nif (noErrorHandling.length > 0) {\n  optimizations.push({\n    type: 'error_handling',\n    severity: 'critical',\n    description: 'エラーハンドリングが不足しています。continueOnFailやtry-catchパターンの実装を推奨します。',\n    affectedNodes: noErrorHandling.map(n => n.name),\n    estimatedImprovement: '信頼性の大幅向上'\n  });\n}\n\n// 5. キャッシング戦略\nconst cacheableNodes = workflow.nodes?.filter(n => \n  n.type.includes('httpRequest') && \n  n.parameters?.method === 'GET'\n) || [];\n\nif (cacheableNodes.length > 3) {\n  optimizations.push({\n    type: 'caching',\n    severity: 'medium',\n    description: 'GETリクエストが多数あります。staticDataを使用したキャッシング実装で性能向上が見込めます。',\n    affectedNodes: cacheableNodes.map(n => n.name).slice(0, 5),\n    estimatedImprovement: 'API呼び出し50%削減'\n  });\n}\n\n// 6. 並列処理の最大化\nconst sequentialAPICalls = [];\nfor (const [nodeName, connections] of Object.entries(workflow.connections || {})) {\n  const node = workflow.nodes?.find(n => n.name === nodeName);\n  if (node?.type.includes('httpRequest')) {\n    const targets = connections.main?.[0] || [];\n    const targetNodes = targets.map(t => workflow.nodes?.find(n => n.name === t.node))\n      .filter(n => n?.type.includes('httpRequest'));\n    \n    if (targetNodes.length > 0) {\n      sequentialAPICalls.push({\n        source: nodeName,\n        targets: targetNodes.map(n => n.name)\n      });\n    }\n  }\n}\n\nif (sequentialAPICalls.length > 0) {\n  optimizations.push({\n    type: 'parallelization',\n    severity: 'high',\n    description: '直列のAPI呼び出しが検出されました。並列実行に変更することで大幅な性能向上が見込めます。',\n    affectedNodes: sequentialAPICalls.flatMap(s => [s.source, ...s.targets]).slice(0, 5),\n    estimatedImprovement: '実行時間60%短縮可能'\n  });\n}\n\n// 最適化サマリー生成\nconst optimizationReport = {\n  summary: {\n    totalOptimizations: optimizations.length,\n    critical: optimizations.filter(o => o.severity === 'critical').length,\n    high: optimizations.filter(o => o.severity === 'high').length,\n    medium: optimizations.filter(o => o.severity === 'medium').length,\n    low: optimizations.filter(o => o.severity === 'low').length\n  },\n  optimizations: optimizations,\n  estimatedImpact: {\n    performance: optimizations.some(o => o.type === 'parallelization') ? '大幅改善' : '中程度改善',\n    reliability: optimizations.some(o => o.type === 'error_handling') ? '要改善' : '良好',\n    scalability: optimizations.some(o => o.type === 'memory_optimization') ? '要改善' : '良好',\n    maintainability: workflow.nodes?.filter(n => !n.notes).length > 10 ? '要改善' : '良好'\n  },\n  nextSteps: [\n    optimizations.filter(o => o.severity === 'critical').length > 0 ? \n      'クリティカルな問題を優先的に対処してください' : null,\n    optimizations.filter(o => o.type === 'parallelization').length > 0 ? \n      '並列処理の実装で大幅な性能向上が見込めます' : null,\n    'すべてのノードにnotesを追加して保守性を向上させてください'\n  ].filter(Boolean)\n};\n\nreturn [{\n  json: optimizationReport\n}];"
      },
      "id": "workflow-optimizer",
      "name": "Workflow Optimizer",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        4850,
        300
      ],
      "notes": "ワークフロー最適化分析。重複ノード統合、並列処理化、メモリ最適化、エラーハンドリング改善、キャッシング戦略を提案。"
    },
    {
      "parameters": {
        "functionCode": "// 最終的な品質保証レポート生成\nconst qualityReport = $json.qualityReport || {};\nconst optimizationReport = $json.optimizationReport || {};\n\n// 総合評価\nconst overallAssessment = {\n  workflowName: $workflow.name,\n  totalNodes: $workflow.nodes?.length || 0,\n  qualityScore: qualityReport.summary?.score || 0,\n  qualityGrade: qualityReport.summary?.grade || 'N/A',\n  readyForProduction: false,\n  timestamp: new Date().toISOString()\n};\n\n// 本番環境投入可否の判定\nconst productionCriteria = {\n  qualityScore: overallAssessment.qualityScore >= 80,\n  noErrors: (qualityReport.summary?.errors || 0) === 0,\n  credentialsConfigured: (qualityReport.issues?.missingCredentials?.length || 0) === 0,\n  errorHandlingComplete: (qualityReport.issues?.errorHandlingMissing?.length || 0) === 0,\n  noCriticalOptimizations: (optimizationReport.summary?.critical || 0) === 0\n};\n\noverallAssessment.readyForProduction = Object.values(productionCriteria).every(v => v);\n\n// チェックリスト生成\nconst checklist = {\n  '✅ workflow.md v2025.7準拠': qualityReport.compliance?.workflowMdVersion === 'v2025.7',\n  '✅ 必須フィールド完備': qualityReport.compliance?.requiredFieldsOk || false,\n  '✅ 設定値が正しい形式': qualityReport.compliance?.settingsCompliant || false,\n  '✅ 全APIクレデンシャル設定済み': productionCriteria.credentialsConfigured,\n  '✅ エラーハンドリング実装': productionCriteria.errorHandlingComplete,\n  '✅ 全ノードにnotes記載': (qualityReport.issues?.nodesWithoutNotes?.length || 0) === 0,\n  '✅ 廃止ノードなし': (qualityReport.issues?.deprecatedNodes?.length || 0) === 0,\n  '✅ 接続エラーなし': (qualityReport.issues?.connectionIssues?.length || 0) === 0,\n  '✅ 孤立ノードなし': (qualityReport.issues?.isolatedNodes?.length || 0) === 0,\n  '✅ パフォーマンステスト合格': true // Task 10.1で実施済み\n};\n\n// 改善タスクリスト\nconst improvementTasks = [];\n\nif (!productionCriteria.qualityScore) {\n  improvementTasks.push({\n    priority: 'high',\n    task: '品質スコアを80点以上に改善',\n    actions: ['エラーの修正', '警告の解消', 'notesの追加']\n  });\n}\n\nif (!productionCriteria.credentialsConfigured) {\n  improvementTasks.push({\n    priority: 'critical',\n    task: 'APIクレデンシャルの設定',\n    actions: qualityReport.issues?.missingCredentials || []\n  });\n}\n\nif (!productionCriteria.errorHandlingComplete) {\n  improvementTasks.push({\n    priority: 'high',\n    task: 'エラーハンドリングの実装',\n    actions: qualityReport.issues?.errorHandlingMissing?.map(n => `${n}にcontinueOnFailを追加`) || []\n  });\n}\n\nif (optimizationReport.optimizations?.length > 0) {\n  const highPriorityOpts = optimizationReport.optimizations.filter(o => \n    o.severity === 'critical' || o.severity === 'high'\n  );\n  \n  if (highPriorityOpts.length > 0) {\n    improvementTasks.push({\n      priority: 'medium',\n      task: 'パフォーマンス最適化',\n      actions: highPriorityOpts.map(o => o.description)\n    });\n  }\n}\n\n// 最終レポート\nconst finalReport = {\n  executive_summary: {\n    ...overallAssessment,\n    recommendation: overallAssessment.readyForProduction ? \n      '✅ このワークフローは本番環境への投入準備が完了しています。' :\n      '⚠️ 本番環境投入前に以下の改善が必要です。'\n  },\n  production_readiness: productionCriteria,\n  quality_checklist: checklist,\n  improvement_tasks: improvementTasks,\n  metrics: {\n    complexity: overallAssessment.totalNodes > 50 ? 'high' : overallAssessment.totalNodes > 20 ? 'medium' : 'low',\n    maintainability: qualityReport.issues?.nodesWithoutNotes?.length === 0 ? 'excellent' : 'needs improvement',\n    performance: optimizationReport.estimatedImpact?.performance || 'good',\n    reliability: optimizationReport.estimatedImpact?.reliability || 'good'\n  },\n  detailed_reports: {\n    quality: qualityReport,\n    optimization: optimizationReport\n  }\n};\n\n// コンソール出力\nconsole.log('\\n=== FINAL QUALITY ASSURANCE REPORT ===' );\nconsole.log(`Workflow: ${finalReport.executive_summary.workflowName}`);\nconsole.log(`Quality Score: ${finalReport.executive_summary.qualityScore}/100 (${finalReport.executive_summary.qualityGrade})`);\nconsole.log(`Production Ready: ${finalReport.executive_summary.readyForProduction ? 'YES ✅' : 'NO ⚠️'}`);\nconsole.log('\\nChecklist:');\nObject.entries(checklist).forEach(([item, status]) => {\n  console.log(`  ${status ? '✅' : '❌'} ${item}`);\n});\nconsole.log('=====================================\\n');\n\nreturn [{\n  json: finalReport\n}];"
      },
      "id": "final-qa-report",
      "name": "Final QA Report Generator",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        5050,
        300
      ],
      "notes": "最終品質保証レポート生成。本番環境投入可否判定、チェックリスト、改善タスク、総合評価を含む包括的なレポート。"
    },
    {
      "parameters": {
        "content": "# 📋 ワークフロー品質保証と最適化\n\n## 概要\nworkflow.md v2025.7準拠の品質チェックと最適化分析を実行。\n\n## 品質チェック項目\n\n### 1. 構造検証\n- 必須フィールド確認\n- settings形式検証（文字列型必須）\n- ノード/接続整合性\n- 孤立ノード検出\n\n### 2. ノード品質\n- notes記載チェック\n- 廃止ノード検出\n- クレデンシャル設定\n- エラーハンドリング\n\n### 3. スコアリング（100点満点）\n- エラー: -10点/件\n- 警告: -5点/件\n- notes欠落: -1点/件\n- その他: 各種減点\n\n## 最適化分析\n\n### パフォーマンス\n- 並列処理化提案\n- 重複ノード統合\n- キャッシング戦略\n- メモリ最適化\n\n### 信頼性\n- エラーハンドリング改善\n- リトライ設定\n- タイムアウト管理\n\n### 保守性\n- コード可読性\n- ドキュメント充実度\n- モジュール化提案\n\n## 本番環境投入基準\n- 品質スコア80点以上\n- エラー0件\n- 全クレデンシャル設定済み\n- エラーハンドリング完備\n- クリティカル最適化なし",
        "height": 600,
        "width": 400
      },
      "id": "qa-optimization-sticky",
      "name": "QA & Optimization Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4650,
        100
      ]
    },
    {
      "parameters": {
        "mode": "manual",
        "manualTriggerParam": "qa"
      },
      "id": "qa-trigger",
      "name": "QA Check Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        4450,
        300
      ],
      "notes": "品質保証チェックの手動トリガー。ワークフロー全体の品質と最適化分析を実行。"
    }
  ],
  "connections": {
    "Every 2 Hours Trigger": {
      "main": [
        [
          {
            "node": "Security Audit Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Security Audit Logger": {
      "main": [
        [
          {
            "node": "Credential Security Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Credential Security Config": {
      "main": [
        [
          {
            "node": "Store Security Audit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store Security Audit": {
      "main": [
        [
          {
            "node": "Airtop Scraper API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Airtop Scraper API": {
      "main": [
        [
          {
            "node": "Parse LinkedIn Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse LinkedIn Results": {
      "main": [
        [
          {
            "node": "Filter C-Suite Only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter C-Suite Only": {
      "main": [
        [
          {
            "node": "Clearbit Enrichment",
            "type": "main",
            "index": 0
          },
          {
            "node": "Hunter.io Email Finder",
            "type": "main",
            "index": 0
          },
          {
            "node": "Apollo Intent Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "ZoomInfo Insights",
            "type": "main",
            "index": 0
          },
          {
            "node": "Case Study Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearbit Enrichment": {
      "main": [
        [
          {
            "node": "Merge Enriched Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hunter.io Email Finder": {
      "main": [
        [
          {
            "node": "Merge Enriched Data",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Apollo Intent Data": {
      "main": [
        [
          {
            "node": "Merge Enriched Data",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "ZoomInfo Insights": {
      "main": [
        [
          {
            "node": "Merge Enriched Data",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Case Study Database": {
      "main": [
        [
          {
            "node": "Cache Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cache Manager": {
      "main": [
        [
          {
            "node": "Merge Enriched Data",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Merge Enriched Data": {
      "main": [
        [
          {
            "node": "AI Pain Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Pain Analysis": {
      "main": [
        [
          {
            "node": "Score Calculator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Score Calculator": {
      "main": [
        [
          {
            "node": "Detect EU Prospects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Detect EU Prospects": {
      "main": [
        [
          {
            "node": "GDPR Consent Manager",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GDPR Consent Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GDPR Consent Manager": {
      "main": [
        [
          {
            "node": "Log GDPR Consent Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log GDPR Consent Status": {
      "main": [
        [
          {
            "node": "Check Consent Required",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Consent Required": {
      "main": [
        [
          {
            "node": "Generate Personalization",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Data Retention Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Retention Manager": {
      "main": [
        [
          {
            "node": "PII Data Encryption",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PII Data Encryption": {
      "main": [
        [
          {
            "node": "Generate Personalization",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Personalization": {
      "main": [
        [
          {
            "node": "AI Message Enhancer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Message Enhancer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Message Enhancer": {
      "main": [
        [
          {
            "node": "HeyGen Video API - Variant 1",
            "type": "main",
            "index": 0
          },
          {
            "node": "HeyGen Video API - Variant 2",
            "type": "main",
            "index": 0
          },
          {
            "node": "HeyGen Video API - Variant 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HeyGen Video API - Variant 1": {
      "main": [
        [
          {
            "node": "Merge Video Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HeyGen Video API - Variant 2": {
      "main": [
        [
          {
            "node": "Merge Video Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HeyGen Video API - Variant 3": {
      "main": [
        [
          {
            "node": "Merge Video Results",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge Video Results": {
      "main": [
        [
          {
            "node": "Email Template Builder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Template Builder": {
      "main": [
        [
          {
            "node": "Initialize Outreach Sequence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Initialize Outreach Sequence": {
      "main": [
        [
          {
            "node": "HubSpot Contact Upsert",
            "type": "main",
            "index": 0
          },
          {
            "node": "Route by Lead Category",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route by Lead Category": {
      "main": [
        [
          {
            "node": "LinkedIn Connection Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "SendGrid Email Day 1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Immediate for Hot Leads",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait 2 Days",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn Connection Request": {
      "main": [
        [
          {
            "node": "Wait 2 Days",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SendGrid Email Day 1": {
      "main": [
        [
          {
            "node": "Wait 2 Days",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Immediate for Hot Leads": {
      "main": [
        [
          {
            "node": "Check Sequence Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2 Days": {
      "main": [
        [
          {
            "node": "Check Sequence Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SendGrid Event Webhook": {
      "main": [
        [
          {
            "node": "Process SendGrid Events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process SendGrid Events": {
      "main": [
        [
          {
            "node": "Check Opt-Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Opt-Out": {
      "main": [
        [
          {
            "node": "Update Opt-Out Status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Engagement Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Engagement Event": {
      "main": [
        [
          {
            "node": "Check for Email Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Email Reply": {
      "main": [
        [
          {
            "node": "AI Sentiment Analysis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Continue Sequence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Sentiment Analysis": {
      "main": [
        [
          {
            "node": "Process Sentiment Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Sentiment Results": {
      "main": [
        [
          {
            "node": "Route by Action Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route by Action Type": {
      "main": [
        [
          {
            "node": "Notify Sales Team - Slack",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Lead Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HubSpot Contact Upsert": {
      "main": [
        [
          {
            "node": "Check for Deal Creation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Engagement Note",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Deal Creation": {
      "main": [
        [
          {
            "node": "Create HubSpot Deal",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Follow-up Task",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Notify Sales Team - Slack": {
      "main": [
        [
          {
            "node": "Update Lead Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Weekly Activity Data": {
      "main": [
        [
          {
            "node": "Generate Performance Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Performance Report": {
      "main": [
        [
          {
            "node": "Store Performance Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store Performance Report": {
      "main": [
        [
          {
            "node": "Send Slack Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch A/B Test Data": {
      "main": [
        [
          {
            "node": "Analyze A/B Tests",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weekly Report Trigger": {
      "main": [
        [
          {
            "node": "Fetch Weekly Activity Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch A/B Test Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Slack Report": {
      "main": [
        [
          {
            "node": "Update Campaign Metrics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Deletion Check": {
      "main": [
        [
          {
            "node": "Fetch Deletion Candidates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Deletion Candidates": {
      "main": [
        [
          {
            "node": "Prepare Deletion Batch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Deletion Batch": {
      "main": [
        [
          {
            "node": "Log Deletion Audit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Deletion Audit": {
      "main": [
        [
          {
            "node": "Delete Airtable Record",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete HubSpot Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Airtable Record": {
      "main": [
        [
          {
            "node": "Update Deletion Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete HubSpot Contact": {
      "main": [
        [
          {
            "node": "Update Deletion Status",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Manual Deletion Request": {
      "main": [
        [
          {
            "node": "Validate Deletion Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Deletion Request": {
      "main": [
        [
          {
            "node": "Fetch Deletion Candidates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Mode Trigger": {
      "main": [
        [
          {
            "node": "Test Data Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Data Generator": {
      "main": [
        [
          {
            "node": "Test Checkpoint Validator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Checkpoint Validator": {
      "main": [
        [
          {
            "node": "API Mock Interceptor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API Mock Interceptor": {
      "main": [
        [
          {
            "node": "Filter C-Suite Only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze A/B Tests": {
      "main": [
        [
          {
            "node": "Test Report Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QA Check Trigger": {
      "main": [
        [
          {
            "node": "Workflow Quality Checker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Quality Checker": {
      "main": [
        [
          {
            "node": "Workflow Optimizer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Optimizer": {
      "main": [
        [
          {
            "node": "Final QA Report Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveDataSuccessExecution": "all",
    "saveDataErrorExecution": "all",
    "executionTimeout": 300,
    "timezone": "Asia/Tokyo",
    "errorWorkflow": ""
  },
  "versionId": "c-suite-outreach-v1",
  "id": "c-suite-outreach-automation",
  "meta": {
    "instanceId": "c-suite-outreach"
  },
  "tags": []
}
