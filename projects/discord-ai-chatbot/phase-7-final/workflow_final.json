{
  "name": "Discord AI ChatBot",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "discord-bot-webhook",
        "responseMode": "onReceived",
        "responseData": "firstEntryJson",
        "options": {}
      },
      "id": "webhook_1",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [250, 300],
      "webhookId": "discord-bot-webhook",
      "notes": "Discordからのメンションイベントを受信"
    },
    {
      "parameters": {
        "language": "javaScript",
        "jsCode": "// Discordからのデータを解析\nconst discordData = $input.first().json;\n\n// デバッグ用にデータ構造を確認\nconsole.log('Discord Data:', JSON.stringify(discordData, null, 2));\n\n// Bot IDを環境変数または固定値から取得\nconst botId = \"{{YOUR_BOT_ID}}\"; // ここにBot IDを設定\n\n// guild_idを取得\nconst guildId = discordData.guild_id || '';\n\n// メンションチェック\nconst mentions = discordData.mentions || [];\nconst isBotMentioned = mentions.some(mention => mention.id === botId);\n\nif (!isBotMentioned) {\n  throw new Error(\"Bot was not mentioned\");\n}\n\n// メッセージからメンションを除去\nconst content = discordData.content.replace(/<@!?\\d+>/g, '').trim();\n\nreturn {\n  json: {\n    content: content,\n    channelId: discordData.channel_id,\n    guildId: guildId,\n    authorId: discordData.author.id,\n    authorName: discordData.author.username,\n    messageId: discordData.id\n  }\n};"
      },
      "id": "function_1",
      "name": "Parse Discord Message",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 300],
      "notes": "メンションチェックとメッセージ解析"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}",
        "hasOutputParser": false
      },
      "id": "agent_1",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [650, 300],
      "notes": "GPT-4o-miniで応答を生成"
    },
    {
      "parameters": {
        "model": {
          "value": "gpt-4o-mini",
          "mode": "list"
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 1000
        }
      },
      "id": "openai_1",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [650, 150],
      "credentials": {
        "openAiApi": {
          "id": "{{OPENAI_CREDENTIAL_ID}}",
          "name": "OpenAI API"
        }
      },
      "notes": "AI Agent用のモデル設定"
    },
    {
      "parameters": {
        "jsCode": "// AI Agentの出力とユーザー情報を結合\nconst parseData = $('Parse Discord Message').item.json;\nconst aiOutput = $json.output || $json.text || 'エラー: 応答を生成できませんでした。';\n\n// Discord用のメッセージを作成\nconst message = `<@${parseData.authorId}> ${aiOutput}`;\n\nreturn {\n  json: {\n    guildId: parseData.guildId,\n    channelId: parseData.channelId,\n    message: message\n  }\n};"
      },
      "id": "function_2",
      "name": "Format Discord Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [750, 300],
      "notes": "Discord送信用にメッセージをフォーマット"
    },
    {
      "parameters": {
        "authentication": "botToken",
        "resource": "message",
        "operation": "send",
        "guildId": {
          "value": "={{ $json.guildId }}",
          "mode": "id"
        },
        "channelId": {
          "value": "={{ $json.channelId }}",
          "mode": "id"
        },
        "message": "={{ $json.message }}",
        "options": {}
      },
      "id": "discord_1",
      "name": "Send Discord Message",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [950, 300],
      "credentials": {
        "discordBotApi": {
          "id": "{{DISCORD_CREDENTIAL_ID}}",
          "name": "Discord Bot"
        }
      },
      "notes": "生成された応答をDiscordに送信"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Parse Discord Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Discord Message": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Format Discord Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Discord Response": {
      "main": [
        [
          {
            "node": "Send Discord Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1.0.0",
  "id": "discord-ai-chatbot",
  "meta": {
    "instanceId": "n8n"
  },
  "tags": ["discord", "ai", "chatbot", "gpt-4o-mini"]
}