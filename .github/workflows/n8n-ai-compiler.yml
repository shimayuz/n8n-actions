name: n8n AI Workflow Compiler

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'workflows/**.json'
      - 'workflows/**.workflow.json'
      - 'n8n_specs/**.md'

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  build-and-correct-workflow:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Extract PR Information and Changed Files
        id: extract_data
        run: |
          # PRの本文を取得
          PR_BODY=$(jq -r '.pull_request.body' "$GITHUB_EVENT_PATH")
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "$PR_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          # 変更されたワークフローファイルを特定
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -E '\.(workflow\.)?json$' || true)
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No workflow files changed. Checking for spec files..."
            SPEC_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -E '\.md$' | grep 'n8n_specs' || true)
            
            if [ -z "$SPEC_FILES" ]; then
              echo "No relevant files changed. Exiting."
              exit 0
            fi
            
            # スペックファイルから新規ワークフローを生成
            echo "GENERATION_MODE=from_spec" >> $GITHUB_ENV
            echo "SPEC_FILE=$SPEC_FILES" >> $GITHUB_ENV
          else
            # 既存ワークフローを修正/改善
            echo "GENERATION_MODE=from_workflow" >> $GITHUB_ENV
            FIRST_FILE=$(echo "$CHANGED_FILES" | head -n 1)
            echo "CHANGED_FILE_PATH=$FIRST_FILE" >> $GITHUB_ENV
            
            # ファイルの内容を読み取る
            FILE_CONTENT=$(cat "$FIRST_FILE")
            echo "FILE_CONTENT<<EOF" >> $GITHUB_ENV
            echo "$FILE_CONTENT" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Find Previous Comment
        uses: peter-evans/find-comment@v3
        id: find_comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'AI Workflow Generation'

      - name: Post Initial Status
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: |
            🤖 **AI Workflow Generation In Progress**
            
            Starting AI-powered workflow generation/correction process...
            - Mode: ${{ env.GENERATION_MODE }}
            - Attempt: 1/3
          edit-mode: replace

      - name: Generate/Correct Workflow with Claude
        id: claude_generate
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          node .github/scripts/generate-workflow.js

      - name: Validate JSON Syntax
        id: validate_syntax
        run: |
          echo "Validating JSON syntax..."
          echo "${{ steps.claude_generate.outputs.json_output }}" | jq . > /dev/null
          if [ $? -eq 0 ]; then
            echo "✅ JSON syntax is valid"
            echo "syntax_valid=true" >> $GITHUB_OUTPUT
          else
            echo "❌ JSON syntax is invalid"
            echo "syntax_valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Validate n8n Workflow Structure
        id: validate_structure
        run: |
          echo "Validating n8n workflow structure..."
          node scripts/validate-workflow.js "${{ steps.claude_generate.outputs.json_output }}"
          
          if [ $? -eq 0 ]; then
            echo "✅ Workflow structure is valid"
            echo "structure_valid=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Workflow structure is invalid"
            echo "structure_valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Self-Correction Loop
        id: self_correction
        if: failure() && steps.validate_syntax.outputs.syntax_valid != 'true'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          MAX_ATTEMPTS=3
          ATTEMPT=2
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            echo "Attempt $ATTEMPT of $MAX_ATTEMPTS..."
            
            # Update status comment
            curl -X PATCH \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ steps.find_comment.outputs.comment-id }}" \
              -d "{\"body\":\"🔄 **AI Workflow Generation In Progress**\\n\\nCorrecting workflow errors...\\n- Attempt: $ATTEMPT/$MAX_ATTEMPTS\"}"
            
            # Run correction script
            node .github/scripts/correct-workflow.js
            
            # Validate corrected output
            if node scripts/validate-workflow.js corrected_workflow.json; then
              echo "✅ Workflow corrected successfully"
              echo "correction_success=true" >> $GITHUB_OUTPUT
              break
            fi
            
            ATTEMPT=$((ATTEMPT + 1))
          done
          
          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "❌ Failed to correct workflow after $MAX_ATTEMPTS attempts"
            echo "correction_success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Save Generated Workflow
        if: success()
        run: |
          if [ "${{ env.GENERATION_MODE }}" = "from_spec" ]; then
            # 新規ワークフローの場合、適切なファイル名を生成
            WORKFLOW_NAME=$(echo "${{ env.PR_BODY }}" | grep -oP '(?<=name:\s)[^\n]+' | head -1 || echo "generated-workflow")
            WORKFLOW_FILE="workflows/${WORKFLOW_NAME}.workflow.json"
          else
            WORKFLOW_FILE="${{ env.CHANGED_FILE_PATH }}"
          fi
          
          echo "${{ steps.claude_generate.outputs.json_output }}" > "$WORKFLOW_FILE"
          echo "WORKFLOW_FILE=$WORKFLOW_FILE" >> $GITHUB_ENV

      - name: Commit Validated Workflow
        if: success()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🤖 feat(ai): Generate/update n8n workflow from PR #${{ github.event.pull_request.number }}"
          file_pattern: ${{ env.WORKFLOW_FILE }}
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_options: '--no-verify'

      - name: Report Success on PR
        if: success()
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: |
            ✅ **AI Workflow Generation Successful**
            
            The n8n workflow has been successfully generated and validated!
            
            **Details:**
            - 📁 File: `${{ env.WORKFLOW_FILE }}`
            - ✨ Mode: ${{ env.GENERATION_MODE }}
            - 🎯 Status: All validations passed
            
            ## 🆔 Workflow ID Management
            
            ⚠️ **After deploying to n8n, please update the workflow ID:**
            
            1. Deploy this workflow to your n8n instance
            2. Copy the workflow ID from the URL: `https://n8n.com/workflow/[WORKFLOW-ID]`
            3. Update the metadata:
            ```bash
            node scripts/workflow-id-helper.js set ${{ env.WORKFLOW_FILE }} [WORKFLOW-ID]
            ```
            
            **Next Steps:**
            1. Review the generated workflow in the Files Changed tab
            2. Test the workflow in your n8n instance
            3. 🆕 Update workflow ID using the helper script
            4. Approve and merge when ready
            
            <details>
            <summary>📚 How to Find Your Workflow ID</summary>
            
            ### Option 1: From n8n UI
            Open your workflow in n8n and check the URL
            
            ### Option 2: Using Helper Script
            ```bash
            # List all workflows
            node scripts/workflow-id-helper.js list
            
            # Find specific workflow
            node scripts/workflow-id-helper.js find "workflow-name"
            ```
            
            ### Option 3: From This PR
            After deployment, the ID will be shown in the n8n interface
            
            [📄 Full ID Management Guide](https://github.com/${{ github.repository }}/blob/main/docs/WORKFLOW-ID-GUIDE.md)
            </details>
            
            ---
            _Generated by AI Workflow Compiler powered by Claude 3_
          edit-mode: replace

      - name: Report Failure on PR
        if: failure()
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: |
            ❌ **AI Workflow Generation Failed**

            The AI agent was unable to generate a valid workflow.
            
            **Error Details:**
            ```
            ${{ env.LAST_ERROR_MESSAGE }}
            ```
            
            **Troubleshooting:**
            1. Check that your PR description clearly describes the workflow intent
            2. Ensure any existing JSON is properly formatted
            3. Review the error message above for specific issues
            
            **Manual Options:**
            - Edit the workflow file directly and push changes
            - Update the PR description with clearer instructions
            - Contact the maintainers for assistance
            
            ---
            _AI Workflow Compiler powered by Claude 3_
          edit-mode: replace

      - name: Add PR Labels
        if: always()
        uses: actions/labeler@v4
        with:
          configuration-path: .github/labeler.yml
          sync-labels: true