name: Auto Version Bump

on:
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - '.kiro/**'
      - 'CLAUDE.md'
      - 'workflow.md'
      - '*.md'
      - '!README*.md'  # READMEは除外
      - '!docs/**'     # docsディレクトリは除外

jobs:
  version-bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
      
      - name: Determine version bump type
        id: bump_type
        run: |
          # コミットメッセージから変更タイプを判定
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          
          if [[ "$COMMIT_MSG" == *"BREAKING"* ]] || [[ "$COMMIT_MSG" == *"major:"* ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" == *"feat:"* ]] || [[ "$COMMIT_MSG" == *"feature:"* ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi
      
      - name: Bump version
        id: bump_version
        run: |
          npm version ${{ steps.bump_type.outputs.type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"
      
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to v${{ steps.bump_version.outputs.new_version }} [skip ci]" || echo "No changes to commit"
      
      - name: Create tag
        run: |
          git tag -a "v${{ steps.bump_version.outputs.new_version }}" -m "Release v${{ steps.bump_version.outputs.new_version }}"
      
      - name: Push changes and tag
        run: |
          git push origin main
          git push origin "v${{ steps.bump_version.outputs.new_version }}"
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          release_name: Release v${{ steps.bump_version.outputs.new_version }}
          body: |
            ## Changes in this release
            
            ${{ github.event.head_commit.message }}
            
            ---
            *Automated release for project configuration updates*
          draft: false
          prerelease: false