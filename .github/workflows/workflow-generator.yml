name: n8n Workflow Generator and PR Creator

on:
  workflow_dispatch:
    inputs:
      scan_path:
        description: 'Path pattern to scan for workflows (e.g., projects/*/phase-12-final/*.json)'
        required: false
        default: 'projects/*/phase-12-final/*.json'
      auto_create_pr:
        description: 'Automatically create PR without manual approval'
        required: false
        type: boolean
        default: false
  
  push:
    branches:
      - main
    paths:
      - 'projects/*/phase-12-final/*.json'
      - 'projects/*/phase-7-final/*.json'
  
  schedule:
    # Run daily at 2 AM UTC to check for new workflows
    - cron: '0 2 * * *'

env:
  BRANCH_PREFIX: 'feature/workflow-'
  WORKFLOWS_DIR: 'workflows'

jobs:
  scan-and-generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Load workflow state
        id: load-state
        run: |
          if [ -f .workflow-sync-state.json ]; then
            echo "State file exists"
            echo "state_exists=true" >> $GITHUB_OUTPUT
          else
            echo "State file does not exist, creating..."
            echo '{"processed_workflows": {}, "last_sync": null}' > .workflow-sync-state.json
            echo "state_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Scan for new workflows
        id: scan
        run: |
          # Use input scan_path or default patterns
          SCAN_PATTERNS="${{ github.event.inputs.scan_path || 'projects/*/phase-12-final/*.json projects/*/phase-7-final/*.json' }}"
          
          echo "Scanning patterns: $SCAN_PATTERNS"
          
          # Find all workflow JSON files
          NEW_WORKFLOWS=""
          for pattern in $SCAN_PATTERNS; do
            for file in $pattern; do
              if [ -f "$file" ]; then
                # Check if already processed
                WORKFLOW_NAME=$(basename "$file" .json)
                IS_PROCESSED=$(jq -r --arg file "$file" '.processed_workflows[$file] // "false"' .workflow-sync-state.json)
                
                if [ "$IS_PROCESSED" = "false" ]; then
                  echo "Found new workflow: $file"
                  NEW_WORKFLOWS="$NEW_WORKFLOWS $file"
                fi
              fi
            done
          done
          
          if [ -z "$NEW_WORKFLOWS" ]; then
            echo "No new workflows found"
            echo "has_new_workflows=false" >> $GITHUB_OUTPUT
          else
            echo "New workflows found: $NEW_WORKFLOWS"
            echo "has_new_workflows=true" >> $GITHUB_OUTPUT
            echo "new_workflows=$NEW_WORKFLOWS" >> $GITHUB_OUTPUT
          fi

      - name: Process each new workflow
        if: steps.scan.outputs.has_new_workflows == 'true'
        run: |
          IFS=' ' read -ra WORKFLOWS <<< "${{ steps.scan.outputs.new_workflows }}"
          
          for workflow_file in "${WORKFLOWS[@]}"; do
            echo "Processing workflow: $workflow_file"
            
            # Extract workflow name
            WORKFLOW_NAME=$(basename "$workflow_file" .json)
            BRANCH_NAME="${{ env.BRANCH_PREFIX }}$WORKFLOW_NAME"
            
            # Validate workflow JSON
            echo "Validating workflow..."
            node scripts/validate-workflow.js "$workflow_file" > validation_report.txt 2>&1 || true
            
            if grep -q "Validation successful" validation_report.txt; then
              echo "✅ Workflow validation passed"
              
              # Create feature branch
              git checkout -b "$BRANCH_NAME" || git checkout "$BRANCH_NAME"
              
              # Copy workflow to workflows directory
              TARGET_FILE="${{ env.WORKFLOWS_DIR }}/$WORKFLOW_NAME.json"
              cp "$workflow_file" "$TARGET_FILE"
              
              # Stage and commit
              git add "$TARGET_FILE"
              git commit -m "feat: add $WORKFLOW_NAME workflow

- Generated from: $workflow_file
- Validated against workflow.md v2025.7
- Auto-generated by GitHub Actions

Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
              
              # Push branch
              git push origin "$BRANCH_NAME" --force
              
              # Create PR if auto_create_pr is true
              if [ "${{ github.event.inputs.auto_create_pr }}" = "true" ]; then
                # Create PR without labels first
                PR_URL=$(gh pr create \
                  --title "feat: Add $WORKFLOW_NAME workflow" \
                  --body-file .github/PULL_REQUEST_TEMPLATE/workflow.md \
                  --base main \
                  --head "$BRANCH_NAME" \
                  --assignee "${{ github.actor }}" 2>&1) || PR_URL=""
                
                if [ -n "$PR_URL" ] && [[ "$PR_URL" == *"github.com"* ]]; then
                  echo "PR created: $PR_URL"
                  # Extract PR number from URL
                  PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
                  
                  # Try to add labels if they exist (ignore errors)
                  for label in "workflow" "auto-generated"; do
                    gh label list --search "$label" | grep -q "^$label" && \
                      gh pr edit "$PR_NUMBER" --add-label "$label" 2>/dev/null || \
                      echo "Label '$label' not found or cannot be added"
                  done
                else
                  echo "PR already exists or creation failed"
                fi
              fi
              
              # Update state file
              jq --arg file "$workflow_file" --arg date "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                '.processed_workflows[$file] = $date' .workflow-sync-state.json > tmp.json && mv tmp.json .workflow-sync-state.json
              
              # Return to main branch
              git checkout main
            else
              echo "❌ Workflow validation failed for $workflow_file"
              cat validation_report.txt
            fi
          done
          
          # Commit state file updates
          git add .workflow-sync-state.json
          git commit -m "chore: update workflow sync state [skip ci]" || echo "No state changes to commit"
          git push origin main || echo "No changes to push"

      - name: Generate summary
        if: always()
        run: |
          echo "## Workflow Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.scan.outputs.has_new_workflows }}" = "true" ]; then
            echo "### 🆕 New Workflows Processed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            IFS=' ' read -ra WORKFLOWS <<< "${{ steps.scan.outputs.new_workflows }}"
            for workflow in "${WORKFLOWS[@]}"; do
              echo "- $workflow" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "### ✅ No new workflows to process" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 State" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          jq . .workflow-sync-state.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Upload validation reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: validation-reports
          path: validation_report.txt
          retention-days: 7