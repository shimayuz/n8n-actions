name: 'Create Workflow PR'
description: 'Creates a pull request for n8n workflow changes'
author: 'n8n-workflows'

inputs:
  workflow-file:
    description: 'Path to the workflow JSON file'
    required: true
  branch-name:
    description: 'Name of the feature branch'
    required: true
  base-branch:
    description: 'Base branch for the PR'
    required: false
    default: 'main'
  pr-title:
    description: 'Title for the pull request'
    required: false
  pr-body:
    description: 'Body content for the pull request'
    required: false
  labels:
    description: 'Comma-separated list of labels to add'
    required: false
    default: 'workflow,auto-generated'
  reviewers:
    description: 'Comma-separated list of reviewers'
    required: false
  assignees:
    description: 'Comma-separated list of assignees'
    required: false
  github-token:
    description: 'GitHub token for API operations'
    required: true

outputs:
  pr-url:
    description: 'URL of the created pull request'
    value: ${{ steps.create-pr.outputs.pr-url }}
  pr-number:
    description: 'Number of the created pull request'
    value: ${{ steps.create-pr.outputs.pr-number }}

runs:
  using: 'composite'
  steps:
    - name: Extract workflow metadata
      id: metadata
      shell: bash
      run: |
        WORKFLOW_NAME=$(jq -r '.name // "Unnamed Workflow"' "${{ inputs.workflow-file }}")
        WORKFLOW_DESC=$(jq -r '.description // ""' "${{ inputs.workflow-file }}")
        NODE_COUNT=$(jq '.nodes | length' "${{ inputs.workflow-file }}")
        
        echo "workflow_name=$WORKFLOW_NAME" >> $GITHUB_OUTPUT
        echo "workflow_desc=$WORKFLOW_DESC" >> $GITHUB_OUTPUT
        echo "node_count=$NODE_COUNT" >> $GITHUB_OUTPUT

    - name: Generate PR title
      id: pr-title
      shell: bash
      run: |
        if [ -n "${{ inputs.pr-title }}" ]; then
          TITLE="${{ inputs.pr-title }}"
        else
          TITLE="feat: Add ${{ steps.metadata.outputs.workflow_name }} workflow"
        fi
        echo "title=$TITLE" >> $GITHUB_OUTPUT

    - name: Generate PR body
      id: pr-body
      shell: bash
      run: |
        if [ -n "${{ inputs.pr-body }}" ]; then
          cat > pr_body.md << 'EOF'
        ${{ inputs.pr-body }}
        EOF
        else
          # Generate default PR body
          cat > pr_body.md << EOF
        ## 🤖 Automated n8n Workflow PR
        
        This pull request adds/updates the **${{ steps.metadata.outputs.workflow_name }}** workflow.
        
        ### 📋 Workflow Details
        
        - **Name**: ${{ steps.metadata.outputs.workflow_name }}
        - **Nodes**: ${{ steps.metadata.outputs.node_count }}
        - **Source**: ${{ inputs.workflow-file }}
        - **workflow.md compliance**: v2025.7 ✅
        
        EOF
        
          if [ -n "${{ steps.metadata.outputs.workflow_desc }}" ]; then
            echo "- **Description**: ${{ steps.metadata.outputs.workflow_desc }}" >> pr_body.md
          fi
        
          cat >> pr_body.md << 'EOF'
        
        ### 🔍 Validation Status
        
        - ✅ JSON syntax validated
        - ✅ Required fields present
        - ✅ Settings compliance verified
        - ✅ Node connections validated
        
        ### 📝 Testing Instructions
        
        1. Review the workflow JSON for correctness
        2. Import into your n8n instance for testing
        3. Verify all nodes are configured properly
        4. Test the workflow execution
        5. Check for any credential requirements
        
        ### 🔗 Related
        
        - [workflow.md](../../workflow.md) - Workflow development guidelines
        - [n8n Documentation](https://docs.n8n.io)
        
        ---
        
        *This PR was automatically generated by GitHub Actions*
        EOF
        fi

    - name: Create pull request
      id: create-pr
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
      run: |
        # Check if PR already exists
        EXISTING_PR=$(gh pr list --head "${{ inputs.branch-name }}" --base "${{ inputs.base-branch }}" --json number --jq '.[0].number' || echo "")
        
        if [ -n "$EXISTING_PR" ]; then
          echo "PR already exists: #$EXISTING_PR"
          PR_URL=$(gh pr view "$EXISTING_PR" --json url --jq '.url')
          echo "pr-url=$PR_URL" >> $GITHUB_OUTPUT
          echo "pr-number=$EXISTING_PR" >> $GITHUB_OUTPUT
          
          # Update PR if needed
          gh pr edit "$EXISTING_PR" \
            --title "${{ steps.pr-title.outputs.title }}" \
            --body-file pr_body.md || true
        else
          # Create new PR
          PR_OUTPUT=$(gh pr create \
            --title "${{ steps.pr-title.outputs.title }}" \
            --body-file pr_body.md \
            --base "${{ inputs.base-branch }}" \
            --head "${{ inputs.branch-name }}" \
            --draft=false)
          
          # Extract PR URL and number
          PR_URL="$PR_OUTPUT"
          PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
          
          echo "pr-url=$PR_URL" >> $GITHUB_OUTPUT
          echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
        fi

    - name: Add labels
      if: inputs.labels != ''
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
      run: |
        IFS=',' read -ra LABELS <<< "${{ inputs.labels }}"
        for label in "${LABELS[@]}"; do
          gh pr edit "${{ steps.create-pr.outputs.pr-number }}" --add-label "$label" || true
        done

    - name: Add reviewers
      if: inputs.reviewers != ''
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
      run: |
        IFS=',' read -ra REVIEWERS <<< "${{ inputs.reviewers }}"
        gh pr edit "${{ steps.create-pr.outputs.pr-number }}" --add-reviewer "${REVIEWERS[@]}" || true

    - name: Add assignees
      if: inputs.assignees != ''
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
      run: |
        IFS=',' read -ra ASSIGNEES <<< "${{ inputs.assignees }}"
        gh pr edit "${{ steps.create-pr.outputs.pr-number }}" --add-assignee "${ASSIGNEES[@]}" || true

    - name: Output PR details
      shell: bash
      run: |
        echo "✅ Pull request created/updated successfully!"
        echo "📍 PR URL: ${{ steps.create-pr.outputs.pr-url }}"
        echo "🔢 PR Number: #${{ steps.create-pr.outputs.pr-number }}"