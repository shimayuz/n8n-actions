{
  "name": "Claude Code to GitHub PR Automation",
  "version": 1,
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "github_owner",
              "name": "github_owner",
              "type": "string",
              "value": "shimayuz"
            },
            {
              "id": "repo_name", 
              "name": "repo_name",
              "type": "string",
              "value": "n8n-workflows"
            },
            {
              "id": "projects_path",
              "name": "projects_path",
              "type": "string", 
              "value": "/Users/heavenlykiss0820/n8n-workflows/projects"
            },
            {
              "id": "workflows_path",
              "name": "workflows_path",
              "type": "string",
              "value": "/Users/heavenlykiss0820/n8n-workflows/workflows"
            },
            {
              "id": "final_phase_dir",
              "name": "final_phase_dir",
              "type": "string",
              "value": "phase-12-final"
            }
          ]
        }
      },
      "id": "set-variables",
      "name": "Set Variables",
      "type": "n8n-nodes-base.set",
      "position": [200, 300],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "command": "find {{ $('Set Variables').item.json.projects_path }} -path '*/{{ $('Set Variables').item.json.final_phase_dir }}/*.json' -newer {{ $('Set Variables').item.json.projects_path }}/../.last_sync -type f"
      },
      "id": "find-new-workflows",
      "name": "Find New Workflows",
      "type": "n8n-nodes-base.executeCommand",
      "position": [400, 300],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "has-files",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              },
              "leftValue": "={{ $json.stdout }}"
            }
          ]
        }
      },
      "id": "check-has-new-files",
      "name": "Check Has New Files",
      "type": "n8n-nodes-base.filter",
      "position": [600, 300],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "fieldToSplitOut": "stdout",
        "options": {
          "destinationFieldName": "workflow_file"
        }
      },
      "id": "split-workflow-files",
      "name": "Split Workflow Files",
      "type": "n8n-nodes-base.splitOut",
      "position": [800, 300],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filePath": "={{ $json.workflow_file }}",
        "options": {}
      },
      "id": "read-workflow-content",
      "name": "Read Workflow Content",
      "type": "n8n-nodes-base.readBinaryFile",
      "position": [1000, 300],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "project_name",
              "name": "project_name",
              "type": "string",
              "value": "={{ $json.workflow_file.split('/')[6] }}"
            },
            {
              "id": "workflow_name",
              "name": "workflow_name",
              "type": "string",
              "value": "={{ $json.workflow_file.split('/').pop().replace('.json', '') }}"
            },
            {
              "id": "branch_name",
              "name": "branch_name", 
              "type": "string",
              "value": "feature/workflow-{{ $json.project_name }}-{{ new Date().getTime() }}"
            },
            {
              "id": "commit_message",
              "name": "commit_message",
              "type": "string",
              "value": "feat: Add {{ $json.project_name }} workflow ({{ $json.workflow_name }})\n\nProject: {{ $json.project_name }}\nPhase: 12-final\nAutomatically created from Claude Code\nGenerated at: {{ new Date().toISOString() }}"
            },
            {
              "id": "target_workflow_path",
              "name": "target_workflow_path",
              "type": "string",
              "value": "={{ $('Set Variables').item.json.workflows_path }}/{{ $json.project_name }}.json"
            }
          ]
        }
      },
      "id": "prepare-git-data",
      "name": "Prepare Git Data",
      "type": "n8n-nodes-base.set",
      "position": [1200, 300],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "command": "cp '{{ $json.workflow_file }}' '{{ $json.target_workflow_path }}'"
      },
      "id": "copy-to-workflows",
      "name": "Copy to Workflows Dir",
      "type": "n8n-nodes-base.executeCommand",
      "position": [1500, 300],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "repository",
        "operation": "createBranch",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Set Variables').item.json.github_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name", 
          "value": "={{ $('Set Variables').item.json.repo_name }}"
        },
        "branchName": "={{ $json.branch_name }}",
        "sha": ""
      },
      "id": "create-branch",
      "name": "Create Branch",
      "type": "n8n-nodes-base.github",
      "position": [1500, 300],
      "typeVersion": 1.1,
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "create",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Set Variables').item.json.github_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Set Variables').item.json.repo_name }}"
        },
        "filePath": "workflows/{{ $json.workflow_name }}.json",
        "fileContent": "={{ $('Read Workflow Content').item.binary.data.toString() }}",
        "commitMessage": "={{ $json.commit_message }}",
        "additionalParameters": {
          "branch": "={{ $json.branch_name }}"
        }
      },
      "id": "commit-workflow",
      "name": "Commit Workflow",
      "type": "n8n-nodes-base.github",
      "position": [1700, 300],
      "typeVersion": 1.1,
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "resource": "pullRequest",
        "operation": "create",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Set Variables').item.json.github_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Set Variables').item.json.repo_name }}"
        },
        "title": "ðŸ¤– Add {{ $json.workflow_name }} workflow (Auto-generated)",
        "body": "## ðŸš€ Auto-generated Workflow\n\n**Workflow Name:** `{{ $json.workflow_name }}`\n**Generated by:** Claude Code Automation\n**Timestamp:** {{ new Date().toISOString() }}\n\n### ðŸ“‹ Changes\n- Added new n8n workflow: `{{ $json.workflow_name }}.json`\n- Automatically created from Claude Code environment\n\n### âœ… Pre-merge Checklist\n- [x] Workflow JSON syntax validated\n- [x] Auto-generated commit message\n- [ ] Manual review required\n- [ ] Testing completed\n\n---\n*This PR was automatically created by the Claude Code to GitHub automation workflow.*",
        "head": "={{ $json.branch_name }}",
        "base": "main"
      },
      "id": "create-pull-request",
      "name": "Create Pull Request",
      "type": "n8n-nodes-base.github",
      "position": [1900, 300],
      "typeVersion": 1.1,
      "credentials": {
        "githubApi": {
          "id": "github-credentials",
          "name": "GitHub API"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "pr_url",
              "name": "pr_url",
              "type": "string",
              "value": "={{ $json.html_url }}"
            },
            {
              "id": "pr_number",
              "name": "pr_number",
              "type": "number",
              "value": "={{ $json.number }}"
            }
          ]
        }
      },
      "id": "extract-pr-data",
      "name": "Extract PR Data",
      "type": "n8n-nodes-base.set",
      "position": [2100, 300],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## ðŸŽ‰ Claude Code â†’ GitHub PR Automation Complete!\n\n### ðŸ“Š Results\n- **Workflow:** `{{ $('Prepare Git Data').item.json.workflow_name }}`\n- **Branch:** `{{ $('Prepare Git Data').item.json.branch_name }}`\n- **PR URL:** {{ $json.pr_url }}\n- **PR Number:** #{{ $json.pr_number }}\n\n### ðŸ”„ Next Steps\n1. Review the PR: {{ $json.pr_url }}\n2. Test the workflow if needed\n3. Merge when ready\n4. Automatic sync will deploy to n8n instance\n\n---\n*Generated at: {{ new Date().toISOString() }}*"
      },
      "id": "completion-summary",
      "name": "Completion Summary",
      "type": "n8n-nodes-base.stickyNote",
      "position": [2300, 300],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "touch {{ $('Set Variables').item.json.workflow_path }}/../.last_sync"
      },
      "id": "update-sync-marker",
      "name": "Update Sync Marker",
      "type": "n8n-nodes-base.executeCommand",
      "position": [2100, 500],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Set Variables": {
      "main": [
        [
          {
            "node": "Find New Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find New Workflows": {
      "main": [
        [
          {
            "node": "Check Has New Files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Has New Files": {
      "main": [
        [
          {
            "node": "Split Workflow Files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Workflow Files": {
      "main": [
        [
          {
            "node": "Read Workflow Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Workflow Content": {
      "main": [
        [
          {
            "node": "Prepare Git Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Git Data": {
      "main": [
        [
          {
            "node": "Copy to Workflows Dir",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Copy to Workflows Dir": {
      "main": [
        [
          {
            "node": "Create Branch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Branch": {
      "main": [
        [
          {
            "node": "Commit Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Commit Workflow": {
      "main": [
        [
          {
            "node": "Create Pull Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Pull Request": {
      "main": [
        [
          {
            "node": "Extract PR Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Sync Marker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PR Data": {
      "main": [
        [
          {
            "node": "Completion Summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": ["automation", "github", "claude-code"],
  "triggerCount": 0,
  "updatedAt": "2025-01-16T04:55:25.000Z",
  "versionId": "1"
}
