{
  "name": "Intelligent Learning Chatbot - Simple Version",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot",
        "responseMode": "responseNode",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [260, 340],
      "webhookId": "chatbot-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.message}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "input-validation",
      "name": "Input Validation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [480, 340]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{$json.sessionId || $uuid()}}",
              "type": "string"
            },
            {
              "id": "user-message",
              "name": "userMessage",
              "value": "={{$json.message}}",
              "type": "string"
            },
            {
              "id": "user-id",
              "name": "userId",
              "value": "={{$json.userId || 'anonymous'}}",
              "type": "string"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{$now.toISO()}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "prepare-data",
      "name": "Prepare Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [700, 260]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{$json.userMessage}}",
        "hasOutputParser": false,
        "options": {
          "systemMessage": "あなたは親切で知識豊富なAIアシスタントです。ユーザーの質問に対して、正確で役立つ回答を提供してください。回答は簡潔で理解しやすいものにしてください。",
          "maxIterations": 10,
          "returnIntermediateSteps": false
        }
      },
      "id": "ai-agent",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [920, 260]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo",
        "options": {
          "temperature": 0.7,
          "maxTokensToSample": 1000,
          "topP": 0.9
        }
      },
      "id": "openai-model",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [920, 420],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{$('Prepare Data').item.json.sessionId}}",
        "windowSize": 10
      },
      "id": "memory-buffer",
      "name": "Memory Buffer",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.2,
      "position": [920, 540]
    },
    {
      "parameters": {
        "operation": "create",
        "tableId": "conversations",
        "dataToSend": "defineBelow",
        "fieldsToSend": {
          "values": [
            {
              "field": "session_id",
              "fieldValue": "={{$('Prepare Data').item.json.sessionId}}"
            },
            {
              "field": "user_message",
              "fieldValue": "={{$('Prepare Data').item.json.userMessage}}"
            },
            {
              "field": "ai_response",
              "fieldValue": "={{$json.output}}"
            },
            {
              "field": "user_id",
              "fieldValue": "={{$('Prepare Data').item.json.userId}}"
            }
          ]
        },
        "options": {
          "returnFields": "id,created_at"
        }
      },
      "id": "save-conversation",
      "name": "Save Conversation",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1140, 260],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "response",
              "name": "response",
              "value": "={{$('AI Agent').item.json.output}}",
              "type": "string"
            },
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{$('Prepare Data').item.json.sessionId}}",
              "type": "string"
            },
            {
              "id": "conversation-id",
              "name": "conversationId",
              "value": "={{$json.id}}",
              "type": "string"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{$json.created_at || $now.toISO()}}",
              "type": "string"
            },
            {
              "id": "status",
              "name": "status",
              "value": "success",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1360, 260]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "respond-webhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1580, 260]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error-message",
              "name": "error",
              "value": "メッセージが空です。'message'フィールドに質問を入力してください。",
              "type": "string"
            },
            {
              "id": "error-status",
              "name": "status",
              "value": "error",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "validation-error",
      "name": "Validation Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [700, 420]
    },
    {
      "parameters": {
        "options": {
          "responseCode": 400
        }
      },
      "id": "validation-error-response",
      "name": "Validation Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [920, 420]
    },
    {
      "parameters": {
        "content": "## 🚀 シンプル版チャットボット\n\n### なぜシンプルに？\n- セッションチェックは不要（Memory Bufferが自動管理）\n- 複雑なセッション更新も不要\n- 会話履歴のロードも不要（Memory Bufferが保持）\n\n### 動作フロー:\n1. メッセージ受信\n2. AI Agentで処理（Memory Bufferで履歴管理）\n3. 会話を保存（ログ目的）\n4. レスポンス返却\n\n### メリット:\n- 高速レスポンス\n- シンプルな構成\n- メンテナンスが容易",
        "height": 350,
        "width": 400
      },
      "id": "simple-note",
      "name": "Simple Architecture Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [220, 540]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Input Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input Validation": {
      "main": [
        [
          {
            "node": "Prepare Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Validation Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Save Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Memory Buffer": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Save Conversation": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation Error": {
      "main": [
        [
          {
            "node": "Validation Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveDataSuccessExecution": "all",
    "saveDataErrorExecution": "all",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "",
    "timezone": "Asia/Tokyo"
  },
  "versionId": "simple-version",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "intelligent-learning-chatbot-simple",
    "description": "Simplified intelligent chatbot without complex session management"
  },
  "id": "intelligent-learning-chatbot-simple",
  "tags": [
    {
      "id": "chatbot",
      "name": "Chatbot"
    },
    {
      "id": "ai",
      "name": "AI"
    },
    {
      "id": "simple",
      "name": "Simple"
    }
  ]
}