{
  "name": "Intelligent Learning Chatbot - Phase 4 (Advanced Features)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot/v2",
        "responseMode": "responseNode",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "rawBody": false
        }
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [260, 340],
      "webhookId": "chatbot-v2-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": ""
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "message-check",
              "leftValue": "={{$json.message}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "image-check",
              "leftValue": "={{$json.image}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "audio-check",
              "leftValue": "={{$json.audio}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ]
        }
      },
      "id": "input-validation",
      "name": "Input Validation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [480, 340]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{$json.sessionId || $uuid()}}",
              "type": "string"
            },
            {
              "id": "input-type",
              "name": "inputType",
              "value": "={{$json.image ? 'image' : ($json.audio ? 'audio' : 'text')}}",
              "type": "string"
            },
            {
              "id": "user-message",
              "name": "userMessage",
              "value": "={{$json.message || 'ユーザーが' + ($json.image ? '画像' : '音声') + 'を送信しました'}}",
              "type": "string"
            },
            {
              "id": "media-url",
              "name": "mediaUrl",
              "value": "={{$json.image || $json.audio || null}}",
              "type": "string"
            },
            {
              "id": "user-id",
              "name": "userId",
              "value": "={{$json.userId || 'anonymous'}}",
              "type": "string"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{$now.toISO()}}",
              "type": "string"
            },
            {
              "id": "context",
              "name": "context",
              "value": "={{$json.context || {}}}",
              "type": "json"
            }
          ]
        },
        "options": {}
      },
      "id": "prepare-multimodal",
      "name": "Prepare Multimodal Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [700, 260]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.inputType}}",
              "value2": "text"
            }
          ]
        }
      },
      "id": "route-by-type",
      "name": "Route by Input Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 2,
      "position": [920, 260]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "model": "gpt-4-vision-preview",
        "imageInput": "url",
        "imageUrl": "={{$json.mediaUrl}}",
        "text": "この画像について説明してください。{{$json.userMessage}}",
        "options": {
          "maxTokens": 1000
        }
      },
      "id": "vision-analyzer",
      "name": "Vision Analyzer",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [1140, 140],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "model": "whisper-1",
        "binaryData": false,
        "audioUrl": "={{$json.mediaUrl}}",
        "options": {
          "language": "ja",
          "responseFormat": "text"
        }
      },
      "id": "audio-transcriber",
      "name": "Audio Transcriber",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [1140, 380],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{$json.userMessage || $json.transcription || $json.imageAnalysis}}",
        "hasOutputParser": false,
        "options": {
          "systemMessage": "あなたは高度なマルチモーダルAIアシスタントです。\n\n## 能力:\n- テキスト、画像、音声を理解\n- 文脈を踏まえた高度な分析\n- リアルタイムデータの活用\n- カスタムツールの実行\n\n## 重要な指示:\n- 入力形式に応じて適切に応答\n- 画像分析結果を自然に説明\n- 音声入力への配慮\n- 感情やトーンを理解して応答",
          "maxIterations": 10,
          "returnIntermediateSteps": false
        }
      },
      "id": "advanced-ai-agent",
      "name": "Advanced AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [1360, 260]
    },
    {
      "parameters": {
        "model": "gpt-4-turbo-preview",
        "options": {
          "temperature": 0.7,
          "maxTokensToSample": 2000,
          "topP": 0.9
        }
      },
      "id": "gpt4-model",
      "name": "GPT-4 Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [1360, 420],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{$('Prepare Multimodal Data').item.json.sessionId}}",
        "windowSize": 20,
        "contextWindowLength": 8000
      },
      "id": "enhanced-memory",
      "name": "Enhanced Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.2,
      "position": [1360, 540]
    },
    {
      "parameters": {
        "name": "web_search",
        "description": "Search the web for real-time information",
        "method": "GET",
        "url": "https://api.search.brave.com/res/v1/web/search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{$input}}"
            },
            {
              "name": "count",
              "value": "5"
            }
          ]
        }
      },
      "id": "web-search-tool",
      "name": "Web Search Tool",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [1360, 660],
      "credentials": {
        "httpHeaderAuth": {
          "id": "brave-search-credentials",
          "name": "Brave Search API"
        }
      }
    },
    {
      "parameters": {
        "name": "calculator",
        "description": "Perform mathematical calculations",
        "code": "return eval($input);"
      },
      "id": "calculator-tool",
      "name": "Calculator Tool",
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1,
      "position": [1360, 780]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "merge-processed",
      "name": "Merge Processed Data",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [1580, 260]
    },
    {
      "parameters": {
        "operation": "create",
        "tableId": "conversations",
        "dataToSend": "defineBelow",
        "fieldsToSend": {
          "values": [
            {
              "field": "session_id",
              "fieldValue": "={{$('Prepare Multimodal Data').item.json.sessionId}}"
            },
            {
              "field": "user_message",
              "fieldValue": "={{$('Prepare Multimodal Data').item.json.userMessage}}"
            },
            {
              "field": "ai_response",
              "fieldValue": "={{$('Advanced AI Agent').item.json.output}}"
            },
            {
              "field": "user_id",
              "fieldValue": "={{$('Prepare Multimodal Data').item.json.userId}}"
            },
            {
              "field": "context_type",
              "fieldValue": "={{$('Prepare Multimodal Data').item.json.inputType}}"
            },
            {
              "field": "metadata",
              "fieldValue": "={{JSON.stringify({inputType: $('Prepare Multimodal Data').item.json.inputType, mediaUrl: $('Prepare Multimodal Data').item.json.mediaUrl, context: $('Prepare Multimodal Data').item.json.context})}}"
            }
          ]
        },
        "options": {
          "returnFields": "id,created_at"
        }
      },
      "id": "save-enhanced",
      "name": "Save Enhanced Conversation",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1800, 260],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO analytics (session_id, event_type, event_data, created_at)\nVALUES ($1, $2, $3, NOW())\nRETURNING id;",
        "options": {
          "queryParams": "={{$('Prepare Multimodal Data').item.json.sessionId}},{{$('Prepare Multimodal Data').item.json.inputType}},{{JSON.stringify({responseTime: Date.now() - Date.parse($('Prepare Multimodal Data').item.json.timestamp), modelUsed: 'gpt-4', toolsUsed: $('Advanced AI Agent').item.json.toolsUsed || []})}}"
        }
      },
      "id": "track-analytics",
      "name": "Track Analytics",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [2020, 140],
      "credentials": {
        "postgres": {
          "id": "postgres-credentials",
          "name": "PostgreSQL"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "response",
              "name": "response",
              "value": "={{$('Advanced AI Agent').item.json.output}}",
              "type": "string"
            },
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{$('Prepare Multimodal Data').item.json.sessionId}}",
              "type": "string"
            },
            {
              "id": "conversation-id",
              "name": "conversationId",
              "value": "={{$('Save Enhanced Conversation').item.json.id}}",
              "type": "string"
            },
            {
              "id": "input-type",
              "name": "inputType",
              "value": "={{$('Prepare Multimodal Data').item.json.inputType}}",
              "type": "string"
            },
            {
              "id": "tools-used",
              "name": "toolsUsed",
              "value": "={{$('Advanced AI Agent').item.json.toolsUsed || []}}",
              "type": "json"
            },
            {
              "id": "processing-time",
              "name": "processingTime",
              "value": "={{Date.now() - Date.parse($('Prepare Multimodal Data').item.json.timestamp)}}",
              "type": "number"
            },
            {
              "id": "status",
              "name": "status",
              "value": "success",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "format-advanced-response",
      "name": "Format Advanced Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [2240, 260]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "respond-webhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2460, 260]
    },
    {
      "parameters": {
        "content": "## 🚀 Phase 4 - Advanced Features\n\n### 新機能:\n1. **マルチモーダル対応**\n   - テキスト\n   - 画像 (GPT-4 Vision)\n   - 音声 (Whisper)\n\n2. **高度なAI機能**\n   - GPT-4 Turbo\n   - 拡張メモリ (8000 tokens)\n   - リアルタイムWeb検索\n   - 計算ツール\n\n3. **分析とトラッキング**\n   - 処理時間測定\n   - ツール使用履歴\n   - イベント分析\n\n### API使用例:\n```json\n// テキスト\n{\n  \"message\": \"質問内容\"\n}\n\n// 画像\n{\n  \"image\": \"https://example.com/image.jpg\",\n  \"message\": \"この画像について教えて\"\n}\n\n// 音声\n{\n  \"audio\": \"https://example.com/audio.mp3\"\n}\n```",
        "height": 500,
        "width": 400
      },
      "id": "phase4-note",
      "name": "Phase 4 Features Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [180, 680]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error-message",
              "name": "error",
              "value": "入力データが空です。message、image、またはaudioフィールドが必要です。",
              "type": "string"
            },
            {
              "id": "error-status",
              "name": "status",
              "value": "error",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "validation-error",
      "name": "Validation Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [700, 420]
    },
    {
      "parameters": {
        "options": {
          "responseCode": 400
        }
      },
      "id": "validation-error-response",
      "name": "Validation Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [920, 420]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Input Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input Validation": {
      "main": [
        [
          {
            "node": "Prepare Multimodal Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Validation Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Multimodal Data": {
      "main": [
        [
          {
            "node": "Route by Input Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route by Input Type": {
      "main": [
        [
          {
            "node": "Advanced AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Vision Analyzer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Audio Transcriber",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vision Analyzer": {
      "main": [
        [
          {
            "node": "Merge Processed Data",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Audio Transcriber": {
      "main": [
        [
          {
            "node": "Merge Processed Data",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Advanced AI Agent": {
      "main": [
        [
          {
            "node": "Merge Processed Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT-4 Model": {
      "ai_languageModel": [
        [
          {
            "node": "Advanced AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Memory": {
      "ai_memory": [
        [
          {
            "node": "Advanced AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Web Search Tool": {
      "ai_tool": [
        [
          {
            "node": "Advanced AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator Tool": {
      "ai_tool": [
        [
          {
            "node": "Advanced AI Agent",
            "type": "ai_tool",
            "index": 1
          }
        ]
      ]
    },
    "Merge Processed Data": {
      "main": [
        [
          {
            "node": "Save Enhanced Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Enhanced Conversation": {
      "main": [
        [
          {
            "node": "Track Analytics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Track Analytics": {
      "main": [
        [
          {
            "node": "Format Advanced Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Advanced Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validation Error": {
      "main": [
        [
          {
            "node": "Validation Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveDataSuccessExecution": "all",
    "saveDataErrorExecution": "all",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "",
    "timezone": "Asia/Tokyo"
  },
  "versionId": "phase-4-advanced",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "intelligent-learning-chatbot-phase4",
    "description": "Phase 4: Multimodal support, advanced AI features, and analytics"
  },
  "id": "intelligent-learning-chatbot-phase4",
  "tags": [
    {
      "id": "chatbot",
      "name": "Chatbot"
    },
    {
      "id": "ai",
      "name": "AI"
    },
    {
      "id": "phase4",
      "name": "Phase 4"
    },
    {
      "id": "multimodal",
      "name": "Multimodal"
    },
    {
      "id": "advanced",
      "name": "Advanced"
    }
  ]
}