{
  "name": "Intelligent Learning Chatbot - Phase 3 (Feedback System)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot/feedback",
        "responseMode": "responseNode",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "feedback-webhook",
      "name": "Feedback Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [260, 340],
      "webhookId": "chatbot-feedback-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.sessionId}}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{$json.conversationId}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "validate-input",
      "name": "Validate Feedback Input",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [480, 340]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "feedback-id",
              "name": "feedbackId",
              "value": "={{$uuid()}}",
              "type": "string"
            },
            {
              "id": "session-id",
              "name": "sessionId",
              "value": "={{$json.sessionId}}",
              "type": "string"
            },
            {
              "id": "conversation-id",
              "name": "conversationId",
              "value": "={{$json.conversationId}}",
              "type": "string"
            },
            {
              "id": "user-id",
              "name": "userId",
              "value": "={{$json.userId || 'anonymous'}}",
              "type": "string"
            },
            {
              "id": "rating",
              "name": "rating",
              "value": "={{$json.rating}}",
              "type": "number"
            },
            {
              "id": "is-helpful",
              "name": "isHelpful",
              "value": "={{$json.isHelpful}}",
              "type": "boolean"
            },
            {
              "id": "feedback-text",
              "name": "feedbackText",
              "value": "={{$json.feedbackText || ''}}",
              "type": "string"
            },
            {
              "id": "feedback-type",
              "name": "feedbackType",
              "value": "={{$json.feedbackType || ($json.rating >= 4 ? 'positive' : $json.rating <= 2 ? 'negative' : 'suggestion')}}",
              "type": "string"
            },
            {
              "id": "improved-response",
              "name": "improvedResponse",
              "value": "={{$json.improvedResponse || ''}}",
              "type": "string"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{$now.toISO()}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "prepare-feedback",
      "name": "Prepare Feedback Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [700, 260]
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "feedback",
        "columns": "id,conversation_id,session_id,user_id,rating,is_helpful,feedback_text,feedback_type,metadata",
        "options": {
          "returnFields": "*"
        }
      },
      "id": "save-feedback",
      "name": "Save Feedback",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [920, 260],
      "credentials": {
        "postgres": {
          "id": "postgres-credentials",
          "name": "PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$('Prepare Feedback Data').item.json.improvedResponse}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "has-improvement",
      "name": "Has Improvement?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1140, 260]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Get original conversation for context\nSELECT \n  c.id,\n  c.user_message,\n  c.ai_response,\n  c.created_at\nFROM conversations c\nWHERE c.id = $1::uuid;",
        "options": {
          "queryParams": "={{$('Prepare Feedback Data').item.json.conversationId}}"
        }
      },
      "id": "get-conversation",
      "name": "Get Original Conversation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1360, 140],
      "credentials": {
        "postgres": {
          "id": "postgres-credentials",
          "name": "PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "learning_improvements",
        "columns": "feedback_id,original_response,improved_response,improvement_type",
        "options": {
          "returnFields": "id,created_at"
        }
      },
      "id": "save-improvement",
      "name": "Save Learning Improvement",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1580, 140],
      "credentials": {
        "postgres": {
          "id": "postgres-credentials",
          "name": "PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "以下のフィードバックと改善案を分析して、今後の回答改善に活用できる学習ポイントを抽出してください：\n\n元の質問: {{$json.user_message}}\n元の回答: {{$json.ai_response}}\nユーザーフィードバック: {{$('Prepare Feedback Data').item.json.feedbackText}}\n改善された回答: {{$('Prepare Feedback Data').item.json.improvedResponse}}\n\n以下の形式で学習ポイントを出力してください：\n1. 改善点の要約\n2. 今後適用すべきパターン\n3. 避けるべきパターン",
        "hasOutputParser": false,
        "options": {
          "systemMessage": "あなたはフィードバック分析の専門家です。ユーザーフィードバックから学習ポイントを抽出し、AIの応答品質向上に貢献します。",
          "maxIterations": 5
        }
      },
      "id": "analyze-feedback",
      "name": "Analyze Feedback",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [1800, 140]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo",
        "options": {
          "temperature": 0.3,
          "maxTokensToSample": 500
        }
      },
      "id": "analysis-model",
      "name": "Analysis Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [1800, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Calculate feedback statistics\nSELECT * FROM get_feedback_trends(7);",
        "options": {}
      },
      "id": "get-trends",
      "name": "Get Feedback Trends",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1360, 380],
      "credentials": {
        "postgres": {
          "id": "postgres-credentials",
          "name": "PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "merge-results",
      "name": "Merge Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [2020, 260]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "success",
              "name": "success",
              "value": "=true",
              "type": "boolean"
            },
            {
              "id": "message",
              "name": "message",
              "value": "フィードバックを受け付けました。ご協力ありがとうございます。",
              "type": "string"
            },
            {
              "id": "feedback-id",
              "name": "feedbackId",
              "value": "={{$('Save Feedback').item.json.id}}",
              "type": "string"
            },
            {
              "id": "rating",
              "name": "rating",
              "value": "={{$('Prepare Feedback Data').item.json.rating}}",
              "type": "number"
            },
            {
              "id": "improvement-saved",
              "name": "improvementSaved",
              "value": "={{$('Has Improvement?').item.json.improvedResponse ? true : false}}",
              "type": "boolean"
            },
            {
              "id": "learning-points",
              "name": "learningPoints",
              "value": "={{$('Analyze Feedback').item.json.output || null}}",
              "type": "string"
            },
            {
              "id": "trends",
              "name": "trends",
              "value": "={{$('Get Feedback Trends').item.json}}",
              "type": "json"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{$now.toISO()}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [2240, 260]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "respond-success",
      "name": "Respond Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2460, 260]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "error",
              "name": "error",
              "value": "必須フィールドが不足しています。sessionIdとconversationIdは必須です。",
              "type": "string"
            },
            {
              "id": "status",
              "name": "status",
              "value": "error",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "format-error",
      "name": "Format Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [700, 420]
    },
    {
      "parameters": {
        "options": {
          "responseCode": 400
        }
      },
      "id": "respond-error",
      "name": "Respond Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [920, 420]
    }
  ],
  "connections": {
    "Feedback Webhook": {
      "main": [
        [
          {
            "node": "Validate Feedback Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Feedback Input": {
      "main": [
        [
          {
            "node": "Prepare Feedback Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Feedback Data": {
      "main": [
        [
          {
            "node": "Save Feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Feedback": {
      "main": [
        [
          {
            "node": "Has Improvement?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Feedback Trends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Improvement?": {
      "main": [
        [
          {
            "node": "Get Original Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Original Conversation": {
      "main": [
        [
          {
            "node": "Save Learning Improvement",
            "type": "main",
            "index": 0
          },
          {
            "node": "Analyze Feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Learning Improvement": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Feedback": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analysis Model": {
      "ai_languageModel": [
        [
          {
            "node": "Analyze Feedback",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get Feedback Trends": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Results": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Respond Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Error": {
      "main": [
        [
          {
            "node": "Respond Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveDataSuccessExecution": "all",
    "saveDataErrorExecution": "all",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "",
    "timezone": "Asia/Tokyo"
  },
  "versionId": "phase-3-feedback",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "intelligent-learning-chatbot"
  },
  "id": "intelligent-learning-chatbot-phase3-feedback",
  "tags": [
    {
      "name": "chatbot",
      "createdAt": "2025-08-07T13:00:00.000Z"
    },
    {
      "name": "phase3",
      "createdAt": "2025-08-07T13:00:00.000Z"
    },
    {
      "name": "feedback",
      "createdAt": "2025-08-07T13:00:00.000Z"
    },
    {
      "name": "learning",
      "createdAt": "2025-08-07T13:00:00.000Z"
    }
  ]
}