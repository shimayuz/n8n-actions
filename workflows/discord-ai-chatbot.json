{
  "name": "Discord AI ChatBot",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "discord-bot-webhook",
        "responseMode": "onReceived",
        "responseData": "firstEntryJson",
        "options": {}
      },
      "id": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [250, 300],
      "webhookId": "discord-bot-webhook",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Discordからのデータを解析\nconst discordData = $input.first().json;\n\n// デバッグ用にデータ構造を確認\nconsole.log('Discord Data:', JSON.stringify(discordData, null, 2));\n\n// Bot IDを環境変数から取得（ワークフロー変数を使用）\nconst botId = $vars.DISCORD_BOT_ID || \"YOUR_BOT_ID_HERE\";\n\n// メンションチェック（Discord Webhook形式）\n// Discordの標準的なWebhook形式に対応\nconst content = discordData.content || '';\nconst mentionPattern = new RegExp(`<@!?${botId}>`);\nconst isBotMentioned = mentionPattern.test(content);\n\nif (!isBotMentioned && discordData.type !== 'INTERACTION_CREATE') {\n  throw new Error(\"Bot was not mentioned\");\n}\n\n// メッセージからメンションを除去してクリーンなテキストを取得\nconst cleanContent = content.replace(/<@!?\\d+>/g, '').trim();\n\n// Discord APIに必要な情報を整理\nreturn {\n  json: {\n    content: cleanContent,\n    channel_id: discordData.channel_id,\n    guild_id: discordData.guild_id,\n    author: {\n      id: discordData.author?.id || discordData.user?.id,\n      username: discordData.author?.username || discordData.user?.username\n    },\n    message_id: discordData.id,\n    webhook_token: discordData.webhook_token // Discord Interaction用\n  }\n};"
      },
      "id": "b2c3d4e5-f6g7-h8i9-j0k1-l2m3n4o5p6q7",
      "name": "Parse Discord Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "complete",
        "model": {
          "value": "gpt-4o-mini",
          "mode": "list"
        },
        "prompt": {
          "messages": [
            {
              "role": "system",
              "content": "あなたは親切で役立つDiscord Botアシスタントです。簡潔で分かりやすい回答を心がけてください。"
            },
            {
              "role": "user", 
              "content": "={{ $json.content }}"
            }
          ]
        },
        "options": {
          "maxTokens": 500,
          "temperature": 0.7
        }
      },
      "id": "c3d4e5f6-g7h8-i9j0-k1l2-m3n4o5p6q7r8",
      "name": "OpenAI",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [650, 300],
      "credentials": {
        "openAiApi": {
          "id": "{{OPENAI_CREDENTIAL_ID}}",
          "name": "OpenAI account"
        }
      },
      "onError": "continueRegularOutput",
      "retryOnFail": true,
      "maxTries": 3,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "jsCode": "// OpenAIのレスポンスとDiscord情報を結合\nconst parseData = $('Parse Discord Data').item.json;\nconst openAiResponse = $json;\n\n// OpenAIのレスポンス構造を確認\nlet aiMessage = '';\nif (openAiResponse.choices && openAiResponse.choices[0]) {\n  aiMessage = openAiResponse.choices[0].message?.content || openAiResponse.choices[0].text || '';\n} else if (openAiResponse.message?.content) {\n  aiMessage = openAiResponse.message.content;\n} else {\n  aiMessage = 'エラー: AI応答を取得できませんでした。';\n}\n\n// Discord送信用のデータを作成\nreturn {\n  json: {\n    guild_id: parseData.guild_id,\n    channel_id: parseData.channel_id,\n    reply_message: `<@${parseData.author.id}> ${aiMessage}`,\n    author_id: parseData.author.id\n  }\n};"
      },
      "id": "e5f6g7h8-i9j0-k1l2-m3n4-o5p6q7r8s9t0",
      "name": "Format Discord Reply",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [750, 300]
    },
    {
      "parameters": {
        "authentication": "botToken",
        "resource": "message",
        "operation": "send",
        "guildId": {
          "value": "={{ $json.guild_id }}",
          "mode": "id"
        },
        "channelId": {
          "value": "={{ $json.channel_id }}",
          "mode": "id"
        },
        "message": "={{ $json.reply_message }}",
        "options": {}
      },
      "id": "d4e5f6g7-h8i9-j0k1-l2m3-n4o5p6q7r8s9",
      "name": "Send to Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [950, 300],
      "credentials": {
        "discordBotApi": {
          "id": "{{DISCORD_CREDENTIAL_ID}}",
          "name": "Discord Bot account"
        }
      },
      "onError": "continueRegularOutput"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Parse Discord Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Discord Data": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Format Discord Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Discord Reply": {
      "main": [
        [
          {
            "node": "Send to Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "dc4ec53-002",
  "meta": {
    "instanceId": "n8n"
  },
  "tags": ["discord", "chatbot", "openai", "gpt-4o-mini"],
  "pinData": {},
  "staticData": null
}